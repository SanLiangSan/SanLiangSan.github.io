<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Typeco</title>
  
  <subtitle>别告诉别人你不开心 | 勤奋点做事 | 爱美食 | 爱健身 | 爱学习</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://typeco.cn/"/>
  <updated>2020-12-22T16:01:01.448Z</updated>
  <id>http://typeco.cn/</id>
  
  <author>
    <name>Xu XingLing</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>设计模式之简单工厂模式</title>
    <link href="http://typeco.cn/posts/eeb5bd44/"/>
    <id>http://typeco.cn/posts/eeb5bd44/</id>
    <published>2020-12-21T01:21:35.000Z</published>
    <updated>2020-12-22T16:01:01.448Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><code>简单工厂模式</code> 属于创建型模式，在简单工厂模式中用于被创建实例的方法通常为<code>静态方法</code>,又叫<code>静态工厂方法</code> <a id="more"></a></p><h2 id="结构与业务场景"><a href="#结构与业务场景" class="headerlink" title="结构与业务场景"></a>结构与业务场景</h2><h3 id="工厂（Factory）"><a href="#工厂（Factory）" class="headerlink" title="工厂（Factory）"></a>工厂（Factory）</h3><p> <code>核心部分</code>，负责实现创建所有产品的内部逻辑，工厂类可以被外界直接调用，创建所需对象。</p><h3 id="抽象产品类（Product）"><a href="#抽象产品类（Product）" class="headerlink" title="抽象产品类（Product）"></a>抽象产品类（Product）</h3><p>工厂类所创建的所有对象的父类，封装了产品对象的公共方法，所有的具体产品为其子类对象</p><h3 id="具体产品类（ConcreteProduct）"><a href="#具体产品类（ConcreteProduct）" class="headerlink" title="具体产品类（ConcreteProduct）"></a>具体产品类（ConcreteProduct）</h3><p>简单工厂模式的创建目标，所有被创建的对象都是某个具体类的实例。它要实现抽象产品类中声明的方法。</p><h2 id="实际运用"><a href="#实际运用" class="headerlink" title="实际运用"></a>实际运用</h2><p>这里我以 <code>精臣云打印</code>的<code>画板元素</code> 的实现作为案例进行讲述，如何实现简单工厂模式。我们的画板需要添加 <code>文本</code>、<code>条码</code>、  <code>二维码</code> 、<code>表格</code> 、<code>边框图形</code>、<code>流水号</code> 、<code>时间日期</code> 等等,那么针对这些元素他们都有<code>绘制</code>、<code>移动</code>、<code>缩放</code>、<code>旋转</code>、<code>辅助线</code>  等等功能，所以这些元素就是具体的实例，而这些动作就是抽象的方法实现。</p><ul><li>首先，我们不考虑工厂类，工厂类我们放到最后去实现，我们先实现 <code>抽象产品类</code> 在我的项目里我叫它 <code>JCElementBaseView</code>，这是一个抽象产品类，用户不用初始化它，即使你初始化它也没有意义，因为它并没有什么实质的东西展示，它能做的就是对子类提供重写的方法和实现。<div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs objectivec" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; background: rgb(34, 26, 15); color: rgb(211, 175, 134); padding: 0.5em; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">@class</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(240, 100, 49); word-wrap: inherit !important; word-break: inherit !important;">JCElementBaseView</span>;</span><br><span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">@protocol</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(240, 100, 49); word-wrap: inherit !important; word-break: inherit !important;">JCElementProtocol</span>&nbsp;&lt;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(240, 100, 49); word-wrap: inherit !important; word-break: inherit !important;">NSObject</span>&gt;</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">@optional</span><br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)elementViewTouchBegin:(JCElementBaseView&nbsp;*)element;<br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)elementViewDragBegin:(JCElementBaseView&nbsp;*)element;<br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)elementViewDoubleClick:(JCElementBaseView&nbsp;*)element;<br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)elementViewFrameShouldChange:(JCElementBaseView&nbsp;*)element;<br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)elementViewFrameDidChange:(JCElementBaseView&nbsp;*)element;<br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)elementViewDidClick:(JCElementBaseView&nbsp;*)element;<br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">@end</span><br><br><span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">@interface</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(240, 100, 49); word-wrap: inherit !important; word-break: inherit !important;">JCElementBaseView</span>&nbsp;:&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(240, 100, 49); word-wrap: inherit !important; word-break: inherit !important;">UIView</span></span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">/**&nbsp;旋转角度&nbsp;*/</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">@property</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">nonatomic</span>,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">assign</span>)&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>&nbsp;rotate;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">/**&nbsp;是否选中&nbsp;*/</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">@property</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">nonatomic</span>,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">assign</span>)&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">BOOL</span>&nbsp;selected;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">/**&nbsp;锁定&nbsp;*/</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">@property</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">nonatomic</span>,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">assign</span>)&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">BOOL</span>&nbsp;isLock;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">/**&nbsp;元素的id：时间戳，精确到毫秒&nbsp;*/</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">@property</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">nonatomic</span>,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">copy</span>)&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">NSString</span>&nbsp;*elementId;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">/**&nbsp;代理&nbsp;*/</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">@property</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">nonatomic</span>,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">weak</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">id</span>&lt;JCElementProtocol&gt;&nbsp;delegate;<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">/**&nbsp;for&nbsp;override&nbsp;*/</span><br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)zoomDragMoving:&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">UIControl</span>&nbsp;*)&nbsp;c&nbsp;withEvent:touches;<br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)zoomDragOutside:&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">UIControl</span>&nbsp;*)&nbsp;c&nbsp;withEvent:touches;<br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)zoomDragEnded:&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">UIControl</span>&nbsp;*)&nbsp;c&nbsp;withEvent:touches;<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">/**&nbsp;元素最小宽度---子类实现&nbsp;毫米&nbsp;*/</span><br>-&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>)minWidth_mm;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">/**&nbsp;元素最小高度---子类实现&nbsp;毫米&nbsp;*/</span><br>-&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>)minHeight_mm;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">/**&nbsp;元素最大宽度---子类实现&nbsp;毫米&nbsp;*/</span><br>-&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>)maxWidth_mm;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">/**&nbsp;元素最大高度---子类实现&nbsp;毫米&nbsp;*/</span><br>-&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>)maxHeight_mm;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">/**&nbsp;获取旋转角度为0时的frame&nbsp;*/</span><br>-&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">CGRect</span>)getOrignalFrame;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">/**&nbsp;刷新图像&nbsp;*/</span><br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)reloadSDKImage;<br><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">@end</span><br></code></pre></div></li><li>接下来就是针对我们特定的元素的一些特定的实现一一去构建子类（<code>具体产品类</code>），这里我们以 <code>条码</code> 为例作为大概展示其子类是如何实现的,基本可以看出，都是以实现<code>抽象父类</code> 的方法为主。<div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs objectivec" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; background: rgb(34, 26, 15); color: rgb(211, 175, 134); padding: 0.5em; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">@implementation</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(240, 100, 49); word-wrap: inherit !important; word-break: inherit !important;">JCElementBarCode</span></span><br><br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">instancetype</span>)init&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>&nbsp;=&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">super</span>&nbsp;init])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.backgroundColor&nbsp;=&nbsp;[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">UIColor</span>&nbsp;clearColor];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>&nbsp;initUI];<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>;<br>}<br><br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)initUI&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>&nbsp;insertSubview:<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.barCodeImageView&nbsp;atIndex:<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">0</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.barCodeImageView&nbsp;mas_remakeConstraints:^(MASConstraintMaker&nbsp;*make)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;make.size.equalTo(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;make.top.left.equalTo(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;}];<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.barCodeImageView&nbsp;addSubview:<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.errorButton];<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.errorButton&nbsp;mas_makeConstraints:^(MASConstraintMaker&nbsp;*make)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;make.size.mas_equalTo((<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">CGSize</span>){<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">116</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">24</span>});<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;make.center.equalTo(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.barCodeImageView);<br>&nbsp;&nbsp;&nbsp;&nbsp;}];<br>}<br><br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)reloadSDKImage&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">NSString</span>&nbsp;*value&nbsp;=&nbsp;[DrawBoardInfo&nbsp;currentValueFor:<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.excelValue&nbsp;selectRowIndex:<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.excelIndex&nbsp;elementId:<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.elementId];<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(IsExcelString(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.excelValue))&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_text&nbsp;=&nbsp;value;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;resize</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>&nbsp;minWidth&nbsp;=&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>&nbsp;minWidth_mm]*DrawBoardInfo.mm2pxScale;<br>&nbsp;&nbsp;&nbsp;&nbsp;rotate(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.width&nbsp;&lt;&nbsp;minWidth)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.width&nbsp;=&nbsp;minWidth;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>&nbsp;drawBarCodeImage];<br>}<br><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(220, 57, 88); word-wrap: inherit !important; word-break: inherit !important;">#pragma&nbsp;mark&nbsp;--&nbsp;set</span><br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)setText:(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">NSString</span>&nbsp;*)text&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;_text&nbsp;=&nbsp;text;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">/**&nbsp;根据文本画一维码&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>&nbsp;reloadSDKImage];<br>}<br><br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)setConfigure:(JCElementBarCodeConfigure&nbsp;*)configure&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;_configure&nbsp;=&nbsp;configure;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">/**&nbsp;根据条码类型重新布局&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>&nbsp;drawBarCodeImage];<br>}<br><br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)setExcelIndex:(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">NSInteger</span>)excelIndex&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">super</span>&nbsp;setExcelIndex:excelIndex];<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>&nbsp;reloadSDKImage];<br>}<br><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(220, 57, 88); word-wrap: inherit !important; word-break: inherit !important;">#pragma&nbsp;mark&nbsp;--&nbsp;getImage</span><br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)drawBarCodeImage&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.text&nbsp;||&nbsp;!<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.configure)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">return</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;[JCDrawCodeManager&nbsp;drawBarCodeWithElement:<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>&nbsp;result:^(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">BOOL</span>&nbsp;success,&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">UIImage</span>&nbsp;*&nbsp;_Nonnull&nbsp;image,&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">NSString</span>&nbsp;*&nbsp;_Nonnull&nbsp;errorMsg)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.barCodeImageView.image&nbsp;&nbsp;=&nbsp;image;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>&nbsp;showErrorMsg:errorMsg];<br>&nbsp;&nbsp;&nbsp;&nbsp;}];<br>}<br><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(220, 57, 88); word-wrap: inherit !important; word-break: inherit !important;">#pragma&nbsp;mark&nbsp;-&nbsp;&nbsp;DragMove</span><br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)zoomDragMoving:&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">UIControl</span>&nbsp;*)&nbsp;c&nbsp;withEvent:touches&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">super</span>&nbsp;zoomDragMoving:c&nbsp;withEvent:touches];<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>&nbsp;drawBarCodeImage];<br>}<br><br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)zoomDragOutside:&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">UIControl</span>&nbsp;*)&nbsp;c&nbsp;withEvent:touches&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">super</span>&nbsp;zoomDragOutside:c&nbsp;withEvent:touches];<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>&nbsp;drawBarCodeImage];<br>}<br><br>-&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)zoomDragEnded:&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">UIControl</span>&nbsp;*)&nbsp;c&nbsp;withEvent:touches&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">super</span>&nbsp;zoomDragEnded:c&nbsp;withEvent:touches];<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>&nbsp;drawBarCodeImage];<br>}<br><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(220, 57, 88); word-wrap: inherit !important; word-break: inherit !important;">#pragma&nbsp;mark&nbsp;--&nbsp;lazy</span><br>-&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">UIImageView</span>&nbsp;*)barCodeImageView&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!_barCodeImageView)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_barCodeImageView&nbsp;=&nbsp;[[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">UIImageView</span>&nbsp;alloc]&nbsp;init];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_barCodeImageView.contentMode&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">UIViewContentModeScaleToFill</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_barCodeImageView.backgroundColor&nbsp;=&nbsp;[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">UIColor</span>&nbsp;clearColor];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;最近邻居算法，图像放大不模糊</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_barCodeImageView.layer.magnificationFilter&nbsp;=&nbsp;kCAFilterNearest;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;_barCodeImageView;<br>}<br><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(220, 57, 88); word-wrap: inherit !important; word-break: inherit !important;">#pragma&nbsp;mark&nbsp;--&nbsp;FrameProtocol</span><br>-&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>)minWidth_mm&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.configure.codeType&nbsp;==&nbsp;JCCodeType_EAN13)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">13</span>*<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">2</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.configure.codeType&nbsp;==&nbsp;JCCodeType_EAN8)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">7</span>*<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">2</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.configure.codeType&nbsp;==&nbsp;JCCodeType_UPCA)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">11</span>*<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">2</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.configure.codeType&nbsp;==&nbsp;JCCodeType_UPCE)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">7</span>*<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">2</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.configure.codeType&nbsp;==&nbsp;JCCodeType_ITF25&nbsp;||&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.configure.codeType&nbsp;==&nbsp;JCCodeType_CODEBAR)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">2</span>*<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">2</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;MAX(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.text.length*<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">2</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">2</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br>-&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>)minHeight_mm&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">self</span>.configure.textHeight&nbsp;+&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">3</span>;<br>}<br><br>-&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>)maxWidth_mm&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">200</span>;<br>}<br><br>-&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>)maxHeight_mm&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">100</span>;<br>}<br></code></pre></div></li><li>既然具体产品类都有了，剩下就是构建 <code>工厂类</code> ，这里我是用的一个单独的<code>Manager</code> 的类来实现元素的构建的 <code>JCDefaultElementManager</code>。<div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; background: rgb(34, 26, 15); color: rgb(211, 175, 134); padding: 0.5em; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">@implementation&nbsp;JCDefaultElementManager<br><br>+&nbsp;(JCElementBaseView&nbsp;*)defaultElementWithClass:(<span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">Class</span>)<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(240, 100, 49); word-wrap: inherit !important; word-break: inherit !important;">eClass</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;CGFloat&nbsp;mm2pxScale&nbsp;=&nbsp;DrawBoardInfo.mm2pxScale;<br>&nbsp;&nbsp;&nbsp;&nbsp;JCElementBaseView&nbsp;*element;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;([eClass&nbsp;isEqual:[JCElementText&nbsp;<span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">class</span>]])&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JCElementText&nbsp;*temp&nbsp;=&nbsp;[JCElementText&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">new</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.placeHolder&nbsp;=&nbsp;XY_LANGUAGE_TITLE_NAMED(@<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(136, 155, 74); word-wrap: inherit !important; word-break: inherit !important;">""</span>,element_text_placeholder);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.text&nbsp;=&nbsp;@<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(136, 155, 74); word-wrap: inherit !important; word-break: inherit !important;">""</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.configure&nbsp;=&nbsp;[JCElementTextConfigure&nbsp;defaultConfigure];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.frame&nbsp;=&nbsp;(CGRect){<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">4</span>*DrawBoardInfo.mm2pxScale*text_default_font_mm_size,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">24</span>};<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;([eClass&nbsp;isEqual:[JCElementTextImage&nbsp;<span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">class</span>]])&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JCElementTextImage&nbsp;*temp&nbsp;=&nbsp;[JCElementTextImage&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">new</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.frame&nbsp;=&nbsp;(CGRect){<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">4.2</span>*DrawBoardInfo.mm2pxScale*text_default_font_mm_size,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">24</span>};<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.placeHolder&nbsp;=&nbsp;XY_LANGUAGE_TITLE_NAMED(@<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(136, 155, 74); word-wrap: inherit !important; word-break: inherit !important;">""</span>,element_text_placeholder);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.text&nbsp;=&nbsp;XY_LANGUAGE_TITLE_NAMED(@<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(136, 155, 74); word-wrap: inherit !important; word-break: inherit !important;">""</span>,element_text_placeholder);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.configure&nbsp;=&nbsp;[JCElementTextConfigure&nbsp;defaultConfigure];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;([eClass&nbsp;isEqual:[JCElementBarCode&nbsp;<span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">class</span>]])&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JCElementBarCode&nbsp;*temp&nbsp;=&nbsp;[JCElementBarCode&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">new</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.frame&nbsp;=&nbsp;(CGRect){<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">20</span>*DrawBoardInfo.mm2pxScale,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>*DrawBoardInfo.mm2pxScale};<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.configure&nbsp;=&nbsp;[JCElementBarCodeConfigure&nbsp;defaultConfigure];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.text&nbsp;=&nbsp;@<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(136, 155, 74); word-wrap: inherit !important; word-break: inherit !important;">"123456"</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;([eClass&nbsp;isEqual:[JCElementQRCode&nbsp;<span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">class</span>]])&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JCElementQRCode&nbsp;*temp&nbsp;=&nbsp;[JCElementQRCode&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">new</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.frame&nbsp;=&nbsp;(CGRect){<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>*mm2pxScale,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>*mm2pxScale};<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.codeType&nbsp;=&nbsp;JCCodeType_QRCODE;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.qrCodeString&nbsp;=&nbsp;@<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(136, 155, 74); word-wrap: inherit !important; word-break: inherit !important;">"123456"</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;([eClass&nbsp;isEqual:[JCElementGraph&nbsp;<span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">class</span>]])&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JCElementGraph&nbsp;*temp&nbsp;=&nbsp;[JCElementGraph&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">new</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.frame&nbsp;=&nbsp;(CGRect){<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>*DrawBoardInfo.mm2pxScale,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>*DrawBoardInfo.mm2pxScale};<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.configure&nbsp;=&nbsp;[JCEleBoxConfigure&nbsp;defaultConfigure];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;([eClass&nbsp;isEqual:[JCElementSerialNumber&nbsp;<span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">class</span>]])&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JCElementSerialNumber&nbsp;*temp&nbsp;=&nbsp;[JCElementSerialNumber&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">new</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.frame&nbsp;=&nbsp;(CGRect){<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">145</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">58</span>};<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.styleConfigure&nbsp;=&nbsp;[JCSerialStyleConfigure&nbsp;defaultConfigure];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JCElementTextConfigure&nbsp;*configure&nbsp;=&nbsp;[JCElementTextConfigure&nbsp;defaultConfigure];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;configure.textAlignment&nbsp;=&nbsp;NSTextAlignmentCenter;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.configure&nbsp;=&nbsp;configure;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;([eClass&nbsp;isEqual:[JCElementTime&nbsp;<span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">class</span>]])&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JCElementTime&nbsp;*temp&nbsp;=&nbsp;[JCElementTime&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">new</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.frame&nbsp;=&nbsp;(CGRect){<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">200</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">29</span>};<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.timeConfigure&nbsp;=&nbsp;[JCEleTimeConfigure&nbsp;defaultConfigure];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.configure&nbsp;=&nbsp;[JCElementTextConfigure&nbsp;defaultConfigure];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;([eClass&nbsp;isEqual:[JCElementSheet&nbsp;<span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">class</span>]])&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JCElementSheet&nbsp;*temp&nbsp;=&nbsp;[JCElementSheet&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">new</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.configure&nbsp;=&nbsp;[JCSheetConfigure&nbsp;defaultConfigure];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.left&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.top&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;([eClass&nbsp;isEqual:[JCElementLogoView&nbsp;<span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">class</span>]])&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JCElementLogoView&nbsp;*temp&nbsp;=&nbsp;[JCElementLogoView&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">new</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;([eClass&nbsp;isEqual:[JCElementLine&nbsp;<span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">class</span>]])&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JCElementLine&nbsp;*temp&nbsp;=&nbsp;[[JCElementLine&nbsp;alloc]&nbsp;init];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.frame&nbsp;=&nbsp;(CGRect){<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>*DrawBoardInfo.mm2pxScale,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">0.4</span>*DrawBoardInfo.mm2pxScale};<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp.configure&nbsp;=&nbsp;[JCEleLineConfigure&nbsp;defaultConfigure];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;NSInteger&nbsp;count&nbsp;=&nbsp;DrawBoardInfo.addElementIndex;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(count&nbsp;&gt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">8</span>)&nbsp;count&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">if</span>(count&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">0</span>){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.left&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.top&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">else</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.left&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>&nbsp;+&nbsp;count*<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">16</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element.top&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">10</span>&nbsp;+&nbsp;count*<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(247, 154, 50); word-wrap: inherit !important; word-break: inherit !important;">16</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(214, 186, 173); word-wrap: inherit !important; word-break: inherit !important;">/**&nbsp;设置时间戳&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;element.elementId&nbsp;=&nbsp;[XYTool&nbsp;randomElementId];<br>&nbsp;&nbsp;&nbsp;&nbsp;DrawBoardInfo.addElementIndex++;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;element;<br>}<br></code></pre></div></li></ul><p>工厂类就很简单了，用户只用关心需要创建什么类型的元素，直接传入相应元素的 <code>类名</code> 即可，也很显然这个是静态方法，所以也叫 <code>静态工厂类</code>，接下来我们来看看业务场景中用户究竟是如何创建和使用元素的:</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; background: rgb(34, 26, 15); color: rgb(211, 175, 134); padding: 0.5em; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">-(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)add_wenben{<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(220, 57, 88); word-wrap: inherit !important; word-break: inherit !important;">self&nbsp;addElement:Element(JCElementTextImage)</span>];<br>}<br><br>-(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)add_yiweima{<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(220, 57, 88); word-wrap: inherit !important; word-break: inherit !important;">self&nbsp;addElement:Element(JCElementBarCode)</span>];<br>}<br><br>-(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)add_erweima{<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(220, 57, 88); word-wrap: inherit !important; word-break: inherit !important;">self&nbsp;addElement:Element(JCElementQRCode)</span>];<br>}<br><br>-(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)add_liushuihao{<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(220, 57, 88); word-wrap: inherit !important; word-break: inherit !important;">self&nbsp;addElement:Element(JCElementSerialNumber)</span>];<br>}<br><br>-(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)add_shijian{<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(220, 57, 88); word-wrap: inherit !important; word-break: inherit !important;">self&nbsp;addElement:Element(JCElementTime)</span>];<br>}<br><br>-(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)add_xingzhuang{<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(220, 57, 88); word-wrap: inherit !important; word-break: inherit !important;">self&nbsp;addElement:Element(JCElementGraph)</span>];<br>}<br><br>-(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(152, 103, 106); word-wrap: inherit !important; word-break: inherit !important;">void</span>)add_xiantiao{<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(220, 57, 88); word-wrap: inherit !important; word-break: inherit !important;">self&nbsp;addElement:Element(JCElementLine)</span>];<br>}<br></code></pre></div><p>是不是及其简单和清爽，需要往画板上添加一个元素，直接简单的调用一行代码指定一个元素类名即可实现，不用关心内部如何实现的，即使对<code>缩放</code>等操作过程需要了解，我们也提供了相应的 <code>代理</code>，这些都是基于自己的业务需求进行扩展，任何一个<code>设计模式</code> 都不是 <code>为了设计而设计</code>,我们要为了更简单更快速的处理我们的业务需求，这才是根本。</p><h2 id="简单工厂优缺点和适用环境"><a href="#简单工厂优缺点和适用环境" class="headerlink" title="简单工厂优缺点和适用环境"></a>简单工厂优缺点和适用环境</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>用户只需要知道具体工厂的名称即可得到所要的产品，无需知道具体产品的创建过程。</li><li>工厂类包含必要的判断逻辑，可以决定在什么时候创建哪一个产品的实例，客户端可以免除直接创建产品对象的职责。（可以结合反射等思想，配置文件等等更加优化实现）</li><li>灵活性强，对于新产品的创建，只需多写一个相应的工厂类</li><li>典型的解耦框架，高层模块只需要知道产品的抽象类，无需关心其他实现类</li></ul><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul><li>类的个数容易过多，增加复杂度</li><li>增加了系统的抽象性和理解难度</li><li>抽象产品只能生产一种产品，此弊端可使用 <code>抽象工厂模式</code> 来解决</li></ul><h3 id="适用环境"><a href="#适用环境" class="headerlink" title="适用环境"></a>适用环境</h3><ul><li>工厂类负责创建对象比较少，因为这样不会造成工厂方法中的业务逻辑过于负责，比如上述的画板案例中，元素的种类就是那么多，不会无限制的进行扩张，在可预见范围内都是可以接受的。</li><li>客户端只知道传入工厂类的参数，对于如何创建对象并不关心，俗称只管拿去用。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们使用设计模式的目的无非就是三个</p><ul><li>缩短开发时间</li><li>降低维护成本</li><li>在应用程序之间和内部轻松集成，减少耦合</li></ul><p>具体什么时候使用何种设计模式因项目和业务需求而不同，这是个人针对<code>设计模式</code> 的第一篇文章，后续还会针对性的出一些个人对其他设计模式的理解和应用，之所以写这系列的文章也是希望能对自己的架构之路有所提升，同时如果能帮助到其他人就更好了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;&lt;code&gt;简单工厂模式&lt;/code&gt; 属于创建型模式，在简单工厂模式中用于被创建实例的方法通常为&lt;code&gt;静态方法&lt;/code&gt;,又叫&lt;code&gt;静态工厂方法&lt;/code&gt;
    
    </summary>
    
    
    
      <category term="设计模式" scheme="http://typeco.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>OpenGL：正背面剔除、深度测试</title>
    <link href="http://typeco.cn/posts/4c2cf919/"/>
    <id>http://typeco.cn/posts/4c2cf919/</id>
    <published>2020-07-13T14:27:05.000Z</published>
    <updated>2020-07-13T14:27:28.593Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="OpenGL" scheme="http://typeco.cn/tags/OpenGL/"/>
    
  </entry>
  
  <entry>
    <title>OpenGL：渲染之固定着色器</title>
    <link href="http://typeco.cn/posts/b5a93e1/"/>
    <id>http://typeco.cn/posts/b5a93e1/</id>
    <published>2020-07-12T14:53:47.000Z</published>
    <updated>2020-07-13T14:22:39.657Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="OpenGL" scheme="http://typeco.cn/tags/OpenGL/"/>
    
  </entry>
  
  <entry>
    <title>OpenGL：渲染的基础</title>
    <link href="http://typeco.cn/posts/7f3a747e/"/>
    <id>http://typeco.cn/posts/7f3a747e/</id>
    <published>2020-07-10T07:43:06.000Z</published>
    <updated>2020-07-13T16:12:36.972Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="OpenGL渲染流程解析"><a href="#OpenGL渲染流程解析" class="headerlink" title="OpenGL渲染流程解析"></a>OpenGL渲染流程解析</h2><ul><li><code>attrubutes</code> 属性只可传给 <code>Vertex Shader(顶点着色器)</code></li><li>通过<code>顶点着色器</code>向 <code>Primitive(几何图元)</code> 传递 <code>Position</code> 和 <code>Outs</code></li><li>可以通过 <code>OpenGl API</code> 向顶点着色器或者片元着色器</li><li><code>Texture Data(纹理数据)</code>也可以同时传递给顶点着色器和片元着色器，但是真正用它的是片元着色器。 <a id="more"></a></li></ul><h3 id="正投影"><a href="#正投影" class="headerlink" title="正投影"></a>正投影</h3><img src="https://s1.ax1x.com/2020/07/13/UtuXwQ.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><h3 id="透视投影"><a href="#透视投影" class="headerlink" title="透视投影"></a>透视投影</h3><img src="https://s1.ax1x.com/2020/07/13/UtuOeg.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p><code>GLFrustum</code>  类通过<code>SetPerspective</code> 方法为我们构建一个平截头体。</p><p><code>GLFrustum:SetPerspective(float fFov,float fAspect,float fNear,float fFar)</code>:</p><ul><li><p><code>fFov</code>： 垂直方向上的视场角度</p></li><li><p><code>fAspect</code>:窗口的宽度与高度的纵横比</p></li><li><p><code>fNear</code>:近裁剪面距离</p></li><li><p><code>fFar</code>:远裁剪面距离</p><p>纵横比 = 宽（w）/高（h）</p></li></ul><h2 id="OpenGL固定着色器"><a href="#OpenGL固定着色器" class="headerlink" title="OpenGL固定着色器"></a>OpenGL固定着色器</h2><ul><li><p>存储器初始化</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;定义</span><br>GLShaderManager&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shaderManager;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;构造</span><br>shaderManager.InitializeStockShaders();<br></code></pre></div></li><li><p>单元着色器</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs makefile" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(29, 31, 33); color: rgb(197, 200, 198); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">GLShaderManager::UserStockShader(GLT_SHADER_IDENTITY,GLfloat&nbsp;vColor[4]);</span><br><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数1:&nbsp;存储着⾊器种类-单元着⾊器</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数2:&nbsp;颜⾊</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">使⽤场景:&nbsp;绘制默认OpenGL&nbsp;坐标系(-1,1)下图形.&nbsp;图形所有⽚段都会以⼀种颜⾊填充&nbsp;</span><br></code></pre></div></li><li><p>平面着色器</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs makefile" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(29, 31, 33); color: rgb(197, 200, 198); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">GLShaderManager::UserStockShader(GLT_SHADER_FLAT,GLfloat&nbsp;mvp[16],GLfloat&nbsp;vColor[4]);</span><br><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数1:&nbsp;存储着⾊器种类-平⾯着⾊器</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数2:&nbsp;允许变化的4*4矩阵</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数3:&nbsp;颜⾊</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">使⽤场景:&nbsp;在绘制图形时,&nbsp;可以应⽤变换(模型/投影变化).</span><br></code></pre></div></li><li><p>上色着色器</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs makefile" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(29, 31, 33); color: rgb(197, 200, 198); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">GLShaderManager::UserStockShader(GLT_SHADER_SHADED,GLfloat&nbsp;mvp[16]);</span><br><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数1:&nbsp;存储着⾊器种类-上⾊着⾊器</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数2:&nbsp;允许变化的4*4矩阵</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">使⽤场景:&nbsp;在绘制图形时,&nbsp;可以应⽤变换(模型/投影变化)&nbsp;颜⾊将会平滑地插⼊到顶点之间称为平滑着⾊.&nbsp;</span><br></code></pre></div></li><li><p>默认光源着色器</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs makefile" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(29, 31, 33); color: rgb(197, 200, 198); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">GLShaderManager::UserStockShader(GLT_SHADER_DEFAULT_LIGHT,GLfloat&nbsp;mvMatrix[16],GLfloat&nbsp;pMatrix[16],GLfloat&nbsp;vColor[4]);</span><br><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数1:&nbsp;存储着⾊器种类-默认光源着⾊器</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数2:&nbsp;模型4*4矩阵</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数3:&nbsp;投影4*4矩阵</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数4:&nbsp;颜⾊值</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">使⽤场景:&nbsp;在绘制图形时,&nbsp;可以应⽤变换(模型/投影变化)&nbsp;这种着⾊器会使绘制的图形产⽣阴影和光照的效果.</span><br></code></pre></div></li><li><p>点光源着色器</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs makefile" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(29, 31, 33); color: rgb(197, 200, 198); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">GLShaderManager::UserStockShader(GLT_SHADER_POINT_LIGHT_DIEF,GLfloat&nbsp;mvMatrix[16],GLfloat&nbsp;pMatrix[16],GLfloat&nbsp;vLightPos[3],GLfloat&nbsp;vColor[4]);&nbsp;</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数1:&nbsp;存储着⾊器种类-点光源着⾊器</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数2:&nbsp;模型4*4矩阵</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数3:&nbsp;投影4*4矩阵</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数4:&nbsp;点光源的位置</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数5:&nbsp;颜⾊值</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">使⽤场景:&nbsp;在绘制图形时,&nbsp;可以应⽤变换(模型/投影变化)&nbsp;这种着⾊器会使绘制的图形产⽣阴影和光照的效果.它与默认光源着⾊器⾮常类似,区别只是光源位置可能是特定的</span><br></code></pre></div></li><li><p>纹理替换矩阵着色器</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs makefile" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(29, 31, 33); color: rgb(197, 200, 198); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">GLShaderManager::UserStockShader(GLT_SHADER_TEXTURE_REPLACE,GLfloat&nbsp;mvMatrix[16],GLint&nbsp;nTextureUnit);</span><br><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数1:&nbsp;存储着⾊器种类-纹理替换矩阵着⾊器</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数2:&nbsp;模型4*4矩阵</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数3:&nbsp;纹理单元</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">使⽤场景:&nbsp;在绘制图形时,&nbsp;可以应⽤变换(模型/投影变化)这种着⾊器通过给定的模型视图投影矩阵.使⽤纹理单元来进⾏颜⾊填充.其中每个像素点的颜⾊是从纹理中获取.</span><br></code></pre></div></li><li><p>纹理调整着色器</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs makefile" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(29, 31, 33); color: rgb(197, 200, 198); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">GLShaderManager::UserStockShader(GLT_SHADER_TEXTURE_MODULATE,GLfloat&nbsp;mvMatrix[16],GLfloat&nbsp;vColor[4],GLint&nbsp;nTextureUnit);</span><br><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数1:&nbsp;存储着⾊器种类-纹理调整着⾊器</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数2:&nbsp;模型4*4矩阵</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数3:&nbsp;颜⾊值</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数4:&nbsp;纹理单元</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">使⽤场景:&nbsp;在绘制图形时,&nbsp;可以应⽤变换(模型/投影变化)这种着⾊器通过给定的模型视图投影矩阵.&nbsp;着⾊器将⼀个基本⾊乘以⼀个取⾃纹理单元nTextureUnit&nbsp;的纹理.将颜⾊与纹理进⾏颜⾊混合后才填充到⽚段中.&nbsp;</span><br></code></pre></div></li><li><p>纹理光源着色器</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs makefile" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(29, 31, 33); color: rgb(197, 200, 198); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">GLShaderManager::UserStockShader(GLT_SHADER_TEXTURE_POINT_LIGHT_DIEF,GLfloat&nbsp;mvMatrix[16],GLfloat&nbsp;pMatrix[16],GLfloat&nbsp;vLightPos[3],GLfloat&nbsp;vBaseColor[4],GLint&nbsp;nTextureUnit);</span><br><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数1:&nbsp;存储着⾊器种类-纹理光源着⾊器</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数2:&nbsp;模型4*4矩阵</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数3:&nbsp;投影4*4矩阵</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数4:&nbsp;点光源位置</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数5:&nbsp;颜⾊值(⼏何图形的基本⾊)&nbsp;</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">参数6:&nbsp;纹理单元</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(222, 147, 95); word-wrap: inherit !important; word-break: inherit !important;">使⽤场景:&nbsp;在绘制图形时,&nbsp;可以应⽤变换(模型/投影变化)这种着⾊器通过给定的模型视图投影矩阵.&nbsp;着⾊器将⼀个纹理通过漫反射照明计算进⾏调整(相乘).&nbsp;</span><br></code></pre></div></li></ul><p>以上整理出部分固定着色器，在后面我们可能会针对性的用到，这些不用记，只需要了解即可，知道怎么用即可。</p><h2 id="OpenGL基本图元"><a href="#OpenGL基本图元" class="headerlink" title="OpenGL基本图元"></a>OpenGL基本图元</h2><img src="https://s1.ax1x.com/2020/07/13/UtlQXV.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p><code>OpenGL</code>中的基本图元就是<code>点</code>、<code>线</code>、<code>三角形</code>等构成所有的图形，在这些基本元素组合中又抽象出一些基本图元，如上图所示。</p><ul><li><p><code>GL_POINTS</code> :每个顶点都在屏幕上都是单独的点</p></li><li><p><code>GL_LINES</code>:每一对顶点定义一个线段</p></li><li><p><code>GL_LINE_LOOP</code>:和<code>GL_LINE_STRIP</code>相同，但是最后一个顶点和第一个顶点连接起来了</p></li><li><p><code>GL_TRIANGLES</code>:每3个顶点定义一个新的三角形</p></li><li><p><code>GL_TRIANGLE_STRIP</code>:公用一个条带（strip）上的顶点的一组三角形</p></li><li><p><code>GL_TRIANGLE_FAN</code>:以一个圆点为中心呈扇形排列，公用相邻顶点的一组三角形</p></li></ul><h3 id="OpenGL中的点和线"><a href="#OpenGL中的点和线" class="headerlink" title="OpenGL中的点和线"></a>OpenGL中的点和线</h3><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs go" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(29, 31, 33); color: rgb(197, 200, 198); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(112, 120, 128); word-wrap: inherit !important; word-break: inherit !important;">//1.最简单也是最常⽤的&nbsp;4.0f,表示点的⼤⼩</span><br>&nbsp;glPointSize(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(204, 102, 102); word-wrap: inherit !important; word-break: inherit !important;">4.0f</span>);&nbsp;<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(112, 120, 128); word-wrap: inherit !important; word-break: inherit !important;">//2.设置点的⼤⼩范围和点与点之间的间隔</span><br>GLfloat&nbsp;sizes[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(204, 102, 102); word-wrap: inherit !important; word-break: inherit !important;">2</span>]&nbsp;=&nbsp;{<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(204, 102, 102); word-wrap: inherit !important; word-break: inherit !important;">2.0f</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(204, 102, 102); word-wrap: inherit !important; word-break: inherit !important;">4.0f</span>};&nbsp;<br>GLfloat&nbsp;step&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(204, 102, 102); word-wrap: inherit !important; word-break: inherit !important;">1.0f</span>;&nbsp;<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(112, 120, 128); word-wrap: inherit !important; word-break: inherit !important;">//3.获取点⼤⼩范围和最⼩步⻓</span><br>glGetFloatv(GL_POINT_SIZE_RANGE&nbsp;,sizes);&nbsp;<br>glGetFloatv(GL_POINT_GRAULARITY&nbsp;,&amp;step);&nbsp;<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(112, 120, 128); word-wrap: inherit !important; word-break: inherit !important;">//4.通过使⽤程序点⼤⼩模式来设置点⼤⼩</span><br>glEnable(GL_PROGRAM_POINT_SIZE);&nbsp;<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(112, 120, 128); word-wrap: inherit !important; word-break: inherit !important;">//5.这种模式下允许我们通过编程在顶点着⾊器或⼏何着⾊器中设置点⼤⼩。着⾊器内建变量：</span><br>gl_PointSize(内建变量)，并且可以在着⾊器源码直接写<br>gl_PointSize&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(204, 102, 102); word-wrap: inherit !important; word-break: inherit !important;">5.0</span>&nbsp;<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(112, 120, 128); word-wrap: inherit !important; word-break: inherit !important;">//6.&nbsp;设置线段宽度</span><br>glLineWidth(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(204, 102, 102); word-wrap: inherit !important; word-break: inherit !important;">2.5f</span>);<br></code></pre></div><h3 id="OpenGL工具类GLBatch"><a href="#OpenGL工具类GLBatch" class="headerlink" title="OpenGL工具类GLBatch"></a>OpenGL工具类GLBatch</h3><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(29, 31, 33); color: rgb(197, 200, 198); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">GLBatch&nbsp;,是在GLTools中包含的⼀个简单容器类.&nbsp;<br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(129, 162, 190); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;GLBatch::Begain(GLeunm&nbsp;primitive,GLuint&nbsp;nVerts,GLuint&nbsp;nTexttureUnints&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(204, 102, 102); word-wrap: inherit !important; word-break: inherit !important;">0</span>);&nbsp;<br><br>参数<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(204, 102, 102); word-wrap: inherit !important; word-break: inherit !important;">1</span>：图元<br>参数<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(204, 102, 102); word-wrap: inherit !important; word-break: inherit !important;">2</span>：顶点数<br>参数<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(204, 102, 102); word-wrap: inherit !important; word-break: inherit !important;">3</span>：⼀组或者<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(204, 102, 102); word-wrap: inherit !important; word-break: inherit !important;">2</span>组纹理坐标（可选）<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(112, 120, 128); word-wrap: inherit !important; word-break: inherit !important;">//复制顶点数据(⼀个由3分量x,y,z顶点组成的数组)&nbsp;</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(129, 162, 190); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;GLBatch::CopyVerterxData3f(GLfloat&nbsp;*vVerts);&nbsp;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(112, 120, 128); word-wrap: inherit !important; word-break: inherit !important;">//复制表⾯法线数据</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(129, 162, 190); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;GLBatch::CopyNormalDataf(GLfloat&nbsp;*vNorms);&nbsp;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(112, 120, 128); word-wrap: inherit !important; word-break: inherit !important;">//复制颜⾊数据</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(129, 162, 190); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;GLBatch::CopyColorData4f(GLfloat&nbsp;*vColors);&nbsp;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(112, 120, 128); word-wrap: inherit !important; word-break: inherit !important;">//复制纹理坐标数据</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(129, 162, 190); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;GLBatch::CopyTexCoordData2f(GLFloat&nbsp;*vTextCoords,&nbsp;GLuint&nbsp;uiTextureLayer);&nbsp;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(112, 120, 128); word-wrap: inherit !important; word-break: inherit !important;">//结束数据复制</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(129, 162, 190); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;GLBatch::End(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(129, 162, 190); word-wrap: inherit !important; word-break: inherit !important;">void</span>);&nbsp;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(112, 120, 128); word-wrap: inherit !important; word-break: inherit !important;">//绘制图形</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(129, 162, 190); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;GLBatch::Draw(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(129, 162, 190); word-wrap: inherit !important; word-break: inherit !important;">void</span>);<br></code></pre></div><p>至此，OpenGL渲染的基础我们总结完毕，包含其渲染架构，以及部分的固定着色器、OpenGL的基本图元构成，以及<code>GLBatch</code>的定义和使用。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;OpenGL渲染流程解析&quot;&gt;&lt;a href=&quot;#OpenGL渲染流程解析&quot; class=&quot;headerlink&quot; title=&quot;OpenGL渲染流程解析&quot;&gt;&lt;/a&gt;OpenGL渲染流程解析&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;attrubutes&lt;/code&gt; 属性只可传给 &lt;code&gt;Vertex Shader(顶点着色器)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;顶点着色器&lt;/code&gt;向 &lt;code&gt;Primitive(几何图元)&lt;/code&gt; 传递 &lt;code&gt;Position&lt;/code&gt; 和 &lt;code&gt;Outs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;可以通过 &lt;code&gt;OpenGl API&lt;/code&gt; 向顶点着色器或者片元着色器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Texture Data(纹理数据)&lt;/code&gt;也可以同时传递给顶点着色器和片元着色器，但是真正用它的是片元着色器。
    
    </summary>
    
    
    
      <category term="OpenGL" scheme="http://typeco.cn/tags/OpenGL/"/>
    
  </entry>
  
  <entry>
    <title>OpenGL：图像的渲染、撕裂、掉帧</title>
    <link href="http://typeco.cn/posts/86ed34e7/"/>
    <id>http://typeco.cn/posts/86ed34e7/</id>
    <published>2020-07-09T02:40:19.000Z</published>
    <updated>2020-07-09T06:26:15.035Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>作为一个IOS开发者，日常我们更多的是接触业务，我们做的最多的是<code>addSubView:</code> 等等，那么我们的视图就显示出来了。那么它们是如何显示出来的，计算机内部是如何工作的，其底层原理是什么，有时候会卡顿掉帧，这些又究竟是什么原因？这篇文章来大概讲述一下这些内容。<a id="more"></a></p><h2 id="CPU和GPU"><a href="#CPU和GPU" class="headerlink" title="CPU和GPU"></a>CPU和GPU</h2><h3 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h3><blockquote><p>现代计算机整个系统的运算核心、控制核心</p></blockquote><img src="https://s1.ax1x.com/2020/07/09/UefeDP.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><h3 id="GPU"><a href="#GPU" class="headerlink" title="GPU"></a>GPU</h3><blockquote><p>可进行绘图运算工作的专用微处理器，是连接计算机和显示中断的纽带</p></blockquote><img src="https://s1.ax1x.com/2020/07/09/UefmHf.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>可以发现 <code>GPU</code> 内部包含众多的<code>ALU（算术逻辑单元）</code> ，它是计算机内部芯片处理算术运算和逻辑运算的核心，由上图可见<code>GPU</code> 的运算能力远超<code>CPU</code> ,因为GPU处理的是大批量的并发运算，而CPU则更多的是串行的逻辑运算。</p><h2 id="计算机渲染原理"><a href="#计算机渲染原理" class="headerlink" title="计算机渲染原理"></a>计算机渲染原理</h2><p>首先我们得了解计算机是如何把图像渲染出来的：</p><img src="https://s1.ax1x.com/2020/07/09/Ueh6zj.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>现代的屏幕都是通过上述类似逐行扫描而把图像显示到屏幕上，而在其底层则是通过一个 <code>帧缓冲区</code> 映射到 <code>屏幕显示器</code> 上：</p><img src="https://s1.ax1x.com/2020/07/09/UehgQs.md.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>计算机系统内部结构：</p><img src="https://s1.ax1x.com/2020/07/09/Ue5Ev9.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>也就是通过<code>CPU</code>对图像的数据进行处理，交给显示处理器，显示处理器再处理成图像数据存储到<code>帧缓冲区</code> 等待显示控制器的信号，将<code>帧缓冲区</code>的内容同步到显示器。</p><h2 id="撕裂和掉帧"><a href="#撕裂和掉帧" class="headerlink" title="撕裂和掉帧"></a>撕裂和掉帧</h2><p>我们的屏幕是逐行扫描成像，当扫描到底部就会重新扫描下一帧的内容：</p><img src="https://s1.ax1x.com/2020/07/09/Ue52V0.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>我们或许会看到过这样的情形：</p><img src="https://s1.ax1x.com/2020/07/09/Ue5cbq.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>这就是通常所讲的<code>图像撕裂</code>问题，为什么会出现这种撕裂问题呢？</p><p>图像显示其本质是拿到图像数据后，GPU进行渲染 -&gt; 存储到帧缓冲区 - &gt; 交给视频控制器 -&gt; 读取帧缓冲区的信息（位图）-&gt; 数模转换（数字信号转换为模拟信号） -&gt; 屏幕逐行扫描显示，当第一帧图像扫描到某个位置的时候，GPU已经拿到新的数据并存到帧缓冲区，这个时候视频控制器就从帧缓冲区扫描的是新拿到的一帧图像，但是屏幕是逐行扫描的，他不会打断仍旧是从中间的位置继续扫描，这样就可能出现断层的现象，导致我们所说的<code>撕裂</code>问题，究其原因就是视频控制器的显示速度超过的GPU处理图形的速度。</p><p>为了解决撕裂问题，苹果引入了<code>双缓冲区</code>的概念，进而提出了 <code>Vsync垂直同步</code>技术：</p><img src="https://s1.ax1x.com/2020/07/09/UebKUI.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>GPU 开辟AB两个缓冲区，并对缓冲区进行同步加锁处理，执行流程就是当A缓冲区拿到第一帧数据，就给A缓冲区加上一把锁，屏幕控制器从A拿到数据并逐行扫描完成，A帧缓冲区解锁，并把屏幕控制器指向B缓冲区，B缓冲区加锁并逐行扫描显示，在屏幕控制器扫描B缓冲区的时候，A缓冲区拿到GPU传过来的新数据，以此类推，解决撕裂问题。</p><p>其实仔细观察上述图片我们会发现 <code>双缓冲区+垂直同步</code>会解决撕裂问题，但是A图像本来应该显示一帧，由于CPU和GPU的处理速度问题，导致了A的这一帧显示了两次，从而导致B晚一帧显示出来，这就导致了新的问题 <code>掉帧</code>，掉帧并不是丢失图片，而是屏幕 <code>重复渲染了同一帧的数据</code>。</p><p>为了减少掉帧<code>我们并不能解决掉帧问题，只能尽量通过时间偏移来尽量的减少</code>，这个时候苹果提出了新的解决方案：<code>三缓冲区</code>，再开辟 一块缓冲区，三级缓冲区是为了充分利用CPU/GPU的空余时间，开辟ABC三个缓冲区，当A显示到屏幕上，B也渲染好了，C再从GPU拿新的渲染数据，当屏幕和帧缓冲区都弄好了视频控制器再指向帧缓冲区的另外一个，再显示，依次交替，达到减少掉帧的情况。</p><p>总结一下就是：</p><ul><li>CPU/GPU渲染流水线耗时过长导致掉帧</li><li>垂直同步 + 双缓冲区 解决<code>图像撕裂</code>问题，但是会造成掉帧问题</li><li>三级缓冲区的开辟是为了合理使用CPU/GPU以达到减少掉帧的次数</li></ul><h2 id="IOS下的渲染框架"><a href="#IOS下的渲染框架" class="headerlink" title="IOS下的渲染框架"></a>IOS下的渲染框架</h2><p>最后补充一下IOS的渲染框架构成：</p><img src="https://s1.ax1x.com/2020/07/09/UmKEkj.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>以及：</p><img src="https://s1.ax1x.com/2020/07/09/UmKinS.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本篇文章主要是大致讲述了计算机CPU和GPU的构成，以及图像显示的过程和原理，渲染的流程以及造成卡顿的原因和解决方案等等，希望能够讲述清楚。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为一个IOS开发者，日常我们更多的是接触业务，我们做的最多的是&lt;code&gt;addSubView:&lt;/code&gt; 等等，那么我们的视图就显示出来了。那么它们是如何显示出来的，计算机内部是如何工作的，其底层原理是什么，有时候会卡顿掉帧，这些又究竟是什么原因？这篇文章来大概讲述一下这些内容。
    
    </summary>
    
    
    
      <category term="OpenGL" scheme="http://typeco.cn/tags/OpenGL/"/>
    
  </entry>
  
  <entry>
    <title>OpenGL：你真的懂离屏渲染吗？</title>
    <link href="http://typeco.cn/posts/93a4c1aa/"/>
    <id>http://typeco.cn/posts/93a4c1aa/</id>
    <published>2020-07-07T14:42:05.000Z</published>
    <updated>2020-07-09T06:10:58.129Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>作为一个IOS开发者，<code>离屏渲染</code> 这个名词或许你并不陌生，或多或少你都能说点什么，比如我们通常最简单的圆角方式 <code>cornerRadius</code> 和 <code>clipsToBounds</code> 会触发离屏渲染，会影响性能….<a id="more"></a></p><p>那么你有考虑这两个属性为什么会触发离屏渲染吗，它们真的在任何情况下都会触发离屏渲染吗？离屏渲染为什么会影响性能，我们该如何抉择？这篇文章我们一起来探索一下离屏渲染的相关问题。</p><h2 id="检测离屏渲染"><a href="#检测离屏渲染" class="headerlink" title="检测离屏渲染"></a>检测离屏渲染</h2><p>首先我们新建一个空的IOS工程，通过一段代码开始我们的探索之旅。</p><p>在<code>ViewController.m</code> 中写入以下代码：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs objectivec" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;1.&nbsp;按钮：图片&nbsp;+&nbsp;背景</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIButton</span>&nbsp;*btn1&nbsp;=&nbsp;[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIButton</span>&nbsp;buttonWithType:<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIButtonTypeCustom</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;btn1.frame&nbsp;=&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGRect</span>){<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">100</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">30</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">100</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">100</span>};<br>&nbsp;&nbsp;&nbsp;&nbsp;btn1.backgroundColor&nbsp;=&nbsp;[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIColor</span>&nbsp;blueColor];<br>&nbsp;&nbsp;&nbsp;&nbsp;[btn1&nbsp;setImage:[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIImage</span>&nbsp;imageNamed:<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">@"weixin"</span>]&nbsp;forState:<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIControlStateNormal</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;btn1.clipsToBounds&nbsp;=&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">YES</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;btn1.layer.cornerRadius&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">50</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.view&nbsp;addSubview:btn1];<br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//2.&nbsp;按钮&nbsp;：&nbsp;只有背景</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIButton</span>&nbsp;*btn2&nbsp;=&nbsp;[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIButton</span>&nbsp;buttonWithType:<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIButtonTypeCustom</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;btn2.frame&nbsp;=&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGRect</span>){<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">100</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">180</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">100</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">100</span>};<br>&nbsp;&nbsp;&nbsp;&nbsp;btn2.backgroundColor&nbsp;=&nbsp;[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIColor</span>&nbsp;blueColor];<br>&nbsp;&nbsp;&nbsp;&nbsp;btn2.layer.cornerRadius&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">50</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;btn2.clipsToBounds&nbsp;=&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">YES</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.view&nbsp;addSubview:btn2];<br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;3.&nbsp;UIImageView&nbsp;&nbsp;图片&nbsp;+&nbsp;颜色</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIImageView</span>&nbsp;*img1&nbsp;=&nbsp;[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIImageView</span>&nbsp;new];<br>&nbsp;&nbsp;&nbsp;&nbsp;img1.frame&nbsp;=&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGRect</span>){<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">100</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">320</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">100</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">100</span>};<br>&nbsp;&nbsp;&nbsp;&nbsp;img1.backgroundColor&nbsp;=&nbsp;[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIColor</span>&nbsp;blueColor];<br>&nbsp;&nbsp;&nbsp;&nbsp;img1.image&nbsp;=&nbsp;[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIImage</span>&nbsp;imageNamed:<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">@"weixin"</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;img1.layer.cornerRadius&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">50</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;img1.layer.masksToBounds&nbsp;=&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">YES</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.view&nbsp;addSubview:img1];<br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;4.&nbsp;UIImageView&nbsp;&nbsp;只有图片</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIImageView</span>&nbsp;*img2&nbsp;=&nbsp;[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIImageView</span>&nbsp;new];<br>&nbsp;&nbsp;&nbsp;&nbsp;img2.frame&nbsp;=&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGRect</span>){<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">100</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">480</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">100</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">100</span>};<br>&nbsp;&nbsp;&nbsp;&nbsp;img2.image&nbsp;=&nbsp;[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIImage</span>&nbsp;imageNamed:<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">@"weixin"</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;img2.layer.cornerRadius&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">50</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;img2.layer.masksToBounds&nbsp;=&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">YES</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.view&nbsp;addSubview:img2];<br></code></pre></div><p>上述代码添加了两个按钮和两个图片，运行我们看到：</p><img src="https://s1.ax1x.com/2020/07/07/UAzLEd.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>这是我们想要的效果，我们就是想通过这种方式来进行圆角设置，接下来我们看看这些处理方式是不是真的触发离屏渲染了，我们通过以下方式打开离屏渲染 <code>Debug</code> 模式<code>模拟器调试下Debug</code>：</p><img src="https://s1.ax1x.com/2020/07/07/UAzX4I.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>接着我们会看到有离屏渲染效果的图层会有<code>黄色</code> 的背景：</p><img src="https://s1.ax1x.com/2020/07/07/UAzOUA.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>咦<del>~</del>不对啊，不是说好的  <code>cornerRadius</code> 和 <code>clipsToBounds</code> 会触发离屏渲染吗，他们都用了这些属性啊，那么为什么同样是按钮，同样是UIImageView，为什么一个有离屏渲染，而另外一个却没有呢，这和我们理解的似乎并不一致。</p><p>其实细心的同学会发现，我对每个按钮或图片上方都会备注了他们的不同，你会发现有图片和背景的都会触发离屏渲染，而只有一个的情况下却不会触发，不要慌，我们接着往下看。</p><h2 id="渲染流程"><a href="#渲染流程" class="headerlink" title="渲染流程"></a>渲染流程</h2><p>我们都知道计算机都有<code>内存</code> 和 <code>显存</code> ，内存是处理数据的，而显存是处理图像显示的，专业的说法叫 <code>渲染</code>。</p><h3 id="普通渲染"><a href="#普通渲染" class="headerlink" title="普通渲染"></a>普通渲染</h3><p><code>普通渲染</code> 就是我们通常比如把一个图片显示到屏幕上，它的过程是：先把图片的数据转换成像素数据然后传到<code>帧缓冲区</code>渲染成图像，紧接着数据从<code>帧缓冲区</code> 交给显示控制器最终显示到显示器上。</p><img src="https://s1.ax1x.com/2020/07/07/UEC0ZF.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><h3 id="离屏渲染"><a href="#离屏渲染" class="headerlink" title="离屏渲染"></a>离屏渲染</h3><p><code>离屏渲染</code> 为什么叫离屏，就是因为系统在处理这种渲染情况下，会额外开辟一块离屏缓冲区，用于存放需要离屏渲染的图层数据，等到各个图层数据准备整合完毕就会将最终的图层交给显示控制器来显示。</p><p>如下图：画家在画一幅画的时候，往往是先画远处的景色，然后由远及近的画其他的元素，这样就构成了一幅画，其实仔细的观察跟我们的计算机渲染图片又不谋而合，这幅画其实就是：<code>山</code>、<code>草地</code>、<code>大树</code> 这三个图层构成，计算机渲染也是这样，它不是一次性把图片画出来，而是一层一层的叠加最终生成我们想要的图片。</p><img src="https://s1.ax1x.com/2020/07/07/UEPuWR.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>但是当我们的图片在 <code>帧缓冲区</code> 的时候就会立即交换到屏幕上，同时<code>帧缓冲区</code>的数据就会被立即删除，这样就达不到我们想要的效果，正是因为一些特殊的效果，苹果才单独配置了 <code>离屏缓冲区</code>这样一个东西，用于存放我们需要离屏渲染的图层，等待这些图层 <code>混合</code>、<code>叠加</code> 等效果统统完毕之后才交给我们的显示器去显示，所以这就是为什么叫<code>离屏渲染</code>。</p><p>其实说到底，个人理解<code>离屏渲染其实就是多图层的混合叠加</code>导致的，这也正好解释了上面为什么单个的背景不会导致离屏渲染，而既有背景又有图片的元素就会导致离屏渲染，因为单个背景或者单个的图片渲染直接放到帧缓冲区就可以搞定了，没有必要额外开辟一块 <code>离屏缓冲区</code>去处理。</p><p>如果普通渲染的过程是这样：</p><img src="https://s1.ax1x.com/2020/07/07/UECjeS.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>那么离屏渲染的过程就是这样：</p><img src="https://s1.ax1x.com/2020/07/07/UECOL8.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><blockquote><p>如果出现离屏渲染，会经历两次上下文切换，第一次是开辟离屏缓冲区并进入离屏缓冲区，第二次是离开离屏缓冲区并将数据交换到帧缓冲区，等到显示处理器信号，显示到屏幕上，也就是说，不论怎么样，都会经过帧缓冲区，但是离屏缓冲区要多一步操作。</p></blockquote><h3 id="渲染过程对比"><a href="#渲染过程对比" class="headerlink" title="渲染过程对比"></a>渲染过程对比</h3><p>通常我们比如要在屏幕上显示3个图层的叠加，其过程是这样：</p><img src="https://s1.ax1x.com/2020/07/08/UEUuh4.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>每个图层是单独在 <code>帧缓冲区</code> 单独渲染好并<code>立即</code>提交到屏幕上显示，其最终显示是叠加在一起的，而这个叠加的<code>过程</code>发生在显示器。</p><p>同样的图片数据，我们看看离屏渲染是如何处理的：</p><img src="https://s1.ax1x.com/2020/07/08/UEUQ39.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>这个过程跟普通渲染类似，但是不同的是，这些图层都被保存到 <code>离屏缓冲区</code> 而不会立即提交到屏幕，所以也不会立即从缓冲区中删除。</p><p>接下来正是因为我们对多个图层执行了 <code>cornerRadius</code> 和 <code>clipsToBounds</code> 所以它接下来的过程是：</p><img src="https://s1.ax1x.com/2020/07/08/UEUM9J.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>离屏缓冲区对每个图层进行圆角裁切处理，之后并进行混合叠加，生成最终的图片，并交给显示器显示。而这个叠加的过程发生在 <code>离屏缓冲区</code>而非 <code>显示器</code></p><blockquote><p><code>圆角</code>并不会导致离屏渲染，导致离屏渲染的核心是 <code>view.layer.maskToBounds= YES</code></p></blockquote><h3 id="UIImageView-离屏渲染的原因"><a href="#UIImageView-离屏渲染的原因" class="headerlink" title="UIImageView 离屏渲染的原因"></a>UIImageView 离屏渲染的原因</h3><p>了解了离屏渲染的逻辑和原因之后，我们似乎还是对<code>UIImageView</code> 的离屏渲染一知半解，那么下面这个图应该都曾看到过：</p><img src="https://s1.ax1x.com/2020/07/08/UEdGFO.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>其实<code>UIImageView</code> 并不是一个单独的图层，它是由 <code>background</code>、<code>contents</code>、<code>border</code>三个部分组合而成,当我们单独设置 <code>imageView.image = ...</code> 其实是对其<code>contents</code> 的填充，每一个属性都是对专门的图层进行设置，所以当我们对单个图层进行 <code>cornerRadius</code> 和 <code>clipsToBounds</code> 设置的时候，其实其他两个图层都是空的，我们是不需要处理的，这也就是为什么<code>cornerRadius</code> 和 <code>clipsToBounds</code> 并不一定总是导致离屏渲染的核心原因，不知道你是否理解。其实<code>UIButton</code>也是一样的，他们的本质都是多个图层的叠加而已。</p><h3 id="为什么要使用离屏渲染"><a href="#为什么要使用离屏渲染" class="headerlink" title="为什么要使用离屏渲染"></a>为什么要使用离屏渲染</h3><p>既然我们知道 <code>离屏渲染</code> 会额外开辟一块 <code>离屏缓冲区</code>，会影响性能，那么为什么苹果要这么设计，我们为什么要这么使用呢？</p><p>首先，我觉得这是为了简洁方便使用，仅仅通过<code>cornerRadius</code> 和 <code>clipsToBounds</code> 两个属性就能达到圆角的效果，何乐而不为呢，而且大部分情况我们的业务、我们的界面并不是特别的复杂，而且我们的页面也不会频繁的进行刷新，那么牺牲少量的性能而达到快速的迭代开发是有利的。</p><p>其次，当我们的<code>layer</code>需要被复用的情况下，离屏缓冲区的好处就显现出来，通过一次缓存可以多次反复使用其实也是间接的提高了性能，我们不需要在每次刷新的时候重复的去渲染图层进行叠加。</p><p>但是离屏渲染的空间是有限的，超过屏幕像素大小<code>2.5倍</code>就会失效，而且也无法复用，这也是为了性能的考虑，同时离屏缓存的内容也是有时间限制的，当我们的缓存内容超过<code>100ms</code> 内没有被使用，它就会被丢弃，无法进行复用。</p><h2 id="触发离屏渲染的情景"><a href="#触发离屏渲染的情景" class="headerlink" title="触发离屏渲染的情景"></a>触发离屏渲染的情景</h2><p>常见的触发离屏渲染的几种情况罗列：</p><ul><li>使用了 <code>mask</code> 的 <code>layer (layer.mask)</code> </li><li>需要进行裁剪的 <code>layer(layer.maskToBounds 或 view.clipsToBounds)</code></li><li>设置了组透明度YES，并且透明度不为 1 的 layer <code>layer.allowsGroupOpacity 或 layer.opacity</code></li><li>添加了投影的layer <code>layer.shadow*</code></li><li>采用了光栅化的layer <code>(layer.shouldRasterize)</code></li><li>绘制了文字的layer <code>(UILabel,CATextLayer,CoreText 等)</code></li></ul><p>这里我们单独说说 <code>组透明度</code> 这个问题，在早期的版本<code>IOS 6.0</code>之前系统默认组透明度是不开启的，而从那以后组透明度全局都是默认开启的，只要开启了组透明度，只要你的<code>view1</code> 上有子视图 <code>view2</code> 而且 <code>view1</code> 的透明度不为1，那么就会触发离屏渲染，因为苹果这个属性的宗旨就是：如果开启组透明度，那么就会间接的影响其所有子视图的透明度，所以会触发离屏渲染 （其他任何情况都不会触发离屏渲染），这是苹果制定的行为，是苹果实现这种属性的一种机制和方案，我们不要强行的和 <code>离屏渲染</code> 耦合在一起。</p><h2 id="圆角处理方案"><a href="#圆角处理方案" class="headerlink" title="圆角处理方案"></a>圆角处理方案</h2><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs objectivec" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">btn2.layer.cornerRadius&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">50</span>;<br>btn2.clipsToBounds&nbsp;=&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">YES</span>;<br></code></pre></div><h3 id="方案二-UIImage-Category"><a href="#方案二-UIImage-Category" class="headerlink" title="方案二 (UIImage+Category)"></a>方案二 (UIImage+Category)</h3><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs objectivec" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">-&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIImage</span>&nbsp;*)viewWithCornerRadius:(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>)cornerRadius&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>&nbsp;w&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.size.width;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>&nbsp;h&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.size.height;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>&nbsp;scale&nbsp;=&nbsp;[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIScreen</span>&nbsp;mainScreen].scale;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(cornerRadius&nbsp;&lt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cornerRadius&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(cornerRadius&nbsp;&gt;&nbsp;MIN(w,&nbsp;h))&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cornerRadius&nbsp;=&nbsp;MIN(w,&nbsp;h)/<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIImage</span>&nbsp;*image&nbsp;=&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">nil</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGRect</span>&nbsp;imageFrame&nbsp;=&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGRect</span>){<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>,w,h};<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIGraphicsBeginImageContextWithOptions</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.size,&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NO</span>,&nbsp;scale);<br>&nbsp;&nbsp;&nbsp;&nbsp;[[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIBezierPath</span>&nbsp;bezierPathWithRoundedRect:imageFrame&nbsp;cornerRadius:cornerRadius]&nbsp;addClip];<br>&nbsp;&nbsp;&nbsp;&nbsp;[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>&nbsp;drawInRect:imageFrame];<br>&nbsp;&nbsp;&nbsp;&nbsp;image&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIGraphicsGetImageFromCurrentImageContext</span>();<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIGraphicsEndImageContext</span>();<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;image;<br>}<br></code></pre></div><h3 id="方案三-YYWebImage"><a href="#方案三-YYWebImage" class="headerlink" title="方案三 (YYWebImage)"></a>方案三 (YYWebImage)</h3><p><code>推荐</code></p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs objectivec" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">-&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIImage</span>&nbsp;*)yy_imageByRoundCornerRadius:(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>)radius<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;corners:(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIRectCorner</span>)corners<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderWidth:(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>)borderWidth<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderColor:(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIColor</span>&nbsp;*)borderColor<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderLineJoin:(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGLineJoin</span>)borderLineJoin&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(corners&nbsp;!=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIRectCornerAllCorners</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIRectCorner</span>&nbsp;tmp&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(corners&nbsp;&amp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIRectCornerTopLeft</span>)&nbsp;tmp&nbsp;|=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIRectCornerBottomLeft</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(corners&nbsp;&amp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIRectCornerTopRight</span>)&nbsp;tmp&nbsp;|=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIRectCornerBottomRight</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(corners&nbsp;&amp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIRectCornerBottomLeft</span>)&nbsp;tmp&nbsp;|=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIRectCornerTopLeft</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(corners&nbsp;&amp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIRectCornerBottomRight</span>)&nbsp;tmp&nbsp;|=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIRectCornerTopRight</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;corners&nbsp;=&nbsp;tmp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIGraphicsBeginImageContextWithOptions</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.size,&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NO</span>,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.scale);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGContextRef</span>&nbsp;context&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIGraphicsGetCurrentContext</span>();<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGRect</span>&nbsp;rect&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGRectMake</span>(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.size.width,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.size.height);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGContextScaleCTM</span>(context,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGContextTranslateCTM</span>(context,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>,&nbsp;-rect.size.height);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>&nbsp;minSize&nbsp;=&nbsp;MIN(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.size.width,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.size.height);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(borderWidth&nbsp;&lt;&nbsp;minSize&nbsp;/&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIBezierPath</span>&nbsp;*path&nbsp;=&nbsp;[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIBezierPath</span>&nbsp;bezierPathWithRoundedRect:<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGRectInset</span>(rect,&nbsp;borderWidth,&nbsp;borderWidth)&nbsp;byRoundingCorners:corners&nbsp;cornerRadii:<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGSizeMake</span>(radius,&nbsp;borderWidth)];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[path&nbsp;closePath];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGContextSaveGState</span>(context);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[path&nbsp;addClip];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGContextDrawImage</span>(context,&nbsp;rect,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.CGImage);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGContextRestoreGState</span>(context);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(borderColor&nbsp;&amp;&amp;&nbsp;borderWidth&nbsp;&lt;&nbsp;minSize&nbsp;/&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;&amp;&amp;&nbsp;borderWidth&nbsp;&gt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>&nbsp;strokeInset&nbsp;=&nbsp;(floor(borderWidth&nbsp;*&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.scale)&nbsp;+&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0.5</span>)&nbsp;/&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.scale;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGRect</span>&nbsp;strokeRect&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGRectInset</span>(rect,&nbsp;strokeInset,&nbsp;strokeInset);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGFloat</span>&nbsp;strokeRadius&nbsp;=&nbsp;radius&nbsp;&gt;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.scale&nbsp;/&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;?&nbsp;radius&nbsp;-&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">self</span>.scale&nbsp;/&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;:&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIBezierPath</span>&nbsp;*path&nbsp;=&nbsp;[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIBezierPath</span>&nbsp;bezierPathWithRoundedRect:strokeRect&nbsp;byRoundingCorners:corners&nbsp;cornerRadii:<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CGSizeMake</span>(strokeRadius,&nbsp;borderWidth)];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[path&nbsp;closePath];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path.lineWidth&nbsp;=&nbsp;borderWidth;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path.lineJoinStyle&nbsp;=&nbsp;borderLineJoin;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[borderColor&nbsp;setStroke];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[path&nbsp;stroke];<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIImage</span>&nbsp;*image&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIGraphicsGetImageFromCurrentImageContext</span>();<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">UIGraphicsEndImageContext</span>();<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;image;<br>}<br></code></pre></div><p>这篇文章主要讲述了 <code>离屏渲染</code> 的原因和逻辑，希望能给大家带来启发。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为一个IOS开发者，&lt;code&gt;离屏渲染&lt;/code&gt; 这个名词或许你并不陌生，或多或少你都能说点什么，比如我们通常最简单的圆角方式 &lt;code&gt;cornerRadius&lt;/code&gt; 和 &lt;code&gt;clipsToBounds&lt;/code&gt; 会触发离屏渲染，会影响性能….
    
    </summary>
    
    
    
      <category term="OpenGL" scheme="http://typeco.cn/tags/OpenGL/"/>
    
  </entry>
  
  <entry>
    <title>OpenGL：基础概念以及项目搭建</title>
    <link href="http://typeco.cn/posts/7f4eafc3/"/>
    <id>http://typeco.cn/posts/7f4eafc3/</id>
    <published>2020-07-03T09:36:25.000Z</published>
    <updated>2020-07-05T15:46:38.391Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近开始学习OpenGL相关知识，针对学习的知识点以及学习的过程做一些笔记，固记录下来以便后续查阅和大家共同学习。<a id="more"></a></p><h2 id="基本概念一览"><a href="#基本概念一览" class="headerlink" title="基本概念一览"></a>基本概念一览</h2><ul><li><p><strong>OpenGL：</strong> PC图形图像渲染处理，主要针对MAC、windows平台</p></li><li><p><strong>OpengGL ES：</strong> ES是嵌入式的意思，主要针对移动端（IOS、安卓）</p></li><li><p><strong>OpenCV：</strong> 主要是识别（人脸识别、身份识别、物体 -&gt; OpenCV， face++）主要是与人工智能结合</p></li><li><p><strong>Metal：</strong> 苹果底层使用的，在2018年前苹果底层渲染部分-&gt;CoreAnimation -&gt; 基于OpenGL ES 封装的上层框架；2018年以后底层渲染迁移到Metal</p></li><li><p><strong>图形API解决了哪些问题：</strong> </p><ul><li>系统的按钮、图片、视图、图层等渲染都是通过图形API来完成的</li><li>游戏引擎-&gt; 人物、场景的渲染</li><li>视频播放的框架 -&gt; ijkplayer，kxmovie，视频解码 -&gt; 渲染</li><li>核心动画 -&gt; 动画操作（旋转、缩放、移动、图层特效）</li><li>视频、图片等特效</li></ul></li><li><p><strong>上下文（context）：</strong> </p><ul><li>应用程序调用任何OpenGL指令之前，需要安排首先创建一个OpengGL的上下文。这个上下文是一个非常庞大的状态机，保存了OpengGL中的各种状态，这也是OpenGL执行指令的基础</li><li>OpenGL的函数不论在哪个语言中，都是类C语言一样的面向过程函数，本质上都是对OpenGL上下文这个庞大的状态机中的某个状态或者对象进行操作，当然你得先把这个对象设置为当前对象。因此，通过对OpenGL指令的封装，是可以把OpenGL的相关调用封装成为一个面向对象的图形API的</li><li>由于OpenGL上下文是一个巨大的状态机，切换上下文往往会产生较大的开销，但是不同的绘制模块，可能需要使用完全独立的状态管理。因此，可以在应用程序中分别创建多个不同的上下文，在不同的线程中使用不同的上下文，上下文之间共享纹理、缓冲区等资源。这样的方案，会比反复切换上下文，或者大量修改渲染状态更加合理高效。</li></ul></li><li><p><strong>OpenGL状态机：</strong></p><ul><li>理论上是一个机器，其实可以这么理解，状态机描述了一个对象在其生命周期内所经历的各种状态，状态机描述了一个对象在其生命周期内所经历的各种状态，状态间的转变，发生转变的动因，条件及转变中所执行的活动。或者说，状态机是一种行为，说明对象在其生命周期中相应事件所经历的状态序列以及对那些状态事件的相应</li><li>有记忆功能，能记住其当前的状态</li><li>可以接收输入，根据输入的内容和自己的原先的状态，修改自己当前的状态，并且可以有对应的输出</li><li>当进入特殊状态（停机等）的时候，便不再接收输入，停止工作</li></ul></li><li><p><strong>渲染（Rendering）：</strong> 将图形、图像数据转换成2D空间图像的操作叫渲染 </p><ul><li>图片、按钮、视频 -&gt; 解码图片 - &gt; 渲染</li></ul></li><li><p><strong>顶点数组（VertexArray）| 顶点缓冲区：</strong> OpenGL中的图像都是由图元组成的，在OpenGL ES中有3中类型的图元：点、线、三角形。那这部分图元数据是如何存储的呢？开发者可以选择设定函数指针，在调用绘制方法的时候，直接由内存传入顶点数据，也就是说这部分数据之前是存储在内存当中，被称为顶点数组。而性能更高的做法是，提前分配一块显存，将顶点数据预先传入到显存当中。这部分显存就被称为顶点缓冲区</p></li><li><p><strong>位图：</strong> 比如我们120<em>120像素的图片 = 14400 像素 ,然后每个像素又包含RGBA 每个位置8个字节总共 4位 所以 14400</em>4 的纹理，纹理就是位图</p></li><li><p><strong>管线（流水线）：</strong>其实就是一个制作的过程，分为固定管线和可编程管线</p><ul><li>固定管线：对象非常多固定的模具（固定着色器）-&gt; 结果（OpenGL 固定的画面）</li><li>可编程管线：可自定义的着色器，相当于个人定制的模块</li></ul></li><li><p><strong>着色器：</strong> 其实就是 函数、方法或者代码段 -&gt; CPU使用   ；shader代码段 -&gt; GPU来调用</p><ul><li><p>渲染过程中，必须存储两种着色器，分别是顶点着色器和片元着色器。顶点着色器是第一个着色器，片元着色器是对最后一个。顶点着色器处理顶点，片元着色器处理其他像素点的颜色。</p></li><li><p>顶点着色器：用来处理顶点相关的代码：1.确定位置 2.缩放、平移、旋转等位置换算 3.手机端显示3D屏幕实际是2D，3D图形数据 -&gt; 2D（投影换算） -&gt; OpenGL ES</p></li><li><p>片元着色器：是处理一个一个像素点的，GPU并行运算，比如图片进行饱和度调整，那么就是片元着色器进行一个一个像素点的修改 ，因为GPU是并发运算，所以效率会很高。</p></li><li><p>固定着色器：苹果提供的固定API，固定代码片段，调用参数生成，OpenGL来提供</p></li><li><p>自定义着色器：进行自定义（基于GLSL语法来进行编写的代码段）</p></li></ul></li></ul><ul><li><p><strong>GLSL</strong> 是一种语言，自定义着色器的语言（代码），OpenGL标准调用GPU</p></li><li><p><strong>光栅化（Rasterization）：</strong> 是把顶点数据转换为片元的过程，片元中的每一个元素对应帧缓冲区中的一个像素，分为两个过程，都不可控制也不可编程</p><ul><li>第一个过程：确定图形的像素范围（决定窗口坐标中哪些整形栅格区域被基本图元占用）</li><li>第二个过程：颜色附着上去（分配一个颜色值和一个深度值到各个区域）</li><li>光栅化过程是产生片元的过程</li></ul></li><li><p><strong>纹理：</strong> 纹理其实就是位图，也可以理解为图片，大家在渲染图形的时候需要在其编码填充图片，为了使得场景更加逼真，而这里使用的图片就是常说的纹理，但是在OpenGL，我们更加习惯叫纹理而不是图片。</p></li><li><p><strong>混合（Blending）：</strong> 在测试阶段之后，如果像素依然没有被剔除，那么像素的颜色将会和帧缓冲区中颜色附着上的颜色进行混合，混合的算法可以通过OpenGL的函数进行制定，但是OpenGL提供的缓和算法是有限的，如果需要更加复杂的缓和算法，一般可以通过像素着色器进行实现，当然性能会比原生的混合算法差一些。</p></li><li><p><strong>变换矩阵（Transformation）：</strong> 图形想发生平移、缩放、旋转变换等，就需要使用变换矩阵</p></li><li><p><strong>投影矩阵（Projection）：</strong> 用于将3D坐标转换为二维屏幕坐标，实际线条也将在二维坐标下进行绘制。</p></li><li><p><strong>渲染上屏：</strong> 如果将图像直接渲染到窗口对应的渲染缓冲区，则可以将图像显示到屏幕上。值得注意的是，如果每个窗口只有一个缓冲区，那么在绘制的过程中屏幕进行了刷新，窗口可能显示出不完整的图像，为了解决这个问题，常规的OpengGL程序至少都会有两个缓冲区。显示在屏幕上的称为屏幕缓冲区，没有显示的称为离屏缓冲区，在一个缓冲区渲染完成之后，通过将屏幕缓冲区和离屏缓冲区交换，实现图像在屏幕上的显示。</p><ul><li>由于显示器的刷新是逐行进行的，因此为了防止交换缓冲区的时候屏幕上下区域的图像分属于两个不同的帧信号，因此交换一般会等待显示器刷新完成的信号，在显示器两次刷新的间隔中进行交换，这个信号被称为垂直同步信号，这个技术被称为垂直同步。这个就是双缓冲区技术。</li><li>在双缓冲区和垂直同步技术之后，由于总是要等待缓冲区交换之后再进行下一帧的渲染，使得帧率无法完全达到硬件允许的最高水平。为了解决这个问题，引入了三缓冲区技术，在等待垂直同步的同时来回交替两个离屏的缓冲区，而垂直同步发生时，屏幕缓冲区和最近渲染完成的离屏缓冲区交换，实现充分利用硬件性能的目的。</li></ul></li></ul><h2 id="MAC环境和项目搭建"><a href="#MAC环境和项目搭建" class="headerlink" title="MAC环境和项目搭建"></a>MAC环境和项目搭建</h2><h3 id="准备资源"><a href="#准备资源" class="headerlink" title="准备资源"></a>准备资源</h3><ul><li><p><strong>GLTools</strong></p></li><li><p><strong>glew</strong></p></li><li><p><strong>libGLTools.a</strong></p><p>已经打包好 [百度云盘](链接:<a href="https://pan.baidu.com/s/1mwCKcUVs1Q4arq24LrxblA" target="_blank" rel="noopener">https://pan.baidu.com/s/1mwCKcUVs1Q4arq24LrxblA</a>  密码:ft74)</p><p>提取码：<strong>ft74</strong></p><p>有需要可以直接下载即可</p></li></ul><h3 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h3><p>创建macos工程</p><img src="https://s1.ax1x.com/2020/07/05/U9w8PI.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>删除部分类</p><img src="https://s1.ax1x.com/2020/07/05/U9wlad.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>创建main.cpp文件</p><img src="https://s1.ax1x.com/2020/07/05/U9w1IA.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>此处不勾选</p><img src="https://s1.ax1x.com/2020/07/05/U9wQVH.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>将准备资源拖入到工程中 </p><img src="https://s1.ax1x.com/2020/07/05/U9rmYd.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>将 <strong>LibGLTool.a</strong>文件拖到framework文件夹下</p><img src="https://s1.ax1x.com/2020/07/05/U9reFH.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>导入必要的库 <strong>OpenGI.framework</strong> 和 <strong>GLUT.framework</strong></p><img src="https://s1.ax1x.com/2020/07/05/U9rnfA.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>复制以下代码到main文件中：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">include</span>&nbsp;<span class="hljs-meta-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"GLShaderManager.h"</span></span><br><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">include</span>&nbsp;<span class="hljs-meta-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"GLTools.h"</span></span><br><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">include</span>&nbsp;<span class="hljs-meta-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">&lt;GLUT/GLUT.h&gt;</span></span><br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//定义一个，着色管理器</span><br><br>GLShaderManager&nbsp;shaderManager;<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//简单的批次容器，是GLTools的一个简单的容器类。</span><br><br>GLBatch&nbsp;triangleBatch;<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br><br>在窗口大小改变时，接收新的宽度&amp;高度。<br><br>*/</span><br><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">changeSize</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;w,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;h)</span><br><br></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;glViewport(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>,&nbsp;w,&nbsp;h);<br><br>}<br><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">RenderScene</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>)</span><br><br></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//1.清除一个或者一组特定的缓存区</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;glClear(GL_COLOR_BUFFER_BIT&nbsp;|&nbsp;GL_DEPTH_BUFFER_BIT|GL_STENCIL_BUFFER_BIT);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//2.设置一组浮点数来表示红色</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;GLfloat&nbsp;vRed[]&nbsp;=&nbsp;{<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1.0</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0.5</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0.0</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1.0f</span>};<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//传递到存储着色器，即GLT_SHADER_IDENTITY着色器，这个着色器只是使用指定颜色以默认笛卡尔坐标第在屏幕上渲染几何图形</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;shaderManager.UseStockShader(GLT_SHADER_IDENTITY,vRed);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//提交着色器</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;triangleBatch.Draw();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//将后台缓冲区进行渲染，然后结束后交换给前台</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;glutSwapBuffers();<br><br>}<br><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">setupRC</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">()</span><br><br></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//设置清屏颜色（背景颜色）</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;glClearColor(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0.98f</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0.90f</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0.3f</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//没有着色器，在OpenGL&nbsp;核心框架中是无法进行任何渲染的。初始化一个渲染管理器。</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//在前面的课程，我们会采用固管线渲染，后面会学着用OpenGL着色语言来写着色器</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;shaderManager.InitializeStockShaders();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//指定顶点</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//在OpenGL中，三角形是一种基本的3D图元绘图原素。</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;GLfloat&nbsp;vVerts[]&nbsp;=&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-0.5f</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0.0f</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0.0f</span>,<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0.5f</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0.0f</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0.0f</span>,<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0.0f</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0.5f</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0.0f</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;};<br><br>&nbsp;&nbsp;&nbsp;&nbsp;triangleBatch.Begin(GL_TRIANGLES,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;triangleBatch.CopyVertexData3f(vVerts);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;triangleBatch.End();<br><br>}<br><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;argc,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*argv[])</span><br><br></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//初始化GLUT库,这个函数只是传说命令参数并且初始化glut库</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;glutInit(&amp;argc,&nbsp;argv);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br><br>&nbsp;&nbsp;&nbsp;&nbsp;初始化双缓冲窗口，<br><br>&nbsp;&nbsp;&nbsp;&nbsp;*/</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGBA|GLUT_DEPTH|GLUT_STENCIL);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//GLUT窗口大小、窗口标题</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;glutInitWindowSize(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">800</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">600</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;glutCreateWindow(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"Triangle"</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br><br>&nbsp;&nbsp;&nbsp;&nbsp;GLUT&nbsp;内部运行一个本地消息循环，拦截适当的消息。然后调用我们不同时间注册的回调函数。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;*/</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//注册重塑函数</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;glutReshapeFunc(changeSize);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//注册显示函数</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;glutDisplayFunc(RenderScene);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br><br>&nbsp;&nbsp;&nbsp;&nbsp;初始化一个GLEW库,确保OpenGL&nbsp;API对程序完全可用。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;在试图做任何渲染之前，要检查确定驱动程序的初始化过程中没有任何问题<br><br>&nbsp;&nbsp;&nbsp;&nbsp;*/</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;GLenum&nbsp;status&nbsp;=&nbsp;glewInit();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(GLEW_OK&nbsp;!=&nbsp;status)&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"GLEW&nbsp;Error:%s\n"</span>,glewGetErrorString(status));<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//设置我们的渲染环境</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;setupRC();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;glutMainLoop();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br><br>}<br></code></pre></div><p>运行即可看到macos的app显示出一个三角形：</p><img src="https://s1.ax1x.com/2020/07/05/U9Bv8I.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近开始学习OpenGL相关知识，针对学习的知识点以及学习的过程做一些笔记，固记录下来以便后续查阅和大家共同学习。
    
    </summary>
    
    
    
      <category term="OpenGL" scheme="http://typeco.cn/tags/OpenGL/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法 - 图</title>
    <link href="http://typeco.cn/posts/25dd8ac7/"/>
    <id>http://typeco.cn/posts/25dd8ac7/</id>
    <published>2020-05-10T05:23:17.000Z</published>
    <updated>2020-05-11T01:14:12.166Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="初识图"><a href="#初识图" class="headerlink" title="初识图"></a>初识图</h2><p>图（Graph）是由顶点的有穷非空集合和顶点之间边的集合组成。通常表示为 <strong><code>G[V,E]</code></strong> 其中G表示一个图，V是图G中的顶点集合，E是图G中边的集合。<a id="more"></a></p><img src="https://s1.ax1x.com/2020/05/10/Y3K1KJ.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>上述是一个普通图，其中顶点与顶点之间的连线是没有方向的也就是互相连通的，这个是无向图，当然我们还有有向图：</p><img src="https://s1.ax1x.com/2020/05/10/Y3KRG8.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>图中所示顶点与顶点之间是有方向的。</p><h2 id="图的存储思考"><a href="#图的存储思考" class="headerlink" title="图的存储思考"></a>图的存储思考</h2><p>大概了解了图的展示形态，那么问题来了，如果我们想把这种结构存储到计算机中，该怎么办：如何去设计顶点的数据结构呢？节点与节点如何关联呢？</p><p>不卖关子，直接上菜：<strong><code>邻接矩阵</code></strong>，<strong><code>邻接表</code></strong> 这两种对应存储结构中的顺序存储和链式存储。</p><h3 id="邻接矩阵"><a href="#邻接矩阵" class="headerlink" title="邻接矩阵"></a>邻接矩阵</h3><img src="https://s1.ax1x.com/2020/05/10/Y31AzT.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>由于图的顶点是随机的，所以我们需要标记任意两个顶点之间是否有连线（有则标记1无则0），打个比方，如上图我们知道V0-V1是连通的 我们标记 <strong>arc [0] [1] = 1</strong> 相反V1和V3没有连通  <strong>arc [1] [3] = 0</strong> 所以其实其本质是一个二维数组，用矩阵表示是这样：</p><img src="https://s1.ax1x.com/2020/05/10/Y3GlYn.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>可以看出对角线的数值都是 <strong>0</strong>，因为自己是不能指向自己的。</p><p>这里我们是用0和1标记任意两个顶点是否连通，如果顶点与顶点之间是有向的，而且他们之间的连线是有权值的（你就当距离的概念理解好了），这个时候我们如何去设计呢？</p><p>这里我们就不能用0了，因为权值可以为0，<strong>如果两个顶点之间无法达到我们标记他们之间的值为无穷大∞</strong> ，无穷大当然到不了啦…</p><img src="https://s1.ax1x.com/2020/05/10/Y3YQx0.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>基于上述我们设计出邻接矩阵存储的数据结构:</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;MAXVEX&nbsp;100&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;最大顶点数，应由用户定义&nbsp;*/</span></span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;INFINITYC&nbsp;0</span><br><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;Status;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;Status是函数的类型,其值是函数结果状态代码，如OK等&nbsp;*/</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;VertexType;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;顶点类型应由用户定义&nbsp;&nbsp;*/</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;EdgeType;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;边上的权值类型应由用户定义&nbsp;*/</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span><br>{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;VertexType&nbsp;vexs[MAXVEX];&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;顶点表&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;EdgeType&nbsp;arc[MAXVEX][MAXVEX];<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;邻接矩阵，可看作边表&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;numNodes,&nbsp;numEdges;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;图中当前的顶点数和边数&nbsp;&nbsp;*/</span><br>}MGraph;<br></code></pre></div><p>使用邻接矩阵实现一个图</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs markdown" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">void&nbsp;CreateMGraph(MGraph&nbsp;*G){<br><br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i,j,k,w;<br>&nbsp;&nbsp;&nbsp;&nbsp;printf("输入顶点数和边数:\n");<br>&nbsp;&nbsp;&nbsp;&nbsp;//1.&nbsp;输入顶点数/边数<br>&nbsp;&nbsp;&nbsp;&nbsp;scanf("%d,%d",&amp;G-&gt;numNodes,&amp;G-&gt;numEdges);<br>&nbsp;&nbsp;&nbsp;&nbsp;printf("顶点数:%d,边数:%d\n",G-&gt;numNodes,G-&gt;numEdges);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//2.输入顶点信息/顶点表<br>&nbsp;&nbsp;&nbsp;&nbsp;for(i&nbsp;=&nbsp;0;&nbsp;i<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">=</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numNodes;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf("%c",&amp;G-&gt;vexs[i]);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//3.初始化邻接矩阵<br>&nbsp;&nbsp;&nbsp;&nbsp;for(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numNodes;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(j&nbsp;=&nbsp;0;&nbsp;j&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numNodes;j++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>]&nbsp;=&nbsp;INFINITYC;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//4.输入边表信息<br>&nbsp;&nbsp;&nbsp;&nbsp;for(k&nbsp;=&nbsp;0;&nbsp;k&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numEdges;k++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("输入边(vi,vj)上的下标i,下标j,权w\n");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf("%d,%d,%d",&amp;i,&amp;j,&amp;w);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>]&nbsp;=&nbsp;w;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//如果无向图,矩阵对称;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>]&nbsp;=&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*5.打印邻接矩阵*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numNodes;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("\n");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numNodes;&nbsp;j++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("%d&nbsp;",G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;printf("\n");<br>}<br></code></pre></div><h3 id="邻接表"><a href="#邻接表" class="headerlink" title="邻接表"></a>邻接表</h3><p>任何一种数据结构既可以使用顺序存储，当然也可以使用链式存储，图也是，图的链式存储一般称作 <strong>邻接表</strong> 其实也是单链表的一种体现。</p><img src="https://s1.ax1x.com/2020/05/10/Y31AzT.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>同时是这个图我们看看如何去实现它的链式存储：</p><img src="https://s1.ax1x.com/2020/05/10/Y3twkQ.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:120%;" /><p>注意这里每条单链表的意思不是说V0指向V1然后V1指向V2，而是所有的后继元素都是被V0指向的，也就是V0指向V1，V2，V3，不知你是否理解。</p><p>邻接表的数据结构：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//邻接表的节点</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Node</span>{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;adj_vex_index;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//弧头的下标，也就是被指向的下标</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Element&nbsp;data;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//权重值</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Node</span>&nbsp;*&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">next</span>;</span>&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//边指针</span><br>}EdgeNode;<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//顶点节点表</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">vNode</span>{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Element&nbsp;data;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//顶点的权值</span><br>&nbsp;&nbsp;&nbsp;&nbsp;EdgeNode&nbsp;*&nbsp;firstedge;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//顶点下一个是谁？</span><br>}VertexNode,&nbsp;Adjlist[M];<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//总图的一些信息</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Graph</span>{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Adjlist&nbsp;adjlist;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//顶点表</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;arc_num;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//边的个数</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;node_num;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//节点个数</span><br>&nbsp;&nbsp;&nbsp;&nbsp;BOOL&nbsp;is_directed;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//是不是有向图</span><br>}Graph,&nbsp;*GraphLink;<br></code></pre></div><p>使用邻接表实现一个图</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">void&nbsp;creatGraph(GraphLink&nbsp;*g){<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i,j,k;<br>&nbsp;&nbsp;&nbsp;&nbsp;EdgeNode&nbsp;*p;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//1.&nbsp;顶点,边,是否有向</span><br>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"输入顶点数目,边数和有向？：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;scanf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d&nbsp;%d&nbsp;%d"</span>,&nbsp;&amp;(*g)-&gt;node_num,&nbsp;&amp;(*g)-&gt;arc_num,&nbsp;&amp;(*g)-&gt;is_directed);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//2.顶点表</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"输入顶点信息：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;(*g)-&gt;node_num;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getchar();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%c"</span>,&nbsp;&amp;(*g)-&gt;adjlist[i].data);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*g)-&gt;adjlist[i].firstedge&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//3.</span><br>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"输入边信息：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(k&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;k&nbsp;&lt;&nbsp;(*g)-&gt;arc_num;&nbsp;k++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getchar();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d&nbsp;%d"</span>,&nbsp;&amp;i,&nbsp;&amp;j);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//①新建一个节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;(EdgeNode&nbsp;*)malloc(sizeof(EdgeNode));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//②弧头的下标</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;adj_vex_index&nbsp;=&nbsp;j;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//③头插法插进去，插的时候要找到弧尾，那就是顶点数组的下标i</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;next&nbsp;=&nbsp;(*g)-&gt;adjlist[i].firstedge;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//④将顶点数组[i].firstedge&nbsp;设置为p</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*g)-&gt;adjlist[i].firstedge&nbsp;=&nbsp;p;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//j-&gt;i</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(!(*g)-&gt;is_directed)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;j&nbsp;-----&gt;&nbsp;i</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//①新建一个节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;(EdgeNode&nbsp;*)malloc(sizeof(EdgeNode));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//②弧头的下标i</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;adj_vex_index&nbsp;=&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//③头插法插进去，插的时候要找到弧尾，那就是顶点数组的下标i</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;next&nbsp;=&nbsp;(*g)-&gt;adjlist[j].firstedge;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//④将顶点数组[i].firstedge&nbsp;设置为p</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*g)-&gt;adjlist[j].firstedge&nbsp;=&nbsp;p;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br>void&nbsp;putGraph(GraphLink&nbsp;g){<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"邻接表中存储信息:\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//遍历一遍顶点坐标，每个再进去走一次</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;g-&gt;node_num;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EdgeNode&nbsp;*&nbsp;p&nbsp;=&nbsp;g-&gt;adjlist[i].firstedge;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(p)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%c-&gt;%c&nbsp;"</span>,&nbsp;g-&gt;adjlist[i].data,&nbsp;g-&gt;adjlist[p-&gt;adj_vex_index].data);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;p-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre></div><h2 id="深度优先搜索"><a href="#深度优先搜索" class="headerlink" title="深度优先搜索"></a>深度优先搜索</h2><p>图的深度优先遍历和树的先序遍历比较类似。</p><p>它的思想是：</p><ol><li>任意选择一个顶点作为起始点。</li><li>若当前访问的顶点的邻接顶点有未被访问的，任选一个访问之；反之退回到最近访问过的顶点；直到与起始顶点想通的全部顶点都访问完毕。</li><li>若此时图中尚有顶点未被访问，则再选其中一个顶点作为起始顶点并访问之，转2；反之遍历结束。</li></ol><p>显然深度优先搜索是一个递归的过程。</p><img src="https://s1.ax1x.com/2020/05/10/Y3rwAP.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:120%;" /><p>我们按照思路对上图进行遍历，首先我们看第一次遍历完是什么样：</p><img src="https://s1.ax1x.com/2020/05/10/Y3ra7t.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:120%;" /><p>是否找到了所有的顶点？显然不是，缺少了7，那么接下来怎么办：我们从最后的节点开始往回遍历，找到每个节点连通的所有节点，如果节点已经被遍历了不管，如果没有被访问那么我们加进去即可：</p><img src="https://s1.ax1x.com/2020/05/10/Y3yRYV.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:120%;" /><h3 id="邻接矩阵的深度优先搜索"><a href="#邻接矩阵的深度优先搜索" class="headerlink" title="邻接矩阵的深度优先搜索"></a>邻接矩阵的深度优先搜索</h3><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs markdown" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;OK&nbsp;1</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;ERROR&nbsp;0</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;TRUE&nbsp;1</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;FALSE&nbsp;0</span><br><br>typedef&nbsp;int&nbsp;Status;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;Status是函数的类型,其值是函数结果状态代码，如OK等&nbsp;*</span>/<br>typedef&nbsp;int&nbsp;Boolean;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;Boolean是布尔类型,其值是TRUE或FALSE&nbsp;*</span>/<br><br>typedef&nbsp;char&nbsp;VertexType;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;顶点类型应由用户定义&nbsp;*</span>/<br>typedef&nbsp;int&nbsp;EdgeType;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;边上的权值类型应由用户定义&nbsp;*</span>/<br><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;MAXSIZE&nbsp;9&nbsp;/*&nbsp;存储空间初始分配量&nbsp;*/</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;MAXEDGE&nbsp;15</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;MAXVEX&nbsp;9</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;INFINITYC&nbsp;65535</span><br><br>typedef&nbsp;struct<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;VertexType&nbsp;vexs[MAXVEX];&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;顶点表&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;EdgeType&nbsp;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">MAXVEX</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">MAXVEX</span>];/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;邻接矩阵，可看作边表&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;numVertexes,&nbsp;numEdges;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;图中当前的顶点数和边数&nbsp;*</span>/<br>}MGraph;<br><br>/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*4.1&nbsp;构建一个邻接矩阵*</span>/<br>void&nbsp;CreateMGraph(MGraph&nbsp;*G)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i,&nbsp;j;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//1.&nbsp;确定图的顶点数以及边数<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;numEdges=15;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;numVertexes=9;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*2.读入顶点信息，建立顶点表&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[0]='A';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[1]='B';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[2]='C';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[3]='D';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[4]='E';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[5]='F';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[6]='G';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[7]='H';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[8]='I';<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*3.&nbsp;初始化图中的边表*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;j++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>]=0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*4.将图中的连接信息输入到边表中*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">0</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">0</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">5</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">2</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">8</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">2</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">2</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">8</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">4</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">7</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">8</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">4</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">5</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">4</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">7</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">5</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">7</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*5.无向图是对称矩阵.构成对称*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;for(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(j&nbsp;=&nbsp;i;&nbsp;j&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;j++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>]&nbsp;=G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br>/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*4.2&nbsp;DFS遍历*</span>/<br>Boolean&nbsp;visited[MAXVEX];&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;访问标志的数组&nbsp;*</span>/<br>//1.&nbsp;标识顶点是否被标记过;<br>//2.&nbsp;选择从某一个顶点开始(注意:非连通图的情况)<br>//3.&nbsp;进入递归,打印i点信息,标识;&nbsp;边表<br>//4.&nbsp;[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>]&nbsp;是否等于1,没有变遍历过visted<br>void&nbsp;DFS(MGraph&nbsp;G,int&nbsp;i){<br>&nbsp;&nbsp;&nbsp;&nbsp;//1.<br>&nbsp;&nbsp;&nbsp;&nbsp;visited[i]&nbsp;=&nbsp;TRUE;<br>&nbsp;&nbsp;&nbsp;&nbsp;printf("%c",G.vexs[i]);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//2.0~numVertexes<br>&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.numVertexes</span>;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">if</span>(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.arc</span>[<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>]&nbsp;==&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>&nbsp;&amp;&amp;&nbsp;!<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">visited</span>[<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">DFS</span>(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G</span>,&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br><span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">DFSTravese</span>(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">MGraph</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G</span>){<br>&nbsp;&nbsp;&nbsp;&nbsp;//<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">1.</span>初始化<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">for</span>(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>=<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">0;i</span>&lt;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.numVertexes</span>;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">visited</span>[<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>]&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">FALSE;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">2.</span>某一个顶点<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">for</span>(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">0;i</span>&lt;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.numVertexes</span>;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">if</span>(!<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">visited</span>[<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>]){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">DFS</span>(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G</span>,&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br><span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">main</span>(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">argc</span>,&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">argv</span>[])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">insert</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">code</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">here...</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">printf</span>("邻接矩阵的深度优先遍历!\<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">n</span>");<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">MGraph</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">CreateMGraph</span>(&amp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">DFSTravese</span>(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">printf</span>("\<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">n</span>");<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br></span></span></code></pre></div><h3 id="邻接表的深度优先搜索"><a href="#邻接表的深度优先搜索" class="headerlink" title="邻接表的深度优先搜索"></a>邻接表的深度优先搜索</h3><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs markdown" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;OK&nbsp;1</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;ERROR&nbsp;0</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;TRUE&nbsp;1</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;FALSE&nbsp;0</span><br><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;MAXSIZE&nbsp;9&nbsp;/*&nbsp;存储空间初始分配量&nbsp;*/</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;MAXEDGE&nbsp;15</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;MAXVEX&nbsp;9</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;INFINITYC&nbsp;65535</span><br><br>typedef&nbsp;int&nbsp;Status;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;Status是函数的类型,其值是函数结果状态代码,如OK等&nbsp;*</span>/<br>typedef&nbsp;int&nbsp;Boolean;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;Boolean是布尔类型,其值是TRUE或FALSE&nbsp;*</span>/<br><br>typedef&nbsp;char&nbsp;VertexType;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;顶点类型应由用户定义&nbsp;*</span>/<br>typedef&nbsp;int&nbsp;EdgeType;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;边上的权值类型应由用户定义&nbsp;*</span>/<br><br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;邻接矩阵结构&nbsp;*</span>/<br>typedef&nbsp;struct<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;VertexType&nbsp;vexs[MAXVEX];&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;顶点表&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;EdgeType&nbsp;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">MAXVEX</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">MAXVEX</span>];/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;邻接矩阵,可看作边表&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;numVertexes,&nbsp;numEdges;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;图中当前的顶点数和边数&nbsp;*</span>/<br>}MGraph;<br><br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;邻接表结构*</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">**&nbsp;*</span>/<br>typedef&nbsp;struct&nbsp;EdgeNode&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;边表结点&nbsp;*</span>/<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;adjvex;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;邻接点域,存储该顶点对应的下标&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;weight;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;用于存储权值,对于非网图可以不需要&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;struct&nbsp;EdgeNode&nbsp;<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*next;&nbsp;/*</span>&nbsp;链域,指向下一个邻接点&nbsp;*/<br>}EdgeNode;<br><br>typedef&nbsp;struct&nbsp;VertexNode&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;顶点表结点&nbsp;*</span>/<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;in;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;顶点入度&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;data;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;顶点域,存储顶点信息&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;EdgeNode&nbsp;<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*firstedge;/*</span>&nbsp;边表头指针&nbsp;*/<br>}VertexNode,&nbsp;AdjList[MAXVEX];<br><br>typedef&nbsp;struct<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;AdjList&nbsp;adjList;<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;numVertexes,numEdges;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;图中当前顶点数和边数&nbsp;*</span>/<br>}graphAdjList,*GraphAdjList;<br><br>/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*4.1&nbsp;构建一个邻接矩阵*</span>/<br>void&nbsp;CreateMGraph(MGraph&nbsp;*G)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i,&nbsp;j;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//1.&nbsp;确定图的顶点数以及边数<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;numEdges=15;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;numVertexes=9;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*2.读入顶点信息，建立顶点表&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[0]='A';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[1]='B';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[2]='C';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[3]='D';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[4]='E';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[5]='F';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[6]='G';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[7]='H';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[8]='I';<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*3.&nbsp;初始化图中的边表*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;j++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>]=0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*4.将图中的连接信息输入到边表中*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">0</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">0</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">5</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">2</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">8</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">2</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">2</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">8</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">4</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">7</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">8</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">4</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">5</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">4</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">7</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">5</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">7</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*5.无向图是对称矩阵.构成对称*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;for(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(j&nbsp;=&nbsp;i;&nbsp;j&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;j++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>]&nbsp;=G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br>/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*4.2&nbsp;利用邻接矩阵构建邻接表*</span>/<br>void&nbsp;CreateALGraph(MGraph&nbsp;G,GraphAdjList&nbsp;*GL){<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//1.创建邻接表,并且设计邻接表的顶点数以及弧数<br>&nbsp;&nbsp;&nbsp;&nbsp;*GL&nbsp;=&nbsp;(GraphAdjList)malloc(sizeof(graphAdjList));<br>&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;numVertexes&nbsp;=&nbsp;G.numVertexes;<br>&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;numEdges&nbsp;=&nbsp;G.numEdges;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//2.&nbsp;从邻接矩阵中将顶点信息输入<br>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.numVertexes</span>;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//顶点入度为<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">0</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">GL</span>)<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">-</span>&gt;</span></span>adjList[i].in&nbsp;=&nbsp;0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//顶点信息<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;adjList[i].data&nbsp;=&nbsp;G.vexs[i];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//顶点边表置空<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;adjList[i].firstedge&nbsp;=&nbsp;NULL;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//3.&nbsp;建立边表<br>&nbsp;&nbsp;&nbsp;&nbsp;EdgeNode&nbsp;*e;<br>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.numVertexes</span>;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">0;</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>&nbsp;&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.numVertexes</span>;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.arc</span>[<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>]&nbsp;==&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1)</span>&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//创建边表中的邻近结点&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i-</span>&gt;</span></span>j<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e&nbsp;=&nbsp;(EdgeNode&nbsp;*)malloc(sizeof(EdgeNode));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//邻接序号为j<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e-&gt;adjvex&nbsp;=&nbsp;j;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//将当前结点的指向adjList[i]的顶点边表上<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e-&gt;next&nbsp;=&nbsp;(*GL)-&gt;adjList[i].firstedge;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;adjList[i].firstedge&nbsp;=&nbsp;e;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//顶点j&nbsp;上的入度++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;adjList[j].in++;<br><br>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//创建边表中的邻近结点&nbsp;j-&gt;i<br>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e&nbsp;=&nbsp;(EdgeNode&nbsp;*)malloc(sizeof(EdgeNode));<br>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//邻接序号为j<br>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e-&gt;adjvex&nbsp;=&nbsp;i;<br>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//将当前结点的指向adjList[i]的顶点边表上<br>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e-&gt;next&nbsp;=&nbsp;(*GL)-&gt;adjList[j].firstedge;<br>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;adjList[j].firstedge&nbsp;=&nbsp;e;<br>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//顶点j&nbsp;上的入度++;<br>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;adjList[i].in++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br><br>Boolean&nbsp;visited[MAXSIZE];&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;访问标志的数组&nbsp;*</span>/<br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;邻接表的深度优先递归算法&nbsp;*</span>/<br>void&nbsp;DFS(GraphAdjList&nbsp;GL,&nbsp;int&nbsp;i)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;EdgeNode&nbsp;*p;<br>&nbsp;&nbsp;&nbsp;&nbsp;visited[i]&nbsp;=&nbsp;TRUE;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//2.打印顶点&nbsp;A<br>&nbsp;&nbsp;&nbsp;&nbsp;printf("%c&nbsp;",GL-&gt;adjList[i].data);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;GL-&gt;adjList[i].firstedge;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//3.<br>&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(p)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!visited[p-&gt;adjvex])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DFS(GL,p-&gt;adjvex);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;p-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>}<br><br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;邻接表的深度遍历操作&nbsp;*</span>/<br>void&nbsp;DFSTraverse(GraphAdjList&nbsp;GL)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;//1.&nbsp;将访问记录数组默认置为FALSE<br>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">GL-</span>&gt;</span></span>numVertexes;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*初始化所有顶点状态都是未访问过的状态*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visited[i]&nbsp;=&nbsp;FALSE;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//2.&nbsp;选择一个顶点开始DFS遍历.&nbsp;例如A<br>&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">GL-</span>&gt;</span></span>numVertexes;&nbsp;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//对未访问过的顶点调用DFS,&nbsp;若是连通图则只会执行一次.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!visited[i])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DFS(GL,&nbsp;i);<br>}<br><br><br>int&nbsp;main(int&nbsp;argc,&nbsp;const&nbsp;char&nbsp;*&nbsp;argv[])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;insert&nbsp;code&nbsp;here...<br>&nbsp;&nbsp;&nbsp;&nbsp;printf("邻接表的深度优先遍历!\n");<br>&nbsp;&nbsp;&nbsp;&nbsp;MGraph&nbsp;G;<br>&nbsp;&nbsp;&nbsp;&nbsp;GraphAdjList&nbsp;GL;<br>&nbsp;&nbsp;&nbsp;&nbsp;CreateMGraph(&amp;G);<br>&nbsp;&nbsp;&nbsp;&nbsp;CreateALGraph(G,&amp;GL);<br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;DFSTraverse(GL);<br>&nbsp;&nbsp;&nbsp;&nbsp;printf("\n");<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0;<br>}<br></code></pre></div><h2 id="广度优先搜索"><a href="#广度优先搜索" class="headerlink" title="广度优先搜索"></a>广度优先搜索</h2><p>思路：从图的某一结点出发，首先依次访问该结点的所有邻接顶点 Vi1, Vi2, …, Vin 再按这些顶点被访问的先后次序依次访问与它们相邻接的所有未被访问的顶点，重复此过程，直至所有顶点均被访问为止。</p><p>其实跟树的层序遍历很像，我们把图稍微变变你再看看：</p><img src="https://s1.ax1x.com/2020/05/10/Y3c5Z9.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:120%;" /><p>图还是那个图，只不过我挪了挪，像不像二叉树，哈哈~~接下来阐述一下思路，首先遍历根节点，然后找到左子树和右子树，接着遍历左子树和右子树，依次类推，不过这里为了方便借用一下前面学过的一种数据结构 <strong><code>队列</code></strong> </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>入队---- 队列不为空----<span class="number">-1</span>出队的同时 <span class="number">2</span>，<span class="number">6</span>入队----<span class="number">-2</span>出队的同时<span class="number">8</span>，<span class="number">5</span>入队列，其实其思想就是谁出队谁的子节点入队以此类推。</span><br></pre></td></tr></table></figure><h3 id="邻接矩阵的广度优先搜索"><a href="#邻接矩阵的广度优先搜索" class="headerlink" title="邻接矩阵的广度优先搜索"></a>邻接矩阵的广度优先搜索</h3><p>话不多说，直接上代码</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs markdown" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;OK&nbsp;1</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;ERROR&nbsp;0</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;TRUE&nbsp;1</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;FALSE&nbsp;0</span><br><br>typedef&nbsp;int&nbsp;Status;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;Status是函数的类型,其值是函数结果状态代码，如OK等&nbsp;*</span>/<br>typedef&nbsp;int&nbsp;Boolean;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;Boolean是布尔类型,其值是TRUE或FALSE&nbsp;*</span>/<br><br>typedef&nbsp;char&nbsp;VertexType;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;顶点类型应由用户定义&nbsp;*</span>/<br>typedef&nbsp;int&nbsp;EdgeType;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;边上的权值类型应由用户定义&nbsp;*</span>/<br><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;MAXSIZE&nbsp;9&nbsp;/*&nbsp;存储空间初始分配量&nbsp;*/</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;MAXEDGE&nbsp;15</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;MAXVEX&nbsp;9</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;INFINITYC&nbsp;65535</span><br><br>typedef&nbsp;struct<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;VertexType&nbsp;vexs[MAXVEX];&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;顶点表&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;EdgeType&nbsp;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">MAXVEX</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">MAXVEX</span>];/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;邻接矩阵，可看作边表&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;numVertexes,&nbsp;numEdges;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;图中当前的顶点数和边数&nbsp;*</span>/<br>}MGraph;<br><br>/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*4.1&nbsp;构建一个邻接矩阵*</span>/<br>void&nbsp;CreateMGraph(MGraph&nbsp;*G)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i,&nbsp;j;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//1.&nbsp;确定图的顶点数以及边数<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;numEdges=15;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;numVertexes=9;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*2.读入顶点信息，建立顶点表&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[0]='A';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[1]='B';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[2]='C';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[3]='D';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[4]='E';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[5]='F';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[6]='G';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[7]='H';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[8]='I';<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*3.&nbsp;初始化图中的边表*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;j++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>]=0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*4.将图中的连接信息输入到边表中*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">0</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">0</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">5</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">2</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">8</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">2</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">2</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">8</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">4</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">7</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">8</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">4</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">5</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">4</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">7</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">5</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">7</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*5.无向图是对称矩阵.构成对称*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;for(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(j&nbsp;=&nbsp;i;&nbsp;j&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;j++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>]&nbsp;=G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br>/*<br>&nbsp;4.2&nbsp;<span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">***需要用到的队列结构与相关功能函数**</span>*<br>&nbsp;*/<br><br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;循环队列的顺序存储结构&nbsp;*</span>/<br>typedef&nbsp;struct<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;data[MAXSIZE];<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;front;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;头指针&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;rear;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;尾指针，若队列不空，指向队列尾元素的下一个位置&nbsp;*</span>/<br>}Queue;<br><br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;初始化一个空队列Q&nbsp;*</span>/<br>Status&nbsp;InitQueue(Queue&nbsp;*Q)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;front=0;<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;rear=0;<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&nbsp;OK;<br>}<br><br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;若队列Q为空队列,则返回TRUE,否则返回FALSE&nbsp;*</span>/<br>Status&nbsp;QueueEmpty(Queue&nbsp;Q)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;if(Q.front==Q.rear)&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;队列空的标志&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;TRUE;<br>&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;FALSE;<br>}<br><br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;若队列未满，则插入元素e为Q新的队尾元素&nbsp;*</span>/<br>Status&nbsp;EnQueue(Queue&nbsp;*Q,int&nbsp;e)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((Q-&gt;rear+1)%MAXSIZE&nbsp;==&nbsp;Q-&gt;front)&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;队列满的判断&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;data[Q-&gt;rear]=e;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;将元素e赋值给队尾&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;rear=(Q-&gt;rear+1)%MAXSIZE;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;rear指针向后移一位置，&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;若到最后则转到数组头部&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&nbsp;OK;<br>}<br><br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;若队列不空，则删除Q中队头元素，用e返回其值&nbsp;*</span>/<br>Status&nbsp;DeQueue(Queue&nbsp;<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*Q,int&nbsp;*</span>e)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Q-&gt;front&nbsp;==&nbsp;Q-&gt;rear)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;队列空的判断&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*e=Q-&gt;data[Q-&gt;front];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*</span>&nbsp;将队头元素赋值给e&nbsp;*/<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;front=(Q-&gt;front+1)%MAXSIZE;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;front指针向后移一位置，&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;若到最后则转到数组头部&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&nbsp;OK;<br>}<br>/<span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">***&nbsp;Queue&nbsp;End&nbsp;**</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span>**/<br><br>/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*4.3&nbsp;邻接矩阵广度优先遍历-代码实现*</span>/<br>Boolean&nbsp;visited[MAXVEX];&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;访问标志的数组&nbsp;*</span>/<br>void&nbsp;BFSTraverse(MGraph&nbsp;G){<br><br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;temp&nbsp;=&nbsp;0;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//1.<br>&nbsp;&nbsp;&nbsp;&nbsp;Queue&nbsp;Q;<br>&nbsp;&nbsp;&nbsp;&nbsp;InitQueue(&amp;Q);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//2.将访问标志数组全部置为"未访问状态FALSE"<br>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0&nbsp;;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.numVertexes</span>;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">visited</span>[<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>]&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">FALSE;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">3.</span>对遍历邻接表中的每一个顶点(对于连通图只会执行<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">1</span>次,这个循环是针对非连通图)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">0</span>&nbsp;;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>&nbsp;&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.numVertexes</span>;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>++)&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">if</span>(!<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">visited</span>[<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>]){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">visited</span>[<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>]&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">TRUE;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">printf</span>("%<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">c</span>&nbsp;&nbsp;",<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.vexs</span>[<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>]);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">4.</span>&nbsp;入队<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">EnQueue</span>(&amp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">Q</span>,&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(!<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">QueueEmpty</span>(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">Q</span>))&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//出队<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">DeQueue</span>(&amp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">Q</span>,&nbsp;&amp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">0;</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>&nbsp;&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.numVertexes</span>;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">if</span>(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.arc</span>[<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>]&nbsp;==&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>&nbsp;&amp;&amp;&nbsp;!<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">visited</span>[<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">visited</span>[<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>]&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">TRUE;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">printf</span>("%<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">c</span>&nbsp;&nbsp;&nbsp;",<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.vexs</span>[<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">EnQueue</span>(&amp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">Q</span>,&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br><br>}<br><br><span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">main</span>(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">argc</span>,&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">argv</span>[])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">insert</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">code</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">here...</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">printf</span>("邻接矩阵广度优先遍历!\<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">n</span>");<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">MGraph</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">CreateMGraph</span>(&amp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">BFSTraverse</span>(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">printf</span>("\<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">n</span>");<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br></span></span></code></pre></div><h3 id="邻接表的广度优先搜索"><a href="#邻接表的广度优先搜索" class="headerlink" title="邻接表的广度优先搜索"></a>邻接表的广度优先搜索</h3><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs markdown" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;OK&nbsp;1</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;ERROR&nbsp;0</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;TRUE&nbsp;1</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;FALSE&nbsp;0</span><br><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;MAXSIZE&nbsp;9&nbsp;/*&nbsp;存储空间初始分配量&nbsp;*/</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;MAXEDGE&nbsp;15</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;MAXVEX&nbsp;9</span><br><span class="hljs-section" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">#define&nbsp;INFINITYC&nbsp;65535</span><br><br>typedef&nbsp;int&nbsp;Status;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;Status是函数的类型,其值是函数结果状态代码,如OK等&nbsp;*</span>/<br>typedef&nbsp;int&nbsp;Boolean;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;Boolean是布尔类型,其值是TRUE或FALSE&nbsp;*</span>/<br><br>typedef&nbsp;char&nbsp;VertexType;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;顶点类型应由用户定义&nbsp;*</span>/<br>typedef&nbsp;int&nbsp;EdgeType;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;边上的权值类型应由用户定义&nbsp;*</span>/<br><br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;邻接矩阵结构&nbsp;*</span>/<br>typedef&nbsp;struct<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;VertexType&nbsp;vexs[MAXVEX];&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;顶点表&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;EdgeType&nbsp;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">MAXVEX</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">MAXVEX</span>];/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;邻接矩阵,可看作边表&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;numVertexes,&nbsp;numEdges;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;图中当前的顶点数和边数&nbsp;*</span>/<br>}MGraph;<br><br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;邻接表结构*</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">**&nbsp;*</span>/<br>typedef&nbsp;struct&nbsp;EdgeNode&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;边表结点&nbsp;*</span>/<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;adjvex;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;邻接点域,存储该顶点对应的下标&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;weight;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;用于存储权值,对于非网图可以不需要&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;struct&nbsp;EdgeNode&nbsp;<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*next;&nbsp;/*</span>&nbsp;链域,指向下一个邻接点&nbsp;*/<br>}EdgeNode;<br><br>typedef&nbsp;struct&nbsp;VertexNode&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;顶点表结点&nbsp;*</span>/<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;in;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;顶点入度&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;data;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;顶点域,存储顶点信息&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;EdgeNode&nbsp;<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*firstedge;/*</span>&nbsp;边表头指针&nbsp;*/<br>}VertexNode,&nbsp;AdjList[MAXVEX];<br><br>typedef&nbsp;struct<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;AdjList&nbsp;adjList;<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;numVertexes,numEdges;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;图中当前顶点数和边数&nbsp;*</span>/<br>}graphAdjList,*GraphAdjList;<br><br>/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*4.1&nbsp;构建一个邻接矩阵*</span>/<br>void&nbsp;CreateMGraph(MGraph&nbsp;*G)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i,&nbsp;j;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//1.&nbsp;确定图的顶点数以及边数<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;numEdges=15;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;numVertexes=9;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*2.读入顶点信息，建立顶点表&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[0]='A';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[1]='B';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[2]='C';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[3]='D';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[4]='E';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[5]='F';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[6]='G';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[7]='H';<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;vexs[8]='I';<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*3.&nbsp;初始化图中的边表*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;j++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>]=0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*4.将图中的连接信息输入到边表中*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">0</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">0</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">5</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">2</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">8</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">2</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">2</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">8</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">4</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">7</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">3</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">8</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">4</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">5</span>]=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">4</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">7</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">5</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">6</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">7</span>]=1;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*5.无向图是对称矩阵.构成对称*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;for(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(j&nbsp;=&nbsp;i;&nbsp;j&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G-</span>&gt;</span></span>numVertexes;&nbsp;j++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>]&nbsp;=G-&gt;arc[<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-symbol" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">j</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br>/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*4.2&nbsp;利用邻接矩阵构建邻接表*</span>/<br>void&nbsp;CreateALGraph(MGraph&nbsp;G,GraphAdjList&nbsp;*GL){<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//1.创建邻接表,并且设计邻接表的顶点数以及弧数<br>&nbsp;&nbsp;&nbsp;&nbsp;*GL&nbsp;=&nbsp;(GraphAdjList)malloc(sizeof(graphAdjList));<br>&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;numVertexes&nbsp;=&nbsp;G.numVertexes;<br>&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;numEdges&nbsp;=&nbsp;G.numEdges;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//2.&nbsp;从邻接矩阵中将顶点信息输入<br>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.numVertexes</span>;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//顶点入度为<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">0</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">GL</span>)<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">-</span>&gt;</span></span>adjList[i].in&nbsp;=&nbsp;0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//顶点信息<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;adjList[i].data&nbsp;=&nbsp;G.vexs[i];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//顶点边表置空<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;adjList[i].firstedge&nbsp;=&nbsp;NULL;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//3.&nbsp;建立边表<br>&nbsp;&nbsp;&nbsp;&nbsp;EdgeNode&nbsp;*e;<br>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.numVertexes</span>;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">0;</span>&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>&nbsp;&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.numVertexes</span>;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">G.arc</span>[<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i</span>][<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">j</span>]&nbsp;==&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">1)</span>&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//创建边表中的邻近结点&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">i-</span>&gt;</span></span>j<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e&nbsp;=&nbsp;(EdgeNode&nbsp;*)malloc(sizeof(EdgeNode));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//邻接序号为j<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e-&gt;adjvex&nbsp;=&nbsp;j;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//将当前结点的指向adjList[i]的顶点边表上<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e-&gt;next&nbsp;=&nbsp;(*GL)-&gt;adjList[i].firstedge;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;adjList[i].firstedge&nbsp;=&nbsp;e;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//顶点j&nbsp;上的入度++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;adjList[j].in++;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//创建边表中的邻近结点&nbsp;j-&gt;i<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e&nbsp;=&nbsp;(EdgeNode&nbsp;*)malloc(sizeof(EdgeNode));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//邻接序号为j<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e-&gt;adjvex&nbsp;=&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//将当前结点的指向adjList[i]的顶点边表上<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e-&gt;next&nbsp;=&nbsp;(*GL)-&gt;adjList[j].firstedge;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;adjList[j].firstedge&nbsp;=&nbsp;e;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//顶点j&nbsp;上的入度++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*GL)-&gt;adjList[i].in++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br><br>}<br><br>/*<br>&nbsp;5.2&nbsp;<span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">***需要用到的队列结构与相关功能函数**</span>*<br>&nbsp;*/<br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;循环队列的顺序存储结构&nbsp;*</span>/<br>typedef&nbsp;struct<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;data[MAXSIZE];<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;front;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;头指针&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;rear;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;尾指针,若队列不空,指向队列尾元素的下一个位置&nbsp;*</span>/<br>}Queue;<br><br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;初始化一个空队列Q&nbsp;*</span>/<br>Status&nbsp;InitQueue(Queue&nbsp;*Q)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;front=0;<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;rear=0;<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&nbsp;OK;<br>}<br><br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;若队列Q为空队列,则返回TRUE,否则返回FALSE&nbsp;*</span>/<br>Status&nbsp;QueueEmpty(Queue&nbsp;Q)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;if(Q.front==Q.rear)&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;队列空的标志&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;TRUE;<br>&nbsp;&nbsp;&nbsp;&nbsp;else<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;FALSE;<br>}<br><br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;若队列未满,则插入元素e为Q新的队尾元素&nbsp;*</span>/<br>Status&nbsp;EnQueue(Queue&nbsp;*Q,int&nbsp;e)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((Q-&gt;rear+1)%MAXSIZE&nbsp;==&nbsp;Q-&gt;front)&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;队列满的判断&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;data[Q-&gt;rear]=e;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;将元素e赋值给队尾&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;rear=(Q-&gt;rear+1)%MAXSIZE;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;rear指针向后移一位置,&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;若到最后则转到数组头部&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&nbsp;OK;<br>}<br><br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;若队列不空,则删除Q中队头元素,用e返回其值&nbsp;*</span>/<br>Status&nbsp;DeQueue(Queue&nbsp;<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*Q,int&nbsp;*</span>e)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Q-&gt;front&nbsp;==&nbsp;Q-&gt;rear)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;队列空的判断&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*e=Q-&gt;data[Q-&gt;front];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*</span>&nbsp;将队头元素赋值给e&nbsp;*/<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;front=(Q-&gt;front+1)%MAXSIZE;&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;front指针向后移一位置,&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;若到最后则转到数组头部&nbsp;*</span>/<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&nbsp;OK;<br>}<br>/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;*</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">**&nbsp;Queue&nbsp;End&nbsp;**</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-strong" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">*****</span><span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">***</span><span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;*</span>/<br>/<span class="hljs-emphasis" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">*5.3&nbsp;邻接表广度优先遍历*</span>/<br>Boolean&nbsp;visited[MAXSIZE];&nbsp;/<span class="hljs-bullet" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">*&nbsp;访问标志的数组&nbsp;*</span>/<br>void&nbsp;BFSTraverse(GraphAdjList&nbsp;GL){<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//1.创建结点<br>&nbsp;&nbsp;&nbsp;&nbsp;EdgeNode&nbsp;*p;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Queue&nbsp;Q;<br>&nbsp;&nbsp;&nbsp;&nbsp;InitQueue(&amp;Q);<br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;//2.将访问标志数组全部置为"未访问状态FALSE"<br>&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">GL-</span>&gt;</span></span>numVertexes;&nbsp;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visited[i]&nbsp;=&nbsp;FALSE;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//3.对遍历邻接表中的每一个顶点(对于连通图只会执行1次,这个循环是针对非连通图)<br>&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;i&nbsp;=&nbsp;0&nbsp;;i&nbsp;<span class="xml" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); font-weight: bold; word-wrap: inherit !important; word-break: inherit !important;">&lt;&nbsp;<span class="hljs-attr" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">GL-</span>&gt;</span></span>numVertexes;i++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//4.判断当前结点是否被访问过.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!visited[i]){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visited[i]&nbsp;=&nbsp;TRUE;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//打印顶点<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("%c&nbsp;",GL-&gt;adjList[i].data);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnQueue(&amp;Q,&nbsp;i);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(!QueueEmpty(Q))&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DeQueue(&amp;Q,&nbsp;&amp;i);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;GL-&gt;adjList[i].firstedge;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(p)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//判断<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!visited[p-&gt;adjvex]){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visited[p-&gt;adjvex]&nbsp;=&nbsp;TRUE;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("%c&nbsp;",GL-&gt;adjList[p-&gt;adjvex].data);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnQueue(&amp;Q,&nbsp;p-&gt;adjvex);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;p-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>}<br><br>int&nbsp;main(int&nbsp;argc,&nbsp;const&nbsp;char&nbsp;*&nbsp;argv[])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;insert&nbsp;code&nbsp;here...<br>&nbsp;&nbsp;&nbsp;&nbsp;printf("邻接表广度优先遍历\n");<br>&nbsp;&nbsp;&nbsp;&nbsp;MGraph&nbsp;G;<br>&nbsp;&nbsp;&nbsp;&nbsp;GraphAdjList&nbsp;GL;<br>&nbsp;&nbsp;&nbsp;&nbsp;CreateMGraph(&amp;G);<br>&nbsp;&nbsp;&nbsp;&nbsp;CreateALGraph(G,&amp;GL);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;BFSTraverse(GL);<br>&nbsp;&nbsp;&nbsp;&nbsp;printf("\n");<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0;<br>}<br></code></pre></div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这篇文章主要是认识一下图示如何展示的，以及我们如何构思去存储一个图的结构和后续的图的深度优先搜索和广度优先搜索的各种实现，希望能够讲明白。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;初识图&quot;&gt;&lt;a href=&quot;#初识图&quot; class=&quot;headerlink&quot; title=&quot;初识图&quot;&gt;&lt;/a&gt;初识图&lt;/h2&gt;&lt;p&gt;图（Graph）是由顶点的有穷非空集合和顶点之间边的集合组成。通常表示为 &lt;strong&gt;&lt;code&gt;G[V,E]&lt;/code&gt;&lt;/strong&gt; 其中G表示一个图，V是图G中的顶点集合，E是图G中边的集合。
    
    </summary>
    
    
    
      <category term="数据结构" scheme="http://typeco.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://typeco.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://typeco.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法 - 哈夫曼树</title>
    <link href="http://typeco.cn/posts/140a00d4/"/>
    <id>http://typeco.cn/posts/140a00d4/</id>
    <published>2020-05-09T08:40:26.000Z</published>
    <updated>2020-05-09T16:50:08.567Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="哈夫曼（David-Huffman）"><a href="#哈夫曼（David-Huffman）" class="headerlink" title="哈夫曼（David Huffman）"></a>哈夫曼（David Huffman）</h2><blockquote><p>著名的 <strong>哈夫曼编码</strong> 发明人 戴维·霍夫曼于1999年10月17日因癌症去世，享年74岁，他发明了著名的的 <strong>霍夫曼编码</strong>，除了霍夫曼编码以外，他还涉及出二叉最优搜索树的算法，因为其效率最高，所以被命名为霍夫曼算法，是动态规划的一个范例<a id="more"></a></p></blockquote><img src="https://s1.ax1x.com/2020/05/09/YlmdC4.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:100%;" /><p>这个牛逼的男人活到了74岁，程序员还是蛮高寿的嘛，而且现在医疗手段更发达了，啊哈哈哈<del>不过这头还是秃了，没办法，谁让人聪明呢，匿了匿了 ~</del> </p><p>PS：貌似人家不是程序员，人家是科学家好吧….</p><h2 id="哈夫曼编码背景"><a href="#哈夫曼编码背景" class="headerlink" title="哈夫曼编码背景"></a>哈夫曼编码背景</h2><p>我们来看一个简单的问题，从小到大我们面临了很多的考试，小学-初中-高中… 然后老师对学生是如何进行区分的呢，不能说你考85他考73而让老师记住每个人的分数，而是通过一种分段的方法划分不同的学生：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (sum &lt; <span class="number">60</span>) &#123;</span><br><span class="line">      result = <span class="string">"不及格"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sum &lt; <span class="number">70</span>) &#123;</span><br><span class="line">      result = <span class="string">"及格"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sum &lt; <span class="number">80</span>) &#123;</span><br><span class="line">      result = <span class="string">"中等"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sum &lt; <span class="number">90</span>) &#123;</span><br><span class="line">      result = <span class="string">"良好"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      result = <span class="string">"优秀"</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>如图，通过划分及格片段，就可以把数以万计的学生分为5类，老师只用知道这个学生是哪个类别就大概知道他的分数，如此就很方便管理。</p><p>我们用二叉树来展示这个判断过程如下：</p><img src="https://s1.ax1x.com/2020/05/09/YlKBvj.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:100%;" /><p>我们永远是第一个判断这个学生是不是不及格，然后再去判断及格等等，那么问题来了，一个学校的学生中如果大部分都是不及格的，这个方法就很高效，但是很显然，我们大部分人应该集中在中等这个范围，所以基于此我们这个算法就有了优化的地方。</p><h2 id="哈夫曼思考"><a href="#哈夫曼思考" class="headerlink" title="哈夫曼思考"></a>哈夫曼思考</h2><p>我们需要知道每个分数段都有多少人，大概是这样：</p><img src="https://s1.ax1x.com/2020/05/09/YlJ236.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:100%;" /><p>我们会发现 <strong>70-79</strong>之间的人数最多，那么哈夫曼是如何思考的呢？</p><p>那么当然是最先遍历 <strong>70</strong> 的条件，很大可能第一次就找到结果而不用多次判断，所以这个优化后的二叉树应该是从根到叶子是权值逐渐变小的，所以他的思路就是从叶子开始叶子都是集中找目前最小的两个权值作为左右子树合并为一个父节点以此类推，直到找到根节点即可。</p><img src="https://s1.ax1x.com/2020/05/09/Y1SE40.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:100%;" /><h2 id="哈弗曼树的构建"><a href="#哈弗曼树的构建" class="headerlink" title="哈弗曼树的构建"></a>哈弗曼树的构建</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A <span class="number">5</span> </span><br><span class="line">E <span class="number">10</span></span><br><span class="line">B <span class="number">15</span></span><br><span class="line">D <span class="number">30</span></span><br><span class="line">C <span class="number">40</span></span><br></pre></td></tr></table></figure><p>已知我们有5种情况，每种情况对应的权值如上，我们如何构造出一个哈夫曼树。</p><ol><li>首先找到目前权值最小的两个子几点，构成一个二叉树，如下：</li></ol><img src="https://s1.ax1x.com/2020/05/09/Y1S84x.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:100%;" /><ol start="2"><li>由于A和E生成一个二叉树，其根节点的权值就会变成 <strong>A+E = 15</strong>  ，所以接下来 我们就要从 <strong>N1,B,D,C</strong> 中找到最小的两个，PS：其原理就是每次都要找最小的两个权值生成树</li></ol><img src="https://s1.ax1x.com/2020/05/09/Y1pFMD.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:100%;" /><ol start="3"><li>以此类推，最终这个哈弗曼树应该是这样：</li></ol><img src="https://s1.ax1x.com/2020/05/09/Y1pDL4.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:100%;" /><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;MaxValue&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10000</span>;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//初始设定的权值最大值</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;MaxBit&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//初始设定的最大编码位数</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;MaxN&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//初始设定的最大结点个数</span><br><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">HaffNode</span>{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;weight;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;flag;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;parent;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;leftChild;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;rightChild;<br>}HaffNode;<br><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Code</span>//存放哈夫曼编码的数据元素结构<br>{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;bit[MaxBit];<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//数组</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;start;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//编码的起始下标</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;weight;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//字符的权值</span><br>}Code;<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//1.</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//根据权重值,构建哈夫曼树;</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//{2,4,5,7}</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//n&nbsp;=&nbsp;4;</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Haffman</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;weight[],<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;n,HaffNode&nbsp;*haffTree)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;j,m1,m2,x1,x2;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//1.哈夫曼树初始化</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//n个叶子结点.&nbsp;2n-1</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>*n<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;i++){<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(i&lt;n)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffTree[i].weight&nbsp;=&nbsp;weight[i];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffTree[i].weight&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffTree[i].parent&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffTree[i].flag&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffTree[i].leftChild&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffTree[i].rightChild&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//2.构造哈夫曼树haffTree的n-1个非叶结点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&lt;&nbsp;n&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;i++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m1&nbsp;=&nbsp;m2&nbsp;=&nbsp;MaxValue;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x1&nbsp;=&nbsp;x2&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//2,4,5,7</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(j&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;j&lt;&nbsp;n&nbsp;+&nbsp;i;&nbsp;j++)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//循环找出所有权重中，最小的二个值--morgan</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(haffTree[j].weight&nbsp;&lt;&nbsp;m1&nbsp;&amp;&amp;&nbsp;haffTree[j].flag&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m2&nbsp;=&nbsp;m1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x2&nbsp;=&nbsp;x1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m1&nbsp;=&nbsp;haffTree[j].weight;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x1&nbsp;=&nbsp;j;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(haffTree[j].weight&lt;m2&nbsp;&amp;&amp;&nbsp;haffTree[j].flag&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m2&nbsp;=&nbsp;haffTree[j].weight;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x2&nbsp;=&nbsp;j;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//3.将找出的两棵权值最小的子树合并为一棵子树</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffTree[x1].parent&nbsp;=&nbsp;n&nbsp;+&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffTree[x2].parent&nbsp;=&nbsp;n&nbsp;+&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//将2个结点的flag&nbsp;标记为1,表示已经加入到哈夫曼树中</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffTree[x1].flag&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffTree[x2].flag&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//修改n+i结点的权值</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffTree[n&nbsp;+&nbsp;i].weight&nbsp;=&nbsp;haffTree[x1].weight&nbsp;+&nbsp;haffTree[x2].weight;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//修改n+i的左右孩子的值</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffTree[n&nbsp;+&nbsp;i].leftChild&nbsp;=&nbsp;x1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffTree[n&nbsp;+&nbsp;i].rightChild&nbsp;=&nbsp;x2;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>}<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;9.2&nbsp;哈夫曼编码<br>&nbsp;由n个结点的哈夫曼树haffTree构造哈夫曼编码haffCode<br>&nbsp;//{2,4,5,7}<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">HaffmanCode</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(HaffNode&nbsp;haffTree[],&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;n,&nbsp;Code&nbsp;haffCode[])</span><br></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//1.创建一个结点cd</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Code&nbsp;*cd&nbsp;=&nbsp;(Code&nbsp;*&nbsp;)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(Code));<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;child,&nbsp;parent;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//2.求n个叶结点的哈夫曼编码</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&lt;n;&nbsp;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//从0开始计数</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cd-&gt;start&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//取得编码对应权值的字符</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cd-&gt;weight&nbsp;=&nbsp;haffTree[i].weight;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//当叶子结点i&nbsp;为孩子结点.</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child&nbsp;=&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//找到child&nbsp;的双亲结点;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent&nbsp;=&nbsp;haffTree[child].parent;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//由叶结点向上直到根结点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(parent&nbsp;!=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(haffTree[parent].leftChild&nbsp;==&nbsp;child)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cd-&gt;bit[cd-&gt;start]&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//左孩子结点编码0</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cd-&gt;bit[cd-&gt;start]&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//右孩子结点编码1</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//编码自增</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cd-&gt;start++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//当前双亲结点成为孩子结点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child&nbsp;=&nbsp;parent;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//找到双亲结点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent&nbsp;=&nbsp;haffTree[child].parent;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;temp&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;j&nbsp;=&nbsp;cd-&gt;start&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;j&nbsp;&gt;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;j--){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;cd-&gt;start-j<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffCode[i].bit[temp]&nbsp;=&nbsp;cd-&gt;bit[j];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//把cd中的数据赋值到haffCode[i]中.</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//保存好haffCode&nbsp;的起始位以及权值;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffCode[i].start&nbsp;=&nbsp;cd-&gt;start;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//保存编码对应的权值</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;haffCode[i].weight&nbsp;=&nbsp;cd-&gt;weight;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;argc,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;argv[])</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;insert&nbsp;code&nbsp;here...</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"Hello,&nbsp;哈夫曼编码!\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i,&nbsp;j,&nbsp;n&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>,&nbsp;m&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//权值</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;weight[]&nbsp;=&nbsp;{<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">5</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">7</span>};<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//初始化哈夫曼树,&nbsp;哈夫曼编码</span><br>&nbsp;&nbsp;&nbsp;&nbsp;HaffNode&nbsp;*myHaffTree&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(HaffNode)*<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>*n<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;Code&nbsp;*myHaffCode&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(Code)*n);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//当前n&nbsp;&gt;&nbsp;MaxN,表示超界.&nbsp;无法处理.</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(n&gt;MaxN)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"定义的n越界，修改MaxN!"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">exit</span>(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//1.&nbsp;构建哈夫曼树</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Haffman(weight,&nbsp;n,&nbsp;myHaffTree);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//2.根据哈夫曼树得到哈夫曼编码</span><br>&nbsp;&nbsp;&nbsp;&nbsp;HaffmanCode(myHaffTree,&nbsp;n,&nbsp;myHaffCode);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//3.</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&lt;n;&nbsp;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"Weight&nbsp;=&nbsp;%d\n"</span>,myHaffCode[i].weight);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(j&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;j&lt;myHaffCode[i].start;&nbsp;j++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d"</span>,myHaffCode[i].bit[j]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m&nbsp;=&nbsp;m&nbsp;+&nbsp;myHaffCode[i].weight*myHaffCode[i].start;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"Huffman's&nbsp;WPS&nbsp;is:%d\n"</span>,m);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br></code></pre></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;哈夫曼（David-Huffman）&quot;&gt;&lt;a href=&quot;#哈夫曼（David-Huffman）&quot; class=&quot;headerlink&quot; title=&quot;哈夫曼（David Huffman）&quot;&gt;&lt;/a&gt;哈夫曼（David Huffman）&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;著名的 &lt;strong&gt;哈夫曼编码&lt;/strong&gt; 发明人 戴维·霍夫曼于1999年10月17日因癌症去世，享年74岁，他发明了著名的的 &lt;strong&gt;霍夫曼编码&lt;/strong&gt;，除了霍夫曼编码以外，他还涉及出二叉最优搜索树的算法，因为其效率最高，所以被命名为霍夫曼算法，是动态规划的一个范例
    
    </summary>
    
    
    
      <category term="数据结构" scheme="http://typeco.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://typeco.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://typeco.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法 - 线索二叉树</title>
    <link href="http://typeco.cn/posts/fdf3e82a/"/>
    <id>http://typeco.cn/posts/fdf3e82a/</id>
    <published>2020-05-09T07:46:44.000Z</published>
    <updated>2020-05-10T02:18:51.521Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>之前我们讲过二叉树这种数据结构，在他的链式存储结构中我们采用了这种数据结构：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BiThrNode</span>&#123;</span></span><br><span class="line">    <span class="comment">//数据</span></span><br><span class="line">    CElemType data;</span><br><span class="line">    <span class="comment">//左右孩子指针</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">BiThrNode</span> *<span class="title">lchild</span>,*<span class="title">rchild</span>;</span>    </span><br><span class="line">&#125;BiThrNode</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="指针域浪费"><a href="#指针域浪费" class="headerlink" title="指针域浪费"></a>指针域浪费</h3><p>可以看到二叉树的每一个节点由一个数据 <strong>data</strong> 和 两个子树 <strong>lchild</strong> 和 <strong>rchild</strong>， 于是乎我们的二叉树看起来就是这个样子：</p><img src="https://s1.ax1x.com/2020/05/09/YlS9Qe.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:90%;" /><p>从图中我们可以看出，在某个节点没有左子树或者右子树的情况下，其左右子树的指针指向的是空，那么这块空间就是浪费的，图中这个二叉树就有11个空指针，如果一个二叉树足够庞大，那么其空指针就很庞大了，我们有没有办法利用这些被浪费的空间呢？</p><h3 id="重复查找遍历"><a href="#重复查找遍历" class="headerlink" title="重复查找遍历"></a>重复查找遍历</h3><p>在二叉树的遍历中分为几种方式，这里我们随便拿一个 <strong>中序遍历</strong> 来说，在上面那个图中如果我们想频繁的获取 <strong>F</strong> 节点的前驱和后继，我们只能每次都是从根节点重新遍历，我们有没有什么办法快速的获取呢？</p><img src="https://s1.ax1x.com/2020/05/09/YlSPLd.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:90%;" /><p>上面的这些问题就引出了线索二叉树的诞生，于是有同学就开始说了：我给每个节点扩展一个前驱指针和后驱指针不就行了吗？ 没错，确实能解决问题，但是问题是被浪费的空间依旧还是被浪费，同时你每个节点所占的空间又增大了，线索二叉树的提出只是为了更大的利用所有的空间而不创建新的空间，所以我们就利用当前的空间，如果当前的左子树或者右子树为空，那么我们就指向他的前驱或者后继，如果不为空我们就不处理，仅此而已。</p><img src="https://s1.ax1x.com/2020/05/09/YlSCsH.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:90%;" /><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>既然我们利用线索化去优化二叉树的存储，就有了一个新的问题，我们的左子树和右子树都是一个指针，某个节点的左孩子指向的到底是前驱呢还是左子树呢？</p><img src="https://s1.ax1x.com/2020/05/09/YlSAot.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:90%;" /><p>我们修改一下节点的数据结构，增加一个类似标记的 <strong>tag</strong> 去标记这个指针是前驱还是子节点。</p><img src="https://s1.ax1x.com/2020/05/09/YlSVFP.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:90%;" /><p>虽然标记开辟了空间，但是这个空间远小于增加额外两个子树的指针，同时它也实现了利用被浪费的空间，<strong>利用有限的空间去解决更多的事情</strong>。</p><h2 id="线索二叉树的实现"><a href="#线索二叉树的实现" class="headerlink" title="线索二叉树的实现"></a>线索二叉树的实现</h2><p>通过上面的分析，我们的线索二叉树被优化后应该是类似一个循环链表的结构(这里通过中序遍历为例)：</p><img src="https://s1.ax1x.com/2020/05/09/YlSFeA.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>代码如下：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;OK&nbsp;1</span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;ERROR&nbsp;0</span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;TRUE&nbsp;1</span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;FALSE&nbsp;0</span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;MAXSIZE&nbsp;100&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;存储空间初始分配量&nbsp;*/</span></span><br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;Status是函数的类型,其值是函数结果状态代码,如OK等&nbsp;*/</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;Status;<br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;CElemType;<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;字符型以空格符为空&nbsp;*/</span><br>CElemType&nbsp;Nil=<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'#'</span>;<br><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">pragma</span>&nbsp;mark--二叉树构造</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;indexs&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;String[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">24</span>];&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;&nbsp;0号单元存放串的长度&nbsp;*/</span><br>String&nbsp;str;<br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">StrAssign</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(String&nbsp;T,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*chars)</span><br></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">strlen</span>(chars)&gt;MAXSIZE)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span><br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>]=<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">strlen</span>(chars);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>(i=<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;i&lt;=T[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>];i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T[i]=*(chars+i<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;OK;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;Link==0表示指向左右孩子指针,&nbsp;*/</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;Thread==1表示指向前驱或后继的线索&nbsp;*/</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">enum</span>&nbsp;{Link,Thread}&nbsp;PointerTag;<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;线索二叉树存储结点结构*/</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">BiThrNode</span>{</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//数据</span><br>&nbsp;&nbsp;&nbsp;&nbsp;CElemType&nbsp;data;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//左右孩子指针</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">BiThrNode</span>&nbsp;*<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">lchild</span>,*<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">rchild</span>;</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//左右标记</span><br>&nbsp;&nbsp;&nbsp;&nbsp;PointerTag&nbsp;LTag;<br>&nbsp;&nbsp;&nbsp;&nbsp;PointerTag&nbsp;RTag;<br><br>}BiThrNode,*BiThrTree;<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;8.1&nbsp;打印<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">visit</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(CElemType&nbsp;e)</span><br></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%c&nbsp;"</span>,e);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;OK;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;8.3&nbsp;构造二叉树<br>&nbsp;按照前序输入线索二叉树结点的值,构造二叉树T<br>&nbsp;*/</span><br><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CreateBiThrTree</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(BiThrTree&nbsp;*T)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;CElemType&nbsp;h;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//scanf("%c",&amp;h);</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//获取字符</span><br>&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;=&nbsp;str[indexs++];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(h&nbsp;==&nbsp;Nil)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*T&nbsp;=&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*T&nbsp;=&nbsp;(BiThrTree)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(BiThrNode));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!*T)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">exit</span>(OVERFLOW);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//生成根结点(前序)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*T)-&gt;data&nbsp;=&nbsp;h;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//递归构造左子树</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CreateBiThrTree(&amp;(*T)-&gt;lchild);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//存在左孩子-&gt;将标记LTag设置为Link</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;((*T)-&gt;lchild)&nbsp;(*T)-&gt;LTag&nbsp;=&nbsp;Link;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//递归构造右子树</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CreateBiThrTree(&amp;(*T)-&gt;rchild);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//存在右孩子-&gt;将标记RTag设置为Link</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;((*T)-&gt;rchild)&nbsp;(*T)-&gt;RTag&nbsp;=&nbsp;Link;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;OK;<br>}<br><br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;8.3&nbsp;中序遍历二叉树T,&nbsp;将其中序线索化,Thrt指向头结点<br>&nbsp;*/</span><br><br>BiThrTree&nbsp;pre;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;全局变量,始终指向刚刚访问过的结点&nbsp;*/</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;中序遍历进行中序线索化*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">InThreading</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(BiThrTree&nbsp;p)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InThreading(p-&gt;lchild);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.....<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InThreading(p-&gt;rchild);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(p)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//递归左子树线索化</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InThreading(p-&gt;lchild);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//无左孩子</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!p-&gt;lchild)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//前驱线索</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;LTag&nbsp;=&nbsp;Thread;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//左孩子指针指向前驱</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;lchild&nbsp;&nbsp;=&nbsp;pre;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;LTag&nbsp;=&nbsp;Link;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//前驱没有右孩子</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!pre-&gt;rchild)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//后继线索</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre-&gt;RTag&nbsp;=&nbsp;Thread;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//前驱右孩子指针指向后继(当前结点p)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre-&gt;rchild&nbsp;=&nbsp;p;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre-&gt;RTag&nbsp;=&nbsp;Link;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//保持pre指向p的前驱</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre&nbsp;=&nbsp;p;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//递归右子树线索化</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InThreading(p-&gt;rchild);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;中序遍历二叉树T,并将其中序线索化,Thrt指向头结点&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">InOrderThreading</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(BiThrTree&nbsp;*Thrt&nbsp;,&nbsp;BiThrTree&nbsp;T)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;*Thrt=(BiThrTree)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(BiThrNode));<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!&nbsp;*Thrt)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">exit</span>(OVERFLOW);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//建立头结点;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;(*Thrt)-&gt;LTag&nbsp;=&nbsp;Link;<br>&nbsp;&nbsp;&nbsp;&nbsp;(*Thrt)-&gt;RTag&nbsp;=&nbsp;Thread;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//右指针回指向</span><br>&nbsp;&nbsp;&nbsp;&nbsp;(*Thrt)-&gt;rchild&nbsp;=&nbsp;(*Thrt);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;若二叉树空,则左指针回指&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!T)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*Thrt)-&gt;lchild=*Thrt;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*Thrt)-&gt;lchild=T;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre=(*Thrt);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//中序遍历进行中序线索化</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InThreading(T);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//最后一个结点rchil&nbsp;孩子</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre-&gt;rchild&nbsp;=&nbsp;*Thrt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//最后一个结点线索化</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre-&gt;RTag&nbsp;=&nbsp;Thread;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*Thrt)-&gt;rchild&nbsp;=&nbsp;pre;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;OK;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*中序遍历二叉线索树T*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">InOrderTraverse_Thr</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(BiThrTree&nbsp;T)</span></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;BiThrTree&nbsp;p;<br>&nbsp;&nbsp;&nbsp;&nbsp;p=T-&gt;lchild;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;p指向根结点&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>(p!=T)<br>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;空树或遍历结束时,p==T&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>(p-&gt;LTag==Link)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p=p-&gt;lchild;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(!visit(p-&gt;data))&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;访问其左子树为空的结点&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>(p-&gt;RTag==Thread&amp;&amp;p-&gt;rchild!=T)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p=p-&gt;rchild;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visit(p-&gt;data);&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;访问后继结点&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p=p-&gt;rchild;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;OK;<br>}<br><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;argc,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;argv[])</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;insert&nbsp;code&nbsp;here...</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"Hello,&nbsp;线索化二叉树!\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;BiThrTree&nbsp;H,T;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//StrAssign(str,"ABDH#K###E##CFI###G#J##");</span><br>&nbsp;&nbsp;&nbsp;&nbsp;StrAssign(str,<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"ABDH##I##EJ###CF##G##"</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;CreateBiThrTree(&amp;T);&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;按前序产生二叉树&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;InOrderThreading(&amp;H,T);&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;中序遍历,并中序线索化二叉树&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;InOrderTraverse_Thr(H);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"\n\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br></code></pre></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;之前我们讲过二叉树这种数据结构，在他的链式存储结构中我们采用了这种数据结构：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BiThrNode&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CElemType data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//左右孩子指针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BiThrNode&lt;/span&gt; *&lt;span class=&quot;title&quot;&gt;lchild&lt;/span&gt;,*&lt;span class=&quot;title&quot;&gt;rchild&lt;/span&gt;;&lt;/span&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;BiThrNode&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="数据结构" scheme="http://typeco.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://typeco.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://typeco.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法 - 树</title>
    <link href="http://typeco.cn/posts/b0f8e6ff/"/>
    <id>http://typeco.cn/posts/b0f8e6ff/</id>
    <published>2020-04-26T07:22:09.000Z</published>
    <updated>2020-04-26T15:03:16.166Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>树</strong> 的结构在日常生活中我们有涉及到：比如我们的 <strong>族谱</strong>、<strong>公司的架构图</strong>等等，今天我们就具体看看树到底是一个什么样的数据结构，它有哪些分类以及如何去实现树。<a id="more"></a></p><h2 id="树结构"><a href="#树结构" class="headerlink" title="树结构"></a>树结构</h2><p>树结构包含一个跟节点以及若干个子节点，以下描述了几种常见的树结构图。</p><h3 id="一般树"><a href="#一般树" class="headerlink" title="一般树"></a>一般树</h3><img src="https://s1.ax1x.com/2020/04/26/Jc5ZlT.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><h3 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h3><p>每一个节点都两个子节点，它们分别被叫做 <code>左子树</code> 和 <code>右子树</code> ，这种树结构被称作 <code>二叉树</code>，结合其名字也知道，就是分叉只分了两个，如图：</p><img src="https://s1.ax1x.com/2020/04/26/Jc5e6U.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><h4 id="满二叉树"><a href="#满二叉树" class="headerlink" title="满二叉树"></a>满二叉树</h4><img src="https://s1.ax1x.com/2020/04/26/Jc5VpV.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>顾名思义，满二叉树就是所有的节点除了叶子节点以外，都包含两个子节点，而且所有的叶子节点深度是一样的，从图可以看出应该呈现的是一个对称的结构。</p><h4 id="完全二叉树"><a href="#完全二叉树" class="headerlink" title="完全二叉树"></a>完全二叉树</h4><img src="https://s1.ax1x.com/2020/04/26/Jc5kYq.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>完全二叉树不同于满二叉树，它的叶子节点可以不对称，但是除此以外的节点必须是满的，换句话说，只有最后一层叶子节点可以不满的情况下同时顺序是连续的，也就是不能出现下面这种情况：</p><img src="https://s1.ax1x.com/2020/04/26/JcTM7Q.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><h2 id="顺序存储"><a href="#顺序存储" class="headerlink" title="顺序存储"></a>顺序存储</h2><p>任何一个数据结构我们都可以通过顺序存储的方式去实现，顺序存储的方式说到底就是<code>数组</code>，二叉树比较经典，所以接下来我们看看如何用顺序存储结构去实现一个二叉树。</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;level;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//结点层</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;order;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//本层的序号(按照满二叉树给定序号规则)</span><br>}Position;<br><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">pragma</span>&nbsp;mark&nbsp;--&nbsp;二叉树的基本操作</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//6.1&nbsp;visit</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">visit</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(CElemType&nbsp;c)</span></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d&nbsp;"</span>,c);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;OK;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//6.2&nbsp;构造空二叉树T,因为T是固定数组,不会改变.</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">InitBiTree</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;MAX_TREE_SIZE;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//将二叉树初始化值置空</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T[i]&nbsp;=&nbsp;Nil;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;OK;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//6.3&nbsp;按层序次序输入二叉树中的结点值(字符型或整型),构造顺序存储的二叉树T</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CreateBiTree</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T)</span></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//printf("按层序输入结点的值(整型),0表示空结点,&nbsp;输入999结束.结点数&lt;=%d\n",MAX_TREE_SIZE);</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&gt;1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;--&gt;2<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;5&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;7&nbsp;--&gt;3<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;9&nbsp;10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&gt;4<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;3&nbsp;4&nbsp;5&nbsp;6&nbsp;7&nbsp;8&nbsp;9&nbsp;10&nbsp;Nil&nbsp;Nil&nbsp;Nil<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(i&nbsp;&lt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T[i]&nbsp;=&nbsp;i+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d&nbsp;"</span>,T[i]);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//结点不为空,且无双亲结点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(i&nbsp;!=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>&nbsp;&amp;&amp;&nbsp;T[(i+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)/<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span><span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>]&nbsp;==&nbsp;Nil&nbsp;&amp;&amp;&nbsp;T[i]&nbsp;!=&nbsp;Nil)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"出现无双亲的非根结点%d\n"</span>,T[i]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">exit</span>(ERROR);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//将空赋值给T的后面的结点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(i&nbsp;&lt;&nbsp;MAX_TREE_SIZE)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T[i]&nbsp;=&nbsp;Nil;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;OK;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//技巧:</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//如果大家想要2个函数的结果一样,但是目的不同;</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//在顺序存储结构中,&nbsp;两个函数完全一样的结果</span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;ClearBiTree&nbsp;InitBiTree</span><br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*6.4&nbsp;判断二叉树是否为空<br>&nbsp;初始条件:&nbsp;二叉树已存在<br>&nbsp;操作结果:&nbsp;若T为空二叉树,则返回TRUE,否则返回FALSE;<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">BiTreeEmpty</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T)</span></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//根结点为空,则二叉树为空</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(T[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>]&nbsp;==&nbsp;Nil)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;TRUE;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;FALSE;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*6.5&nbsp;获取二叉树的深度<br>&nbsp;初始条件:&nbsp;二叉树已存在<br>&nbsp;操作结果:&nbsp;返回二叉树T深度;<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">BiTreeDepth</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;j&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//找到最后一个结点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//MAX_TREE_SIZE&nbsp;-&gt;&nbsp;100&nbsp;-&gt;&nbsp;10&nbsp;目的找到最后一个结点10的位置</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(i&nbsp;=&nbsp;MAX_TREE_SIZE<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>&nbsp;;&nbsp;i&gt;=<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i--)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(T[i]&nbsp;!=&nbsp;Nil)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">break</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">do</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j++;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(&nbsp;powl(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>,&nbsp;j)&nbsp;&lt;=&nbsp;i);&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//计算2的次幂</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;j;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*6.6&nbsp;返回处于位置e(层,本层序号)的结点值<br>&nbsp;初始条件:&nbsp;二叉树T存在,e是T中某个结点(的位置)<br>&nbsp;操作结构:&nbsp;返回处于位置e(层,本层序号)的结点值<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">CElemType&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Value</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T,Position&nbsp;e)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Position.level&nbsp;-&gt;&nbsp;结点层.表示第几层;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Position.order&nbsp;-&gt;&nbsp;本层的序号(按照满二叉树给定序号规则)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//pow(2,e.level-1)&nbsp;找到层序</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d\n"</span>,(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">pow</span>(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>,e.level<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>));<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//e.order</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d\n"</span>,e.order);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//4+2-2;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;T[(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">pow</span>(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>,&nbsp;e.level<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>)+e.order<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-2</span>];<br><br>}<br><br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*6.7&nbsp;获取二叉树跟结点的值<br>&nbsp;初始条件:&nbsp;二叉树T存在<br>&nbsp;操作结果:&nbsp;当T不空,用e返回T的根,&nbsp;返回OK;&nbsp;否则返回ERROR<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Root</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T,CElemType&nbsp;*e)</span></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(BiTreeEmpty(T))&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;*e&nbsp;=&nbsp;T[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;OK;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;6.8&nbsp;给处于位置e的结点赋值<br>&nbsp;初始条件:&nbsp;二叉树存在,e是T中某个结点的位置<br>&nbsp;操作结果:&nbsp;给处于位置e的结点赋值Value;<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Assign</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T,Position&nbsp;e,CElemType&nbsp;value)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//找到当前e在数组中的具体位置索引</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>)powl(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>,&nbsp;e.level<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>)+e.order&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-2</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//叶子结点的双亲为空</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(value&nbsp;!=&nbsp;Nil&nbsp;&amp;&amp;&nbsp;&nbsp;T[(i+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)/<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span><span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>]&nbsp;==&nbsp;Nil)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//给双亲赋空值但是有叶子结点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(value&nbsp;==&nbsp;Nil&nbsp;&amp;&amp;&nbsp;(T[i*<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>]&nbsp;!=&nbsp;Nil&nbsp;||&nbsp;T[i*<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>]&nbsp;!=&nbsp;Nil))&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;T[i]&nbsp;=&nbsp;value;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;OK;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;6.9&nbsp;获取e的双亲;<br>&nbsp;初始条件:&nbsp;二叉树存在,e是T中的某一个结点<br>&nbsp;操作结果:&nbsp;若e是T的非根结点,&nbsp;则返回它的双亲,否则返回"空"<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">CElemType&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Parent</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T,&nbsp;CElemType&nbsp;e)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//空树</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(T[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>]&nbsp;==&nbsp;Nil)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;Nil;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>&nbsp;;&nbsp;i&nbsp;&lt;&nbsp;MAX_TREE_SIZE;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//找到e</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(T[i]&nbsp;==&nbsp;e)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;T[(i+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)/<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//没有找到</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;Nil;<br><br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;6.10&nbsp;获取某个结点的左孩子;<br>&nbsp;初始条件:二叉树T存在,e是某个结点<br>&nbsp;操作结果:返回e的左孩子,若e无左孩子,则返回"空"<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">CElemType&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">LeftChild</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T,CElemType&nbsp;e)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//空树</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(T[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>]&nbsp;==&nbsp;Nil)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;Nil;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>&nbsp;;&nbsp;i&nbsp;&lt;&nbsp;MAX_TREE_SIZE<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//找到e</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(T[i]&nbsp;==&nbsp;e)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;T[i*<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//没有找到</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;Nil;<br><br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;6.11&nbsp;获取某个结点的右孩子;<br>&nbsp;初始条件:二叉树T存在,e是某个结点<br>&nbsp;操作结果:返回e的左孩子,若e无左孩子,则返回"空"<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">CElemType&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">RightChild</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T,CElemType&nbsp;e)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//空树</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(T[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>]&nbsp;==&nbsp;Nil)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;Nil;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>&nbsp;;&nbsp;i&nbsp;&lt;&nbsp;MAX_TREE_SIZE<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//找到e</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(T[i]&nbsp;==&nbsp;e)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;T[i*<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//没有找到</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;Nil;<br><br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;6.12&nbsp;获取结点的左兄弟<br>&nbsp;初始条件:&nbsp;&nbsp;二叉树T存在,e是T中某个结点<br>&nbsp;操作结果:&nbsp;返回e的左兄弟。若e是T的左孩子或无左兄弟,则返回＂空＂<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">CElemType&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">LeftSibling</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T,CElemType&nbsp;e)</span><br></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;空树&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(T[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>]==Nil)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;Nil;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i=<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;i&lt;=MAX_TREE_SIZE<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;找到e且其序号为偶数(是右孩子)&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(T[i]==e&amp;&amp;i%<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>==<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;T[i<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;Nil;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;没找到e&nbsp;*/</span><br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;6.13&nbsp;获取结点的右兄弟<br>&nbsp;初始条件:&nbsp;二叉树T存在,e是T中某个结点<br>&nbsp;操作结果:&nbsp;返回e的右兄弟。若e是T的右孩子或无右兄弟,则返回＂空＂<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">CElemType&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">RightSibling</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T,CElemType&nbsp;e)</span><br></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;空树&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(T[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>]==Nil)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;Nil;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i=<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;i&lt;=MAX_TREE_SIZE<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;找到e且其序号为奇数(是左孩子)&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(T[i]==e&amp;&amp;i%<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>==<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;T[i+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;Nil;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;没找到e&nbsp;*/</span><br>}<br><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">pragma</span>&nbsp;mark&nbsp;--&nbsp;二叉树的遍历</span><br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;6.14&nbsp;层序遍历二叉树<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">LevelOrderTraverse</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;MAX_TREE_SIZE<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//找到最后一个非空结点的序号</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(T[i]&nbsp;==&nbsp;Nil)&nbsp;i--;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//从根结点起,按层序遍历二叉树</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;j&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;j&nbsp;&lt;=&nbsp;i;&nbsp;j++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//只遍历非空结点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(T[j]&nbsp;!=&nbsp;Nil)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visit(T[j]);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"\n"</span>);<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;6.15&nbsp;前序遍历二叉树<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">PreTraverse</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;e)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//打印结点数据</span><br>&nbsp;&nbsp;&nbsp;&nbsp;visit(T[e]);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//先序遍历左子树</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(T[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;*&nbsp;e&nbsp;+&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>]&nbsp;!=&nbsp;Nil)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PreTraverse(T,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>*e+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//最后先序遍历右子树</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(T[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;*&nbsp;e&nbsp;+&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>]&nbsp;!=&nbsp;Nil)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PreTraverse(T,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>*e+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">PreOrderTraverse</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//树不为空</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!BiTreeEmpty(T))&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PreTraverse(T,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;&nbsp;OK;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;6.16&nbsp;中序遍历<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">InTraverse</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;e)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;左子树不空&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(T[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>*e+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>]&nbsp;!=&nbsp;Nil)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InTraverse(T,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>*e+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;visit(T[e]);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;右子树不空&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(T[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>*e+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>]&nbsp;!=&nbsp;Nil)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InTraverse(T,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>*e+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>);<br>}<br><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">InOrderTraverse</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;树不空&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!BiTreeEmpty(T))&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InTraverse(T,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;OK;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;6.17&nbsp;后序遍历<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">PostTraverse</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;e)</span><br></span>{&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;左子树不空&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(T[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>*e+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>]!=Nil)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PostTraverse(T,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>*e+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;右子树不空&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(T[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>*e+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>]!=Nil)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PostTraverse(T,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>*e+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;visit(T[e]);<br>}<br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">PostOrderTraverse</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(SqBiTree&nbsp;T)</span><br></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(!BiTreeEmpty(T))&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;树不空&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PostTraverse(T,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;OK;<br>}<br></code></pre></div><h2 id="链式存储"><a href="#链式存储" class="headerlink" title="链式存储"></a>链式存储</h2><p>上面我们实现了树的顺序存储结构的实现，我们会给每个位置都要设值，不论该节点存在不存在，如果该节点为空，我们响应数组的位置也应该存在，所以顺序存储的实现浪费了很多存储空间，那么我们看一下链式存储是如何实现的。</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;CElemType;<br>CElemType&nbsp;Nil=<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'&nbsp;'</span>;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;字符型以空格符为空&nbsp;*/</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">BiTNode</span>&nbsp;&nbsp;/*&nbsp;结点结构&nbsp;*/<br>{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;CElemType&nbsp;data;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;结点数据&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">BiTNode</span>&nbsp;*<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">lchild</span>,*<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">rchild</span>;</span>&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;左右孩子指针&nbsp;*/</span><br>}BiTNode,*BiTree;<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*7.1&nbsp;打印数据*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">visit</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(CElemType&nbsp;e)</span><br></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%c&nbsp;"</span>,e);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;OK;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;7.2&nbsp;构造空二叉树T&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">InitBiTree</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(BiTree&nbsp;*T)</span><br></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;*T=<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;OK;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;7.3&nbsp;销毁二叉树<br>&nbsp;初始条件:&nbsp;二叉树T存在。<br>&nbsp;操作结果:&nbsp;销毁二叉树T<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">DestroyBiTree</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(BiTree&nbsp;*T)</span><br></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(*T)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;有左孩子&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>((*T)-&gt;lchild)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DestroyBiTree(&amp;(*T)-&gt;lchild);&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;销毁左孩子子树&nbsp;*/</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;有右孩子&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>((*T)-&gt;rchild)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DestroyBiTree(&amp;(*T)-&gt;rchild);&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;销毁右孩子子树&nbsp;*/</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">free</span>(*T);&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;释放根结点&nbsp;*/</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*T=<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;空指针赋0&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;ClearBiTree&nbsp;DestroyBiTree</span><br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*7.4&nbsp;创建二叉树<br>&nbsp;按前序输入二叉树中的结点值(字符),#表示空树;<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CreateBiTree</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(BiTree&nbsp;*T)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;CElemType&nbsp;ch;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//获取字符</span><br>&nbsp;&nbsp;&nbsp;&nbsp;ch&nbsp;=&nbsp;str[indexs++];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//判断当前字符是否为'#'</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(ch&nbsp;==&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'#'</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*T&nbsp;=&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span><br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//创建新的结点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*T&nbsp;=&nbsp;(BiTree)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(BiTNode));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//是否创建成功</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!*T)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">exit</span>(OVERFLOW);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;生成根结点&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*T)-&gt;data&nbsp;=&nbsp;ch;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;构造左子树&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CreateBiTree(&amp;(*T)-&gt;lchild);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;构造右子树&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CreateBiTree(&amp;(*T)-&gt;rchild);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>}<br><br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;7.5&nbsp;二叉树T是否为空;<br>&nbsp;初始条件:&nbsp;二叉树T存在<br>&nbsp;操作结果:&nbsp;若T为空二叉树,则返回TRUE,否则FALSE<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">BiTreeEmpty</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(BiTree&nbsp;T)</span><br></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(T)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;FALSE;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;TRUE;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;7.6&nbsp;二叉树T的深度<br>&nbsp;初始条件:&nbsp;二叉树T存在<br>&nbsp;操作结果:&nbsp;返回T的深度<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">BiTreeDepth</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(BiTree&nbsp;T)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i,j;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(!T)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//计算左孩子的深度</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(T-&gt;lchild)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=BiTreeDepth(T-&gt;lchild);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//计算右孩子的深度</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(T-&gt;rchild)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j=BiTreeDepth(T-&gt;rchild);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j=<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//比较i和j</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;i&gt;j?i+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>:j+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;7.7&nbsp;二叉树T的根<br>&nbsp;初始条件:&nbsp;二叉树T存在<br>&nbsp;操作结果:&nbsp;返回T的根<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">CElemType&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Root</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(BiTree&nbsp;T)</span></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(BiTreeEmpty(T))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;Nil;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;T-&gt;data;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;7.8&nbsp;返回p所指向的结点值;<br>&nbsp;初始条件:&nbsp;二叉树T存在，p指向T中某个结点<br>&nbsp;操作结果:&nbsp;返回p所指结点的值<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">CElemType&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Value</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(BiTree&nbsp;p)</span></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;p-&gt;data;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;7.8&nbsp;给p所指结点赋值为value;<br>&nbsp;初始条件:&nbsp;二叉树T存在，p指向T中某个结点<br>&nbsp;操作结果:&nbsp;给p所指结点赋值为value<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Assign</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(BiTree&nbsp;p,CElemType&nbsp;value)</span><br></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;p-&gt;data=value;<br>}<br><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">pragma</span>&nbsp;mark--二叉树遍历</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;7.8&nbsp;&nbsp;前序递归遍历T<br>&nbsp;初始条件:二叉树T存在;<br>&nbsp;操作结果:&nbsp;前序递归遍历T<br>&nbsp;*/</span><br><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">PreOrderTraverse</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(BiTree&nbsp;T)</span><br></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(T==<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%c"</span>,T-&gt;data);<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;显示结点数据，可以更改为其它对结点操作&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;PreOrderTraverse(T-&gt;lchild);&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;再先序遍历左子树&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;PreOrderTraverse(T-&gt;rchild);&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;最后先序遍历右子树&nbsp;*/</span><br>}<br><br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;7.9&nbsp;&nbsp;中序递归遍历T<br>&nbsp;初始条件:二叉树T存在;<br>&nbsp;操作结果:&nbsp;中序递归遍历T<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">InOrderTraverse</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(BiTree&nbsp;T)</span><br></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(T==<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;;<br>&nbsp;&nbsp;&nbsp;&nbsp;InOrderTraverse(T-&gt;lchild);&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;中序遍历左子树&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%c"</span>,T-&gt;data);<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;显示结点数据，可以更改为其它对结点操作&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;InOrderTraverse(T-&gt;rchild);&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;最后中序遍历右子树&nbsp;*/</span><br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;7.10&nbsp;&nbsp;后序递归遍历T<br>&nbsp;初始条件:二叉树T存在;<br>&nbsp;操作结果:&nbsp;中序递归遍历T<br>&nbsp;*/</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">PostOrderTraverse</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(BiTree&nbsp;T)</span><br></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(T==<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;PostOrderTraverse(T-&gt;lchild);&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;先后序遍历左子树&nbsp;&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;PostOrderTraverse(T-&gt;rchild);&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;再后序遍历右子树&nbsp;&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%c"</span>,T-&gt;data);<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;显示结点数据，可以更改为其它对结点操作&nbsp;*/</span><br>}<br></code></pre></div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这篇文章大概讲述了树的结构形态以及集中特殊的树和二叉树的两种实现方式：顺序存储、链式存储。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;树&lt;/strong&gt; 的结构在日常生活中我们有涉及到：比如我们的 &lt;strong&gt;族谱&lt;/strong&gt;、&lt;strong&gt;公司的架构图&lt;/strong&gt;等等，今天我们就具体看看树到底是一个什么样的数据结构，它有哪些分类以及如何去实现树。
    
    </summary>
    
    
    
      <category term="数据结构" scheme="http://typeco.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://typeco.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://typeco.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法 - 字符串匹配</title>
    <link href="http://typeco.cn/posts/58f542ed/"/>
    <id>http://typeco.cn/posts/58f542ed/</id>
    <published>2020-04-21T13:24:30.000Z</published>
    <updated>2020-04-26T06:31:02.260Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>有主串 S = “abcacabdc”,模式串 T = “abd”,请查找出模式串在主串第一次出现的位置，注意：主串和模式串均为小写字母切都是合法输入。<a id="more"></a></p></blockquote><h2 id="BF算法"><a href="#BF算法" class="headerlink" title="BF算法"></a>BF算法</h2><p><strong>BF算法</strong> Brute Force，其实就是暴力算法，是普通的模式匹配算法，BF算法的思想就是将目标串S的第一个字符与模式串T的第一个字符进行匹配，弱相等，则继续比较S的第二个字符；若不相等，则比较S的第二个字符和T的第一个字符，一次比较下去，直到最后的的匹配结果。</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; background: rgb(34, 34, 27); color: rgb(146, 145, 129); padding: 0.5em; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(135, 133, 115); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;BF算法</span><br><span class="hljs-function" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(54, 161, 102); word-wrap: inherit !important; word-break: inherit !important;">indexOf</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*S,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*T)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>,j&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;lenS&nbsp;=&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">strlen</span>(S);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;lenT&nbsp;=&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">strlen</span>(T);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(i&nbsp;&lt;&nbsp;lenS&nbsp;&amp;&amp;&nbsp;j&nbsp;&lt;&nbsp;lenT&nbsp;)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(135, 133, 115); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;比较两个字母若相同则继续比较</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(S[i]&nbsp;==&nbsp;T[j])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(135, 133, 115); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;找到上一次匹配的首位的下一位</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;=&nbsp;i-j+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(135, 133, 115); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;j返回到子串T首位</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(j&nbsp;==&nbsp;lenT)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(135, 133, 115); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;这里+1是为了将index转化为现实生活中的位置</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;i-lenT+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br><span class="hljs-function" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(54, 161, 102); word-wrap: inherit !important; word-break: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;argc,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;argv[])</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(135, 133, 115); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;insert&nbsp;code&nbsp;here...</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(125, 151, 38); word-wrap: inherit !important; word-break: inherit !important;">"Hello,&nbsp;World!\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;index&nbsp;=&nbsp;indexOf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(125, 151, 38); word-wrap: inherit !important; word-break: inherit !important;">"abcdex"</span>,&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(125, 151, 38); word-wrap: inherit !important; word-break: inherit !important;">"ex"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(125, 151, 38); word-wrap: inherit !important; word-break: inherit !important;">"第一个匹配的位置是&nbsp;%d&nbsp;\n"</span>,index);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br>-----<br>Hello,&nbsp;World!<br>第一个匹配的位置是&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">5</span>&nbsp;<br></code></pre></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">上面BF算法我们可以发现我们需要去遍历每一个字符，有那么一种情况是：</span><br><span class="line">S &#x3D; &quot;aaaaaaaaaaaaaaaabdhsdf&quot;</span><br><span class="line">T &#x3D; &quot;aaaaaaaab&quot;</span><br><span class="line">这个时候我们会发现每次都是在最后一位发现不同，这样我们其实浪费了很多次循环,这样就出现了另外一中算法：RK算法</span><br></pre></td></tr></table></figure><h2 id="RK算法"><a href="#RK算法" class="headerlink" title="RK算法"></a>RK算法</h2><p>⚛ <strong>RK算法</strong> 是由  Rabin 和 Karp 共同提出的一个算法，RK算法是对BF算法的一个改进，只进行一次比较就判定两者是否相等。RK的大体思想跟BF一样，把主串拆分成若干个子串，循环遍历每一个子串和目标串T进行比对，但是其利用了Hash算法的设计思想，每个子串都对应唯一一个哈希值，我们设计一个尽量不冲突的哈希算法来求每个子串的哈希值，一一匹配直到相等即可。</p><h3 id="哈希函数设计"><a href="#哈希函数设计" class="headerlink" title="哈希函数设计"></a>哈希函数设计</h3><p>那么哈希算法如何设计呢？我们知道字符串的一一比较显然不如数字比较来的快</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例如：</span><br><span class="line">主串 S &#x3D; 6541451234   T &#x3D; 123  就是将123跟十进制651,541,414,145,451,512,123,234进行一一比较大小。</span><br></pre></td></tr></table></figure><p>而对于十进制数来说</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123 &#x3D; 1*10*10 + 2*10 + 3</span><br></pre></td></tr></table></figure><p>所以我们也设计类似的进制数，那么针对26位字母，当然26进制是最好的，这样会尽可能的避免冲突发生的可能性。</p><p><strong>RK</strong> 算法中还用到一个技巧就是，只要算出第一个数字，后面的数字就可以根据第一个数字一一计算出，具体我们以十进制为例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">例如：</span><br><span class="line">主串 S &#x3D; 6541451234   T &#x3D; 123  </span><br><span class="line">首先我们得出 654 &#x3D; 6*100 + 5*10 + 4</span><br><span class="line">那么第二个数字 541 &#x3D; （654-6*100）*10 + 1</span><br><span class="line">第三个数字就是 414 &#x3D; （541-5*100）*10 + 4</span><br><span class="line">也就是 （前一个数 - 最高位 * （位数-1）*进制数）*进制数 + 下一个个位数</span><br></pre></td></tr></table></figure><p>具体算法如下：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; background: rgb(34, 34, 27); color: rgb(146, 145, 129); padding: 0.5em; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;d&nbsp;&nbsp;26&nbsp;//&nbsp;进制数</span><br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(135, 133, 115); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;即使我们求出了结果，但是为了验证是否冲突加一个验证</span><br><span class="hljs-function" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(54, 161, 102); word-wrap: inherit !important; word-break: inherit !important;">isMatch</span>(<span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*S,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*P,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;m</span>)<br></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">is</span>,&nbsp;ip;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">for</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">is</span>=i,&nbsp;ip=<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">is</span>&nbsp;!=&nbsp;m&nbsp;&amp;&amp;&nbsp;ip&nbsp;!=&nbsp;m;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">is</span>++,&nbsp;ip++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">if</span>(S[<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">is</span>]&nbsp;!=&nbsp;P[ip])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(135, 133, 115); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;计算最高位的幂次方&nbsp;比如三位子串就是26的平方</span><br><span class="hljs-function" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(54, 161, 102); word-wrap: inherit !important; word-break: inherit !important;">getMaxValue</span>(<span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;Tlength</span>)&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">value</span>&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;Tlength<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">value</span>&nbsp;*=&nbsp;d;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">value</span>;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(135, 133, 115); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;RK算法</span><br><span class="hljs-function" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(54, 161, 102); word-wrap: inherit !important; word-break: inherit !important;">RK</span>(<span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*S,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*T</span>)&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;slen&nbsp;=&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>)strlen(S);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;tlen&nbsp;=&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>)strlen(T);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;hashS&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;hashT&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(135, 133, 115); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;分别保存两个字符串的首个哈希值</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;tlen;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hashS&nbsp;=&nbsp;hashS*d&nbsp;+(S[i]-<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(125, 151, 38); word-wrap: inherit !important; word-break: inherit !important;">'a'</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hashT&nbsp;=&nbsp;hashT*d&nbsp;+(T[i]-<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(125, 151, 38); word-wrap: inherit !important; word-break: inherit !important;">'a'</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;hValue&nbsp;=&nbsp;getMaxValue(tlen);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;=&nbsp;slen-tlen;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(135, 133, 115); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;如果哈希值相等就是找到了</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(hashS&nbsp;==&nbsp;hashT)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(135, 133, 115); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;验证是否真的相同</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(isMatch(S,&nbsp;i,&nbsp;T,&nbsp;tlen))&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;i+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(135, 133, 115); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;更新hashS</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hashS&nbsp;=&nbsp;(hashS-&nbsp;(S[i]-<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(125, 151, 38); word-wrap: inherit !important; word-break: inherit !important;">'a'</span>)*hValue)*d&nbsp;+&nbsp;(S[i+tlen]-<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(125, 151, 38); word-wrap: inherit !important; word-break: inherit !important;">'a'</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;<br>}<br><br><span class="hljs-function" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(54, 161, 102); word-wrap: inherit !important; word-break: inherit !important;">main</span>(<span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;argc,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;argv[]</span>)&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(135, 133, 115); word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;insert&nbsp;code&nbsp;here...</span><br>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(125, 151, 38); word-wrap: inherit !important; word-break: inherit !important;">"Hello,&nbsp;World!\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;index&nbsp;=&nbsp;RK(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(125, 151, 38); word-wrap: inherit !important; word-break: inherit !important;">"abcdex"</span>,&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(125, 151, 38); word-wrap: inherit !important; word-break: inherit !important;">"ex"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(125, 151, 38); word-wrap: inherit !important; word-break: inherit !important;">"第一个匹配的位置是&nbsp;%d&nbsp;\n"</span>,index);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br>-----<br>Hello,&nbsp;World!<br>第一个匹配的位置是&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">5</span>&nbsp;<br></code></pre></div><h2 id="KMP-算法"><a href="#KMP-算法" class="headerlink" title="KMP 算法"></a>KMP 算法</h2><p><strong>D.E.Knuth</strong>，<strong>J.H.Morris</strong> 和 <strong>V.R.Pratt</strong> 共同发表模式匹配算法，称之为 <strong>克鲁特-莫里斯-普拉特算法</strong>。</p><p>上面我们讲述了 <strong>BF算法</strong>，题目如下:</p><blockquote><p>我们有主串 S = “abcabdcdabcf”,</p><p>匹配串  T = “abcf”</p></blockquote><p>我们依次遍历主串和匹配串每个位置的字符，这里我们默认字符串的第0个位置保存的是字符串的长度，也就是说我们的串起始位置都是从1开始。</p><p><strong>第一步</strong>：</p><img src="https://s1.ax1x.com/2020/04/25/JyVXCt.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>依次比较 <code>s[i]</code> 和 <code>T[j]</code>,如果他们的值相同， <code>i++</code> ,<code>j++</code> 直到 <code>i=4</code>,<code>j=4</code> 的时候发现它们俩对应的字符不同，那么来到第二步：</p><p><strong>第二步</strong>：</p><img src="https://s1.ax1x.com/2020/04/25/JyZpDg.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p><code>i=2</code>,<code>j=1</code> 发现他们的值不同，来到第三步：</p><p><strong>第三步</strong>:</p><img src="https://s1.ax1x.com/2020/04/25/JyVxv8.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p><code>i=3</code>,<code>j=1</code> 发现他们的值不同，来到第四步：</p><p><strong>第四步</strong>：</p><img src="https://s1.ax1x.com/2020/04/25/JyVvgf.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>从第一步到第四步我们都是依次进行遍历比较，里边有我们能优化的地方吗：</p><img src="https://s1.ax1x.com/2020/04/25/JynOeS.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>根据上图我们知道第一步我们已经比较到 <code>i=4</code> 的时候不同，那么我们的<code>第二步</code>到 <code>第三步</code> 明显是可以省略的，所以为了优化，我们应该直接跳到第四步。</p><p>那么这个很容易理解，因为我们的子串<code>T</code> 内部的字符都不相同，那么我们看一个复杂一点的例子：</p><img src="https://s1.ax1x.com/2020/04/25/JyMF54.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>这个时候问题来了，下一步我们该从哪开始呢：</p><img src="https://s1.ax1x.com/2020/04/25/JyMAPJ.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>如上图，很显然子串的首两位 <code>a</code> 和 <code>b</code> 是不需要再进行比较的，因为我们在上面进行比较的时候已经比较过了，这个最主要的原因就是：</p><blockquote><p>我们当前匹配成功的那一部分字符串有相同的前缀和后缀</p></blockquote><p>这样理解起来就会简单的多，前缀和后缀相同那么如果匹配到后缀的位置，前缀就不用再比较了，所以问题的核心就是找到子串的每一部分对应的跳转，也就是子串任意位置匹配失败而导致重新配的位置，这里业界统一用一个 <code>next</code>[…] 数组来保存字符串 <code>T</code> 的每个字符匹配失败对应的下次 <code>j</code> 跳转的位置，那么只要匹配失败，我们就将下一次比较的<code>j = next[j]</code> 即可。</p><h3 id="next数组"><a href="#next数组" class="headerlink" title="next数组"></a>next数组</h3><p>为了方便我们默认 <code>next[1] = 0</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T &#x3D; &quot;abcdex&quot;</span><br></pre></td></tr></table></figure><ul><li>当 比较到<code>a</code>不相等的时候，<code>next[1] = 0</code></li><li>当比较到<code>b</code>不想等的时候，它前面的范围内只有一个字符 <code>a</code> 那么下次比较还是要跳到<code>j=1</code> 所以<code>next[2] = 1</code></li><li>以此类推，因为<code>T</code>串中没有相同的字符所以其每个位置只要发现不同，都要跳转到<code>j= 1</code> 的位置执行,所以针对 此<code>T</code> 串的 <code>next = [0,1,1,1,1,1]</code></li></ul><p>我们再来对比一个复杂一点的:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T &#x3D; &quot;abcab&quot;</span><br></pre></td></tr></table></figure><ul><li><p>当 比较到<code>a</code>不相等的时候，<code>next[1] = 0</code></p></li><li><p>当比较到<code>b</code>不相等的时候，它前面的范围内只有一个字符 <code>a</code> 那么下次比较还是要跳到<code>j=1</code> 所以<code>next[2] = 1</code></p></li><li><p>当比较到<code>c</code>不相等的时候，它前面的范围内的字符是 <code>ab</code> 那么下次比较还是要跳到<code>j=1</code> 所以<code>next[3] = 1</code></p></li><li><p>当比较到第二个<code>a</code>不相等的时候，它前面的范围内的字符是 <code>abc</code> 那么下次比较还是要跳到<code>j=1</code> 所以<code>next[4] = 1</code></p></li><li><p>当比较到第二个<code>b</code>不相等的时候，它前面的范围内的字符是 <code>abca</code>,这里就要注意了，该串有相同的前缀和相同的后缀<code>a</code> 那么当我么再跳转的时候，应该是直接比较 <code>b</code> 这个位置才对，我们相同的前缀和后缀字符串长度是1，那么我们下一次比较的位置应该在相同前缀或后缀长度的下一个字符处，所以<code>next[5] = 2</code></p><p>所以针对此种情况 <code>next = [0,1,1,1,2]</code></p></li></ul><p>结合上述对<code>next</code> 数组的理解，我们用代码来实现：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs r" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; background: rgb(34, 34, 27); color: rgb(146, 145, 129); padding: 0.5em; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">//----KMP&nbsp;模式匹配算法---<br>//<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">1.</span>通过计算返回子串<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>的<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>数组;<br>//注意字符串<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>]中是存储的字符串长度;&nbsp;真正的字符内容从<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">1</span>]开始;<br>void&nbsp;get_next(String&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>,int&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>){<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i,j;<br>&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">1</span>]&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;//abcdex<br>&nbsp;&nbsp;&nbsp;&nbsp;//遍历<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>模式串,&nbsp;此时<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>]为模式串<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>的长度;<br>&nbsp;&nbsp;&nbsp;&nbsp;//printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(125, 151, 38); word-wrap: inherit !important; word-break: inherit !important;">"length&nbsp;=&nbsp;%d\n"</span>,<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>]);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(j&nbsp;&lt;&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(125, 151, 38); word-wrap: inherit !important; word-break: inherit !important;">"i&nbsp;=&nbsp;%d&nbsp;j&nbsp;=&nbsp;%d\n"</span>,i,j);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">if</span>(i&nbsp;==<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>&nbsp;||&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[i]&nbsp;==&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[j]){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[i]&nbsp;表示后缀的单个字符;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[j]&nbsp;表示前缀的单个字符;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++j;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>[j]&nbsp;=&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(125, 151, 38); word-wrap: inherit !important; word-break: inherit !important;">"next[%d]=%d\n"</span>,j,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>[j]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">else</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//如果字符不相同,则i值回溯;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>[i];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre></div><p><code>next</code>  数组已经求解出来了，接下来我们就具体实现 <code>KMP算法</code></p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs r" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; background: rgb(34, 34, 27); color: rgb(146, 145, 129); padding: 0.5em; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">//返回子串<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>在主串S中第pos个字符之后的位置,&nbsp;如不存在则返回<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>int&nbsp;Index_KMP(String&nbsp;S,String&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>,int&nbsp;pos){<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//i&nbsp;是主串当前位置的下标准,j是模式串当前位置的下标准<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i&nbsp;=&nbsp;pos;<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;j&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//定义一个空的<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>数组;<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>[MAXSIZE];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//对<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>串进行分析,得到<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>数组;<br>&nbsp;&nbsp;&nbsp;&nbsp;get_next(<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;count&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;//注意:&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>]&nbsp;和&nbsp;S[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>]&nbsp;存储的是字符串<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>与字符串S的长度;<br>&nbsp;&nbsp;&nbsp;&nbsp;//若i小于S长度并且j小于<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>的长度是循环继续;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(i&nbsp;&lt;=&nbsp;S[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>]&nbsp;&amp;&amp;&nbsp;j&nbsp;&lt;=&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>])&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//如果两字母相等则继续,并且j++,i++<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">if</span>(j&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>&nbsp;||&nbsp;S[i]&nbsp;==&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[j]){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">else</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//如果不匹配时,j回退到合适的位置,i值不变;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>[j];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(j&nbsp;&gt;&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;i-<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;}<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">else</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>}<br></code></pre></div><h3 id="KMP的优化"><a href="#KMP的优化" class="headerlink" title="KMP的优化"></a>KMP的优化</h3><p>我们来看另外一个特殊的例子：</p><img src="https://s1.ax1x.com/2020/04/25/JyGbyd.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>当我们比较到<code>j=6</code>  的时候发现不一样，这个时候我们就应该跳转 <code>j=next[5]=5</code> </p><img src="https://s1.ax1x.com/2020/04/25/JyGHQH.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>当我们比较到<code>j=6</code>  的时候发现不一样，这个时候我们就应该跳转 <code>j=next[4]=4</code> </p><img src="https://s1.ax1x.com/2020/04/25/JyG7Se.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>然后依次类推，直到循环到 <code>j=1</code> ，那么这种特殊情况就挺恶心的，因为我们已经比较了a，但是依赖于上述程序的话只能这么走，但是确实有很多不必要的比较，其实我们是想直接这样：</p><img src="https://s1.ax1x.com/2020/04/25/JyGoWD.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:0%;" /><p>基于此，我们针对这种特殊情况对 <code>KMP</code> 算法进行优化,首先就是要对 <code>next数组</code>进行优化： </p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs r" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; background: rgb(34, 34, 27); color: rgb(146, 145, 129); padding: 0.5em; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">//求模式串<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>的<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>函数值修正值并存入nextval数组中;<br>void&nbsp;get_nextVal(String&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>,int&nbsp;*nextVal){<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i,j;<br>&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;nextVal[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">1</span>]&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(j&nbsp;&lt;&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(i&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>&nbsp;||&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[i]&nbsp;==&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[j])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++j;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//如果当前字符与前缀不同,则当前的j为nextVal&nbsp;在i的位置的值<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">if</span>(<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[i]&nbsp;!=&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[j])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextVal[j]&nbsp;=&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">else</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//如果当前字符与前缀相同,则将前缀的nextVal&nbsp;值赋值给nextVal&nbsp;在i的位置<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextVal[j]&nbsp;=&nbsp;nextVal[i];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">else</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;=&nbsp;nextVal[i];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre></div><p>这样的话我们求出来的<code>next = [0,1,1,1,1,1]</code></p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs r" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; background: rgb(34, 34, 27); color: rgb(146, 145, 129); padding: 0.5em; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">//返回子串<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>在主串S中第pos个字符之后的位置,&nbsp;如不存在则返回<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>int&nbsp;Index_KMP2(String&nbsp;S,String&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>,int&nbsp;pos){<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//i&nbsp;是主串当前位置的下标准,j是模式串当前位置的下标准<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i&nbsp;=&nbsp;pos;<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;j&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//定义一个空的<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>数组;<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>[MAXSIZE];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;//对<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>串进行分析,得到<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>数组;<br>&nbsp;&nbsp;&nbsp;&nbsp;get_nextVal(<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;count&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;//注意:&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>]&nbsp;和&nbsp;S[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>]&nbsp;存储的是字符串<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>与字符串S的长度;<br>&nbsp;&nbsp;&nbsp;&nbsp;//若i小于S长度并且j小于<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>的长度是循环继续;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(i&nbsp;&lt;=&nbsp;S[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>]&nbsp;&amp;&amp;&nbsp;j&nbsp;&lt;=&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>])&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//如果两字母相等则继续,并且j++,i++<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">if</span>(j&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>&nbsp;||&nbsp;S[i]&nbsp;==&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[j]){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">else</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//如果不匹配时,j回退到合适的位置,i值不变;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">next</span>[j];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(j&nbsp;&gt;&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;i-<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">T</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">0</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;}<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">else</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(95, 145, 130); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(174, 115, 19); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>}<br></code></pre></div><p>这种特殊情况，用这种优化的方法处理起来会更加的快捷，但是普通情况下还是第一种最好，所以算法的优劣还是要依据具体的应用场景和实际的情况，不能一概而论</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这篇文章主要讲述了字符串匹配的三种方法，各有优劣，其中KMP 算法的理解上可能会有些难度，但是仔细去琢磨就会慢慢弄懂其中究竟，希望这篇文章能给大家讲清楚。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;有主串 S = “abcacabdc”,模式串 T = “abd”,请查找出模式串在主串第一次出现的位置，注意：主串和模式串均为小写字母切都是合法输入。
    
    </summary>
    
    
    
      <category term="数据结构" scheme="http://typeco.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://typeco.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://typeco.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法 - 栈应用</title>
    <link href="http://typeco.cn/posts/c9096fc3/"/>
    <id>http://typeco.cn/posts/c9096fc3/</id>
    <published>2020-04-19T11:10:52.000Z</published>
    <updated>2020-04-20T17:06:49.996Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这篇文章主要罗列一些常见的算法题，涉及到栈的使用等。<a id="more"></a></p><h2 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h2><blockquote><p>将不同进制的数转化为十进制的数并输出</p></blockquote><p>首先我们以八进制转十进制为例，八进制原理是逢八就进一，所以<code>八进制10</code>代表的是<code>十进制的8</code>，11代表的是9 = 8^1+1 ,所以9除以8=1余1这就是我们对进制转换的核心逻辑所在：<strong>除8取余法</strong>。</p><img src="https://s1.ax1x.com/2020/04/19/JKj4m9.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>由于我们的操作步骤和读书步骤是相反的即八进制的797转为10进制就是1435，所以我们使用栈的结构来处理，因为栈是先进后出，只要余数陆续进栈再出栈就是我们想要的数。</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">conversion</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;N)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;SqStack&nbsp;S;<br>&nbsp;&nbsp;&nbsp;&nbsp;SElemType&nbsp;e;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//1.初始化一个空栈S</span><br>&nbsp;&nbsp;&nbsp;&nbsp;InitStack(&amp;S);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//2.每次取余数直到结果为0为止，把每次的余数进栈</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(N)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushData(&amp;S,&nbsp;N%<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">8</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;N&nbsp;=&nbsp;N/<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">8</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//3.出栈得到我们想要的十进制数据</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(!StackEmpty(S))&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pop(&amp;S,&nbsp;&amp;e);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d\n"</span>,e);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre></div><p>二进制以及十六进制也一样，除8改为相应的进制数即可，这里要注意十六进制的字母的问题即可，具体你可以下去尝试写写。</p><h2 id="每日温度"><a href="#每日温度" class="headerlink" title="每日温度"></a>每日温度</h2><p>这道理来自 <code>LeetCode -739</code> </p><blockquote><p>根据每日 气温 列表，请重新生成一个列表，对应位置的输出是需要再等待多久温度才会升高超过该日的天数。如果之后都不会升高，请在该位置用 0 来代替。</p><p>例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，你的输出应该是 [1, 1, 4, 2, 1, 1, 0, 0]。</p><p>提示：气温 列表长度的范围是 [1, 30000]。每个气温的值的均为华氏度，都是在 [30, 100] 范围内的整数。</p></blockquote><h3 id="暴力法"><a href="#暴力法" class="headerlink" title="暴力法"></a>暴力法</h3><p>暴力法很容易想到，从第一个元素开始依次跟后面的每个元素进行比较。</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;&nbsp;*<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">dailyTemperatures_1</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>*&nbsp;T,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;TSize,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>*&nbsp;returnSize)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;*result&nbsp;=&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;*)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>)&nbsp;*&nbsp;TSize);<br>&nbsp;&nbsp;&nbsp;&nbsp;*returnSize&nbsp;=&nbsp;TSize;<br>&nbsp;&nbsp;&nbsp;&nbsp;result[TSize<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>]&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;i&nbsp;&lt;&nbsp;TSize<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(i&gt;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>&nbsp;&amp;&amp;&nbsp;T[i]&nbsp;==&nbsp;T[i<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result[i]&nbsp;=&nbsp;result[i<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>]&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>?<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>:result[i<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>]<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;j&nbsp;=&nbsp;i+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;j&nbsp;&lt;&nbsp;TSize;&nbsp;j++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(T[j]&nbsp;&gt;&nbsp;T[i]){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result[i]&nbsp;=&nbsp;j-i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">break</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(j&nbsp;==&nbsp;TSize<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result[i]&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;result;<br>}<br></code></pre></div><h3 id="倒序跳跃法"><a href="#倒序跳跃法" class="headerlink" title="倒序跳跃法"></a>倒序跳跃法</h3><p>倒序的来进行对比的话就可以省略部分的比较，比如当我们已经知道71那天的温度会在2天之后变大，而75又大于71，那么中间的71和69就可以忽略，直接可以从比71大的第一天开始遍历即可，数据量大的情况下时间优化还是很大的。</p><ol><li>从右到左遍历. 因为最后一天的气温不会再升高,默认等于0</li><li>i 从[TSize-2,0]; 从倒数第二天开始遍历比较. 每次减一</li><li>j 从[i+1,TSize]遍历, j+=result[j],可以利用已经有结果的位置进行跳跃,从而减少遍历次数<ol><li>若T[i]&lt;T[j],那么result = j - i</li><li>若reuslt[j] == 0,则表示后面不会有更大的值,那么当前值就应该也是0</li></ol></li></ol><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;&nbsp;*<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">dailyTemperatures_2</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>*&nbsp;T,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;TSize,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>*&nbsp;returnSize)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;*result&nbsp;=&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;*)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>)&nbsp;*&nbsp;TSize);<br>&nbsp;&nbsp;&nbsp;&nbsp;*returnSize&nbsp;=&nbsp;TSize;<br>&nbsp;&nbsp;&nbsp;&nbsp;result[TSize<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>]&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i=TSize<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-2</span>;&nbsp;i&nbsp;&gt;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i--)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;j&nbsp;=&nbsp;i+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;j&nbsp;&lt;&nbsp;TSize;&nbsp;j+=result[j])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(T[i]&nbsp;&lt;&nbsp;T[j])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result[i]&nbsp;=&nbsp;j-i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">break</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(result[j]&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result[i]&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">break</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;result;<br>}<br></code></pre></div><h3 id="单调递减栈"><a href="#单调递减栈" class="headerlink" title="单调递减栈"></a>单调递减栈</h3><ol><li><p>初始化一个栈,栈中存储的是元素的索引值index</p></li><li><p>遍历整个温度数组从[0,TSize]</p><ol><li>如果当前的栈为空,则直接入栈</li><li>如果当前的元素小于栈顶元素,则入栈</li><li>如果栈顶元素&lt;当前元素,则将当前元素索引index-栈顶元素index,计算完毕则将当前栈顶元素移除,将当前元素索引index 存储到栈中; 出栈后,只要栈不为空.继续比较,直到栈顶元素不能满足T[i] &gt; T[stack_index[top-1]]</li><li>while循环结束后,当前元素也需要入栈</li></ol></li></ol><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>*&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">dailyTemperatures_3</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>*&nbsp;T,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;TSize,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>*&nbsp;returnSize)</span>&nbsp;</span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>*&nbsp;result&nbsp;=&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>*)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>)*TSize);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;用栈记录T的下标。</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>*&nbsp;stack_index&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>)*TSize);<br>&nbsp;&nbsp;&nbsp;&nbsp;*returnSize&nbsp;=&nbsp;TSize;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;栈顶指针。</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;top&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;tIndex;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;TSize;&nbsp;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result[i]&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;TSize;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;若当前元素大于栈顶元素，栈顶元素出栈。即温度升高了，所求天数为两者下标的差值。</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(top&nbsp;&gt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>&nbsp;&amp;&amp;&nbsp;T[i]&nbsp;&gt;&nbsp;T[stack_index[top<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>]])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tIndex&nbsp;=&nbsp;stack_index[top<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result[tIndex]&nbsp;=&nbsp;i&nbsp;-&nbsp;tIndex;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top--;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;当前元素入栈。</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stack_index[top]&nbsp;=&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top++;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;result;<br>}<br></code></pre></div><p>集中方案的具体效率如何，我在LeetCode上的测试结果如下：</p><img src="https://s1.ax1x.com/2020/04/19/JMkOeK.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>每一个方法都有优劣之分，不能单纯的以一个维度去考虑，具体情况还要结合实际的应用场景。</p><h2 id="括号匹配"><a href="#括号匹配" class="headerlink" title="括号匹配"></a>括号匹配</h2><blockquote><p>假设表达式中允许包含两种括号：圆括号 和 方括号 ，他们嵌套顺序随意，但是要求每一个括号都是一一对应的，就像我们写代码的各种if判断的花括号一样，所以<code>([][()])</code>  和  <code>[([][])]</code> 都是正确的 ，而 <code>[(]</code> 或 <code>((]))</code> 都是错误的，如何判断某个表达式是否合法？</p></blockquote><p>当我们碰到字符串的匹配以及来回比较的时候，我们可以考虑使用栈的数据结构：碰到左括号入栈，碰到右括号就出栈，如果最终栈为空说明是一一配对的，否则不合法：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;"> 1</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;括号匹配</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;"> 2</span><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">IsCorrect</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>)</span>&nbsp;</span>{<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;"> 3</span>&nbsp;&nbsp;&nbsp;&nbsp;Stack&nbsp;S;<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;"> 4</span>&nbsp;&nbsp;&nbsp;&nbsp;InitStack(&amp;S);<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;"> 5</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;"> 6</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;"> 7</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;temp&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>];<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;"> 8</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(temp)&nbsp;{<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;"> 9</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"string&nbsp;is&nbsp;%c&nbsp;\n"</span>,temp);<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">10</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(temp&nbsp;==&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'['</span>)&nbsp;{<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">11</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushData(&amp;S,&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'['</span>);<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">12</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(temp&nbsp;==&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'('</span>)&nbsp;{<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">13</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushData(&amp;S,&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'('</span>);<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">14</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(temp&nbsp;==&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">')'</span>)&nbsp;{<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">15</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;top;<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">16</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetTop(S,&nbsp;&amp;top);<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">17</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(top&nbsp;==&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'('</span>)&nbsp;{<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">18</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pop(&amp;S,&nbsp;&amp;top);<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">19</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">20</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushData(&amp;S,&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">')'</span>);<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">21</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;return&nbsp;FALSE;</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">22</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">23</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(temp&nbsp;==&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">']'</span>)&nbsp;{<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">24</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;top;<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">25</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetTop(S,&nbsp;&amp;top);<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">26</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(top&nbsp;==&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'['</span>)&nbsp;{<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">27</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pop(&amp;S,&nbsp;&amp;top);<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">28</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">29</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushData(&amp;S,&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">']'</span>);<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">30</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;return&nbsp;FALSE;</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">31</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">32</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">33</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;++;<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">34</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>[i];<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">35</span>&nbsp;&nbsp;&nbsp;&nbsp;}<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">36</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">37</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;IsEmpty(S)?SUCCESS:FALSE;<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); padding-right: 20px; word-spacing: 0px; word-wrap: inherit !important; word-break: inherit !important;">38</span>}<br></code></pre></div><p>这里所写的代码是把所有的字符串都过一遍，最终判断栈是否为空，其实上面 21 行 和 30 行 都可以进行优化，如果加右边括号的时候，只要判断栈顶不是左边相匹配的括号即可判断非法，这样可能尽快的结束任务。</p><h2 id="杨辉三角"><a href="#杨辉三角" class="headerlink" title="杨辉三角"></a>杨辉三角</h2><blockquote><p>给定一个非负整数 <code>numRows</code>，生成杨辉三角的前 <code>numRows</code> 行。</p></blockquote><img src="https://s1.ax1x.com/2020/04/19/JMCQ91.gif?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:100%;" /><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入: 5</span><br><span class="line">输出:</span><br><span class="line">[</span><br><span class="line">     [1],</span><br><span class="line">    [1,1],</span><br><span class="line">   [1,2,1],</span><br><span class="line">  [1,3,3,1],</span><br><span class="line"> [1,4,6,4,1]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>这道题来自 <code>Leetcode - 118</code> ，从给的实例我们就可以看出结果是要我们输出一个二维数组，然后每一行的第一个元素和最后一个元素都是1，初次之外 <code>arr[i][j] = arr[i-1][j-1]+arr[i-1][j]</code> 以此类推：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>**&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">generate</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;numRows,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>*&nbsp;returnSize)</span></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;*returnSize&nbsp;=&nbsp;numRows;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;**res&nbsp;=&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;**)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>*)*numRows);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;numRows;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res[i]&nbsp;=&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;*)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>)*(i+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res[i][<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>]&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res[i][i]&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;j&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;j&nbsp;&lt;&nbsp;i;&nbsp;j++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res[i][j]&nbsp;=&nbsp;res[i<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>][j]&nbsp;+&nbsp;res[i<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>][j<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;res;<br>}<br></code></pre></div><h2 id="爬楼梯"><a href="#爬楼梯" class="headerlink" title="爬楼梯"></a>爬楼梯</h2><blockquote><p>假设你正在爬楼梯。需要 n 阶你才能到达楼顶。<br>每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？<br>注意：给定 n 是一个正整数</p></blockquote><p>这道题来自于<code>LeetCode - 70</code>，其实主要考的是动态规划和递归思想。</p><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><p>递归法就是我们首先要找到我们想要的结果，往前推依次拆分，比如这道题可以这么思考，我们爬到n阶只有两种方式</p><ul><li>从 <code>n-1</code> 阶爬 1  个台阶</li><li>从 <code>n-2</code> 阶爬 2个台阶</li></ul><p>那么问题就简化了 <code>f(n) = f(n-1)+f(n-2)</code> 而且我们知道 <code>f(1) = 1</code> ,<code>f(2) = 2</code> 那么递归的出口有了那么代码就容易了： </p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs kotlin" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">int&nbsp;ClimbStairs(int&nbsp;n){<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(n&lt;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(n&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(n&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ClimbStairs(n<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>)&nbsp;+&nbsp;ClimbStairs(n<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-2</span>);<br>}<br></code></pre></div><h3 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h3><p>其实个人的理解很简答，递归就是自上而下，而动态规划是自下而上，最终动态规划都转变为由循环迭代完成计算。</p><p>对比上面的递归，动态规划的思路就是：而且我们知道 <code>f(1) = 1</code> ,<code>f(2) = 2</code>  那么 <code>f(3) = f(1)+f(2)</code> 紧接着 <code>f(4) = f(3)+f(2)</code>…..直到我们想到达的<code>n</code> 为止。这就是动态规划，乍看一眼，这不是跟递归的思路一样的吗，其实差不多，上面不是说了吗，一个自顶而下一个自底而上，话不多说，看代码就知道区别所在了。</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">ClimbStairs</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;n)</span></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>(n==<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;temp&nbsp;=&nbsp;n+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;*sum&nbsp;=&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;*)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>)&nbsp;*&nbsp;(temp));<br>&nbsp;&nbsp;&nbsp;&nbsp;sum[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>]&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;sum[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>]&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;sum[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>]&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>;&nbsp;i&nbsp;&lt;=&nbsp;n;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum[i]&nbsp;=&nbsp;sum[i<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>]&nbsp;+&nbsp;sum[i<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-2</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;sum[n];<br>}<br></code></pre></div><h2 id="字符串编码"><a href="#字符串编码" class="headerlink" title="字符串编码"></a>字符串编码</h2><blockquote><p>给定一个经过编码的字符串，返回它解码后的字符串。<br>编码规则是：k[encoded_string] ，表示其中方括号内部的 encoded_string 重复k次。注意k保证为正整数。你可以认为输入的字符串总是合法的。输入的字符串中没有其他额外的空格等。<br>例如：<br>s = “3[a]2[bc]”,返回 “aaabcbc”<br>s = “3[a2[c]]” 返回 “accaccacc”<br>s = “2[abc]3[cd]ef” 返回 “abcabccdcdcdef”</p></blockquote><p>其实这道题开起来挺复杂，其实也是对数字和方括号的匹配问题，这里我们不考虑那么复杂，以一个简单的例子来展开思索 <code>12[a]</code> 因为例子给的都是个位数，其实题中一个隐藏的数字问题是超过个位数的判断问题。</p><ol><li>遍历字符串 S,如果当前字符不为方括号”]” 则入栈stack中</li><li>如果当前字符遇到了方括号”]” 则:<ol><li>首先找到要复制的字符,例如stack=”12[a”,那么我要首先获取字符a;将这个a保存在另外一个栈去tempStack</li><li>接下来,要找到需要备份的数量,例如stack=”12[a”,因为出栈过字符”a”,则当前的top指向了”[“,也就是等于2</li><li>而12对于字符串是2个字符, 我们要通过遍历找到数字12的top上限/下限的位置索引, 此时上限curTop = 2, 下限通过出栈,top = -1</li><li>根据范围[-1,2],读取出12保存到strOfInt 字符串中来, 并且将字符”12\0”,转化成数字12</li><li>当前top=-1,将tempStack中的字符a,复制12份入栈到stack中来</li><li>为当前的stack扩容, 在stack字符的末尾添加字符结束符合’\0’</li></ol></li></ol><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">decodeString</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;s)</span></span>{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.获取字符串长度<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.设置默认栈长度50<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.开辟字符串栈(空间为50)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.设置栈头指针top&nbsp;=&nbsp;-1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;len&nbsp;=&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">strlen</span>(s);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;stackSize&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">50</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>*&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>&nbsp;=&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>*)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(stackSize&nbsp;*&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>));<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;top&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//遍历字符串,在没有遇到"]"&nbsp;之前全部入栈</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;len;&nbsp;++i)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(s[i]&nbsp;!=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">']'</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//优化:如果top到达了栈的上限,则为栈扩容;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(top&nbsp;==&nbsp;stackSize&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">realloc</span>(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>,&nbsp;(stackSize&nbsp;+=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">50</span>)&nbsp;*&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//将字符入栈stack</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>[++top]&nbsp;=&nbsp;s[i];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"#①&nbsp;没有遇到']'之前#&nbsp;top&nbsp;=&nbsp;%d\n"</span>,top);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;tempSize&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>*&nbsp;temp&nbsp;=&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>*)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(tempSize&nbsp;*&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;topOfTemp&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"#②&nbsp;开始获取要复制的字符信息之前&nbsp;#&nbsp;top&nbsp;=&nbsp;%d\n"</span>,top);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//从栈顶位置开始遍历stack,直到"["结束;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//把[a]这个字母a&nbsp;赋值到temp栈中来;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//简单说,就是将stack中方括号里的字符出栈,复制到temp栈中来;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>[top]&nbsp;!=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'['</span>)&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//优化:如果topOfTemp到达了栈的上限,则为栈扩容;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(topOfTemp&nbsp;==&nbsp;tempSize&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">realloc</span>(temp,&nbsp;(tempSize&nbsp;+=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>)&nbsp;*&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//temp栈的栈顶指针自增;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++topOfTemp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//将stack栈顶字符复制到temp栈中来;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp[topOfTemp]&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>[top];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//stack出栈,则top栈顶指针递减;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top--;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"#②&nbsp;开始获取要复制的字符信息之后&nbsp;#&nbsp;top&nbsp;=&nbsp;%d\n"</span>,top);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//找到倍数数字.strOfInt字符串;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//注意:如果是大于1位的情况就处理</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;strOfInt[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">11</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//p记录当前的top;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;curTop&nbsp;=&nbsp;top;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"#③&nbsp;开始获取数字,数字位置上限&nbsp;#&nbsp;curTop&nbsp;=&nbsp;%d\n"</span>,curTop);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//top--的目的是把"["剔除,才能找到数字;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top--;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//遍历stack得出数字</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//例如39[a]&nbsp;就要找到这个数字39.</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//p指向当前的top,我就知道上限了;&nbsp;那么接下来通过循环来找它的数字下限;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//结束条件:栈指针指向为空!&nbsp;stack[top]&nbsp;不等于数字</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(top&nbsp;!=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>&nbsp;&amp;&amp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>[top]&nbsp;&gt;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'0'</span>&nbsp;&amp;&amp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>[top]&nbsp;&lt;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'9'</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top--;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"#③&nbsp;开始获取数字,数字位置下限&nbsp;#&nbsp;top&nbsp;=&nbsp;%d\n"</span>,top);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//从top-1遍历到p之间,&nbsp;把stack[top-1,p]之间的数字复制到strOfInt中来;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//39中3和9都是字符.&nbsp;我们要获取到这2个数字,存储到strOfInt数组</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;j&nbsp;=&nbsp;top&nbsp;+&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;j&nbsp;&lt;&nbsp;curTop;&nbsp;++j)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strOfInt[j&nbsp;-&nbsp;(top&nbsp;+&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)]&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>[j];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//为字符串strOfInt数组加一个字符结束后缀'\0'</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strOfInt[curTop&nbsp;-&nbsp;(top&nbsp;+&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)]&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'\0'</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//把strOfInt字符串转换成整数&nbsp;atoi函数;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//把字母复制strOfInt份到stack中去;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//例如39[a],就需要把复制39份a进去;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;curNum&nbsp;=&nbsp;atoi(strOfInt);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;k&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;k&nbsp;&lt;&nbsp;curNum&nbsp;;&nbsp;++k)&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//从-1到topOfTemp&nbsp;范围内,复制curNum份到stackTop中去;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;kk&nbsp;=&nbsp;topOfTemp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(kk&nbsp;!=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>)&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//优化:如果stack到达了栈的上限,则为栈扩容;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(top&nbsp;==&nbsp;stackSize&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">realloc</span>(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>,&nbsp;(stackSize&nbsp;+=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">50</span>)&nbsp;*&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//将temp栈的字符复制到stack中;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//stack[++top]&nbsp;=&nbsp;temp[kk--];</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++top;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>[top]&nbsp;=&nbsp;temp[kk];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kk--;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">free</span>(temp);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//realloc&nbsp;动态内存调整;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//void&nbsp;*realloc(void&nbsp;*mem_address,&nbsp;unsigned&nbsp;int&nbsp;newsize);</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//构成字符串stack后,&nbsp;在stack的空间扩容.</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>*&nbsp;ans&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">realloc</span>(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>,&nbsp;(top&nbsp;+&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)&nbsp;*&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>));<br>&nbsp;&nbsp;&nbsp;&nbsp;ans[++top]&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'\0'</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//stack&nbsp;栈不用,则释放;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">free</span>(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ans;<br>}<br></code></pre></div><h2 id="去除重复字母"><a href="#去除重复字母" class="headerlink" title="去除重复字母"></a>去除重复字母</h2><blockquote><p>给你一个仅包含小写字母的字符串，请你去除字符串中重复的字母，使得每个字母只出现一次。需保证返回结果的字典序最小（要求不能打乱其他字符的相对位置）</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">例如：</span><br><span class="line">输入：&quot;bcabc&quot; &#x3D;&#x3D;&#x3D;&gt; 输出 &quot;abc&quot;</span><br><span class="line">输入：&quot;cbacdcbc&quot;&#x3D;&#x3D;&#x3D;&gt; 输出 &quot;acdb&quot;</span><br></pre></td></tr></table></figure><p>很明显题目涉及到元素的来回比较，可以考虑使用栈的思想，由于要保证返回结果字典序最小类似 <code>book &lt; peek</code> ，所以我们考虑维护一个类似单调递增栈的意思具体下面会讲，另外我们需要一个数组保存每个字母出现的总次数，每入栈一次就对相应字母的次数进行 <code>-1</code> 处理，思路概述：</p><ol><li>创建一个数组保存每个字母出现的次数，很显然只需要创建一个 <code>26</code> 个容量的数组即可</li><li>遍历字符串，如果栈是空直接入栈，否则进行判断：<ol><li>如果栈中存在相同的字符，直接对相应字符存在的数量进行减一处理</li><li>如果当前字符大于栈顶元素，那么直接入栈</li><li>如果当前字符小于栈顶元素，继续判断栈顶元素后面是否还有，如果有那么出栈直到栈顶当前字符大于栈顶元素。</li></ol></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">以 bcabc 为例:</span><br><span class="line">创建数组保存每个元素出现的次数 a:1次，b：2次，c：2次</span><br><span class="line">count[] &#x3D; &#123;1,2,2,0,0...&#125;; </span><br><span class="line">创建空栈 Stack </span><br><span class="line">首先 b 入栈 [b] 并对b的次数-1,当c来的时候进行判断，栈中没有c，接着判断c&gt;b 直接入栈 [b,c]并对c的数量进行-1,接下来碰到a，栈中没有a，栈顶c&gt;a那么判断c在后面是否还有，查到c还会出现一次，对c进行出栈，继续对栈顶b和a进行比较依旧是对栈顶b进行出栈，这个时候栈应该是[a],以此类推，后续都是进行入栈，最终结果就是[a,b,c]即是结果</span><br><span class="line">[]-&gt;[b]-&gt;[b,c]-&gt;[b]-&gt;[]-&gt;[a]-&gt;[a,b]-&gt;[a,b,c]</span><br></pre></td></tr></table></figure><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">MinString</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;边界判断</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>&nbsp;==&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>&nbsp;||&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">strlen</span>(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>)&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">""</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">strlen</span>(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>)&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;用一个数组保存每个字母出现的次数</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;record[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">26</span>]&nbsp;=&nbsp;{<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>};<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">unsigned</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">long</span>&nbsp;len&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">strlen</span>(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;top&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>&nbsp;=&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(len*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>)+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">memset</span>(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>,&nbsp;len*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>)+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;len;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>[i]-<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'a'</span>]++;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;len;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;判断当前字符是否已经在栈中</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;exist&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;j&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;j&nbsp;&lt;=&nbsp;top;&nbsp;j&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>[j]&nbsp;==&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>[i])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exist&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(exist&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)&nbsp;{<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;如果存在直接对数组中相应字母数量减一</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>[i]-<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'a'</span>]--;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;如果栈为空或者栈顶小于当前元素直接入栈，并减少数量</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(top&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>&nbsp;||&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>[top]&nbsp;&lt;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>[i])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>[top]&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>[i];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>[i]-<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'a'</span>]--;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;否则一直出栈直到栈顶元素小于当前元素</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(top&gt;=<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>&nbsp;&amp;&amp;&nbsp;record[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>[top]-<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'a'</span>]&nbsp;&gt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>&nbsp;&amp;&amp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>[top]&nbsp;&gt;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>[i])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top--;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;入栈新元素，并减少数量</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>[++top]&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>[i];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record[<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">string</span>[i]-<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'a'</span>]--;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;字符串末尾补\0</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>[++top]&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">'\0'</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">stack</span>;<br>}<br></code></pre></div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这篇文章罗列了最近学习的算法问题，作以小结，后续还会讲自己学习的一些算法问题总结到文章中去，希望能够将各个题目讲清楚，有问题还请留言沟通。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章主要罗列一些常见的算法题，涉及到栈的使用等。
    
    </summary>
    
    
    
      <category term="数据结构" scheme="http://typeco.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://typeco.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://typeco.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法 - 队列</title>
    <link href="http://typeco.cn/posts/485bf345/"/>
    <id>http://typeco.cn/posts/485bf345/</id>
    <published>2020-04-14T12:21:14.000Z</published>
    <updated>2020-04-14T15:48:27.658Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>之前分享了一篇关于栈这种数据结构的逻辑和实现，这篇文章我们看看队列这种数据结构是一种什么样的结构以及如何从顺序存储和链式存储去实现这么一个结构。</p><p>队列也是一种线性数据结构，跟栈的结构差不多，唯一不同的的就是 <strong>栈是先进后出</strong> 而 <strong>队列是先进先出</strong> 也就是通常所说的 <strong>FIFO</strong> : <strong>first in first out !</strong><a id="more"></a></p><h2 id="顺序存储队列"><a href="#顺序存储队列" class="headerlink" title="顺序存储队列"></a>顺序存储队列</h2><img src="https://s1.ax1x.com/2020/04/14/JpMoe1.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:80%;" /><p>以上是一个顺序存储队列的示意图，标红的字母表示目前不在队列中，<strong>但是这些数据依旧在开辟的存储空间（数组）中（俗称脏数据）</strong> ，这点很重要，因为我们只是挪动头尾代表的索引，并不会删除具体的数据，从图中可以看出：</p><ul><li>①图：空队列的时候队头和队尾都指向默认的一个节点</li><li>②图：入队的时候只需要挪动队尾的位置即可</li><li>③图：出队同入队只需要挪动队头的位置即可</li><li>③④图：当队尾达到存储空间尾部即代表队列已满</li></ul><p>综上我们会发现当 <strong>Q.rear</strong> 到达尾部存储空间的时候代表队列已满，但是 <strong>Q.front</strong> 可能已经随着出队列已经空出了一些空间，这样就导致了整个存储空间的浪费。第二在我们 <strong>④</strong>图中如果 <strong>f</strong> 数据也出队列的话 <strong>Q.rear == Q.front</strong> 跟我们判断队列是否为空是一样的，所以就导致了整个判断的多意性,所以我们需要另外的一种形式来表示我们的线性队列</p><h3 id="循环队列"><a href="#循环队列" class="headerlink" title="循环队列"></a>循环队列</h3><p>为了避免存储空间的浪费以及这种结构的重复利用性，出现 <strong>循环队列</strong> 的存储结构，看起来是这样：</p><img src="https://s1.ax1x.com/2020/04/14/Jp1GZR.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:80%;" /><p>但是这个结构仍然有个问题就是依旧无法判断队满还是队空，<strong>计算机科学领域的任务问题都可以通过增加一个中间层来解决</strong> ，这也一样，牺牲掉一个存储单元来对他们进行分隔就很容易判断了，其实说是牺牲一个存储单元不如说是额外增加一个存储单元，讲道理不是一个意思嘛！</p><img src="https://s1.ax1x.com/2020/04/14/Jp1Jd1.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:80%;" /><h3 id="循环队列的线性结构"><a href="#循环队列的线性结构" class="headerlink" title="循环队列的线性结构"></a>循环队列的线性结构</h3><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Node</span>&nbsp;{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;data[MAXSIZE];<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;rear;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;front;<br>}&nbsp;Queue;<br></code></pre></div><p>基于此种结构，我们对它的一些方法进行构造：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs kotlin" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;初始化一个空队列</span><br>Status&nbsp;InitQueue(Queue&nbsp;*Q)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;rear&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;rear&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;清空一个队列</span><br>Status&nbsp;ClearQueue(Queue&nbsp;*Q)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;rear&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;front&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;是否为空队列</span><br>Status&nbsp;IsEmpty(Queue&nbsp;Q)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;Q.rear&nbsp;==&nbsp;Q.front&nbsp;?&nbsp;TRUE:FALSE;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;队列长度</span><br>int&nbsp;Length(Queue&nbsp;Q)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;(Q.rear-Q.front+MAXSIZE)%MAXSIZE;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;获取头节点</span><br>Status&nbsp;GetHead(Queue&nbsp;Q,Data&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(IsEmpty(Q))&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>&nbsp;=&nbsp;Q.<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>[Q.front];<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;入丢列</span><br>Status&nbsp;QueueEnter(Queue&nbsp;*Q,Data&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;((Q-&gt;rear+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)%MAXSIZE&nbsp;==&nbsp;Q-&gt;front)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>[Q-&gt;rear]&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;rear&nbsp;指针向后移一位，如果到达最后则转到数组头部</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;rear&nbsp;=&nbsp;(Q-&gt;rear+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)%MAXSIZE;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;出队列</span><br>Status&nbsp;QueuePop(Queue&nbsp;*Q,&nbsp;Data&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(IsEmpty(*Q))&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>&nbsp;=&nbsp;Q-&gt;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>[Q-&gt;front];<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;front&nbsp;同上面出队列的rear一样</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;front&nbsp;=&nbsp;(Q-&gt;front+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)%MAXSIZE;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;遍历队列</span><br>Status&nbsp;QueueTraverse(Queue&nbsp;Q)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(IsEmpty(Q))&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i&nbsp;=&nbsp;Q.front;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;((i+Q.front)&nbsp;!=&nbsp;Q.rear)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d&nbsp;&nbsp;&nbsp;"</span>,Q.<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>[i]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;=&nbsp;(i+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)%MAXSIZE;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><p>注意循环队列的关键点在于</p><ul><li>我们牺牲了一个节点，所以在于队列是否满的状态判断中要针对 <strong>+1</strong> 进行操作</li><li>循环队列的循环入队以及出队的过程中涉及到 <strong>rear</strong> 和 <strong>front</strong> 位置的变迁，这也涉及到一个环状计算的问题，这里一般使用 <strong>%(模)</strong> 运算进行处理</li></ul><h2 id="链式存储队列"><a href="#链式存储队列" class="headerlink" title="链式存储队列"></a>链式存储队列</h2><p>相比线性循环队列而言，对列的链式存储方式就简单太多，其实说到底就是一个 <strong>链表</strong>，具体怎么设计就看自己了，这里我以 <strong>带头节点的单向链表</strong>作为例子：</p><img src="https://s1.ax1x.com/2020/04/14/JpBqbV.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:100%;" /><p>如图我们首先要定义节点的结构和队列的结构，队列的结构又依托于节点,所以它们的结构应该是这样：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;Status;<br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;Data;<br><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Node</span>&nbsp;{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Node</span>&nbsp;*<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">next</span>;</span><br>}&nbsp;Node;<br><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*front;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*rear;<br>}&nbsp;Queue;<br></code></pre></div><p>其实说到底还是队单链表的处理：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;初始化队列</span><br>Status&nbsp;InitQueue(Queue&nbsp;*Q)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;front&nbsp;=&nbsp;Q-&gt;rear&nbsp;=&nbsp;(Node&nbsp;*)malloc(sizeof(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!Q-&gt;front)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;front-&gt;next&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;销毁队列</span><br>Status&nbsp;DestroyQueue(Queue&nbsp;*Q)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;遍历链表进行销毁</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(Q-&gt;front)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;=&nbsp;Q-&gt;front;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;front&nbsp;=&nbsp;Q-&gt;front-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(temp);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;将队列置空</span><br>Status&nbsp;ClearQueue(Queue&nbsp;*Q)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*target&nbsp;=&nbsp;Q-&gt;front-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(target)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;target;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(temp);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;front-&gt;next&nbsp;=&nbsp;Q-&gt;rear-&gt;next&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;判断队列是否为空</span><br>Status&nbsp;IsEmpty(Queue&nbsp;Q)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;(Q.rear&nbsp;==&nbsp;Q.front)?<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">TRUE</span>:<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">FALSE</span>;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;获取队列的长度</span><br>int&nbsp;GetLength(Queue&nbsp;Q)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*target&nbsp;=&nbsp;Q.front-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i=<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(target)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;i;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;入队</span><br>Status&nbsp;QueueEnter(Queue&nbsp;*Q,Data&nbsp;data)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*node&nbsp;=&nbsp;(Node&nbsp;*)malloc(sizeof(node));<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!node)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;node-&gt;data&nbsp;=&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;node-&gt;next&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;rear-&gt;next&nbsp;=&nbsp;node;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;修改队尾指针</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;rear&nbsp;=&nbsp;node;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;出队</span><br>Status&nbsp;QueuePop(Queue&nbsp;*Q,Data&nbsp;*data)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(Q-&gt;front&nbsp;==&nbsp;Q-&gt;rear)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;Q-&gt;front-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;*data&nbsp;=&nbsp;temp-&gt;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;front-&gt;next&nbsp;=&nbsp;temp-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;如果只有一个节点，就要移动尾指针</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(temp&nbsp;==&nbsp;Q-&gt;rear)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q-&gt;rear&nbsp;=&nbsp;Q-&gt;front;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;free(temp);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;获取队头元素</span><br>Status&nbsp;GetHead(Queue&nbsp;Q,Data&nbsp;*data)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(Q.front&nbsp;==&nbsp;Q.rear)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;*data&nbsp;=&nbsp;Q.front-&gt;next-&gt;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;遍历队列</span><br>Status&nbsp;QueueTraverse(Queue&nbsp;Q)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*target&nbsp;=&nbsp;Q.front-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"打印队列是："</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(target)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d&nbsp;"</span>,target-&gt;data);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><p>这篇文章主要是讲述了队列的结构原理以及队列的两种实现方式，具体的代码有需要请前往<a href="https://github.com/SanLiangSan/mydemo" target="_blank" rel="noopener">下载代码</a>，希望能够讲清楚，有问题还请随时留言，谢谢!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前分享了一篇关于栈这种数据结构的逻辑和实现，这篇文章我们看看队列这种数据结构是一种什么样的结构以及如何从顺序存储和链式存储去实现这么一个结构。&lt;/p&gt;
&lt;p&gt;队列也是一种线性数据结构，跟栈的结构差不多，唯一不同的的就是 &lt;strong&gt;栈是先进后出&lt;/strong&gt; 而 &lt;strong&gt;队列是先进先出&lt;/strong&gt; 也就是通常所说的 &lt;strong&gt;FIFO&lt;/strong&gt; : &lt;strong&gt;first in first out !&lt;/strong&gt;
    
    </summary>
    
    
    
      <category term="数据结构" scheme="http://typeco.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://typeco.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://typeco.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法 - 栈</title>
    <link href="http://typeco.cn/posts/d4934e3f/"/>
    <id>http://typeco.cn/posts/d4934e3f/</id>
    <published>2020-04-12T03:16:56.000Z</published>
    <updated>2020-04-12T09:58:00.847Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>我们都知道函数都是存放在栈上，由系统帮我们管理，那么栈到底是一种什么样的数据结构呢？它是如何管理数据的？ 日常开发中我们或许并没有直接的用上栈这种数据结构，但是它却能帮我们解决一些很棘手的问题，这篇文章主要分享一下个人对栈的理解以及如何用 <strong>c</strong>去实现一个栈的结构<a id="more"></a>。本文涉及的代码可以前往 <a href="https://github.com/SanLiangSan/mydemo" target="_blank" rel="noopener">示例代码</a> 处查看。</p><h2 id="栈结构"><a href="#栈结构" class="headerlink" title="栈结构"></a>栈结构</h2><p>栈结构就像一个桶一样，我们可以往桶里边塞东西，但是往往后塞进去的东西会在最上面，所以当我们取东西的时候往往先取出最后放进去的东西，如图:</p><img src="https://s1.ax1x.com/2020/04/12/GL3dQx.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>我们知道栈其实也是一种线性结构，接下来我们从两种逻辑来实现它，<strong><code>顺序存储</code></strong>  和 <strong><code>链式存储</code></strong> 。</p><h2 id="顺序栈"><a href="#顺序栈" class="headerlink" title="顺序栈"></a>顺序栈</h2><p>顺序存储通常都要借助于数组，因为数组中的数据在内存中都是连续的，为了方便我们对于栈的查询以及遍历，我们加入一个指向栈顶的元素 <strong>top</strong>, 那么其数据结构应该是这样：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;Status;<br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;Data;<br><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;data[MAXSIZE];<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;top;<br>}Stack;<br></code></pre></div><p>其结构很简单，用一个数组能保存栈中每个位置的数据，然后用一个 <strong>top</strong> 来记录当前栈的顶位于何处，这样我们就能通过一系列的方法对栈进行操作。</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs kotlin" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;初始化空栈</span><br>Status&nbsp;InitStack&nbsp;(Stack&nbsp;*S)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;S-&gt;top&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;清空栈</span><br>Status&nbsp;ClearStack&nbsp;(Stack&nbsp;*S)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;S-&gt;top&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;判断是否为空栈</span><br>bool&nbsp;IsEmpty(Stack&nbsp;S)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(S.top&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">true</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">false</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;返回栈长度</span><br>int&nbsp;StackLength(Stack&nbsp;s)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;s.top+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;获取栈顶元素</span><br>Status&nbsp;GetStackTop(Stack&nbsp;S,Data&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(S.top&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>)<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>&nbsp;=&nbsp;S.<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>[S.top];<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;入栈</span><br>Status&nbsp;PushData(Stack&nbsp;*S,Data&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(S-&gt;top&nbsp;==&nbsp;MAXSIZE<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;top&nbsp;=&nbsp;S-&gt;top+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;S-&gt;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>[top]&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;S-&gt;top++;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;出栈</span><br>Status&nbsp;Pop(Stack&nbsp;*S,Data&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(S-&gt;top&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>&nbsp;=&nbsp;S-&gt;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>[S-&gt;top];<br>&nbsp;&nbsp;&nbsp;&nbsp;S-&gt;top--;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;从栈底到栈顶打印栈</span><br>Status&nbsp;PrintStack(Stack&nbsp;S)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(S.top&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"空栈&nbsp;\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(int&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;=&nbsp;S.top;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d--"</span>,S.<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>[i]);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><p><strong>验证</strong></p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;argc,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;argv[])</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;insert&nbsp;code&nbsp;here...</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Stack&nbsp;S;<br>&nbsp;&nbsp;&nbsp;&nbsp;InitStack(&amp;S);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushData(&amp;S,&nbsp;i);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;PrintStack(S);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;Pop(&amp;S,&nbsp;&amp;data);<br>&nbsp;&nbsp;&nbsp;&nbsp;PrintStack(S);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"出栈的数据是：&nbsp;%d&nbsp;\n"</span>,data);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;GetStackTop(S,&nbsp;&amp;data);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"栈顶的数据是：&nbsp;%d&nbsp;\n"</span>,data);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br>------------------------打印数据<br>栈中数据是：<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-2</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-3</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-4</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-5</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-6</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-7</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-8</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-9</span>--<br>栈中数据是：<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-2</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-3</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-4</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-5</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-6</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-7</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-8</span>--<br>出栈的数据是：&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">9</span>&nbsp;<br>栈顶的数据是：&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">8</span>&nbsp;<br></code></pre></div><p>有几个小细节点需要我们注意：</p><ul><li>线性栈的置空不用清空每个位置的数据，只需要修改 <strong>top</strong> 即可</li><li>返回栈的长度不用判断 <strong>top = -1</strong> 的情况，因为 <strong>-1+1 = 0</strong> 其最终结果是一样的</li></ul><p>其实通过上述实现我们可以发现，栈的处理核心逻辑在于 <strong>top</strong> 的处理。</p><h2 id="链式栈"><a href="#链式栈" class="headerlink" title="链式栈"></a>链式栈</h2><p>分析了顺序栈之后我们再来看看链式栈，顾名思义，链式栈用的结构就是链式存储，内部必不可少的用到指针，其在内存中不是连续的，靠的是指针的指向，所以其数据结构可以是这样：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;栈中每个位置的数据</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Node</span>&nbsp;{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*next;<br>}&nbsp;Node;<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;栈的结构</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*top;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;栈顶节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;count;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;栈的数据量</span><br>}&nbsp;Stack;<br></code></pre></div><p>这里的链式栈的结构就由一个 <strong>指向栈顶的指针</strong> 和其 <strong>数据长度</strong> 构成，栈的指针指向栈顶，由上往下通过 <strong>next</strong> 指针相连，看起来应该是这样：</p><img src="https://s1.ax1x.com/2020/04/12/GLjOoj.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>根据前面几篇文章链表的相关内容，我们很容易写出它的相关方法：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;创建一个空栈</span><br>Status&nbsp;InitStack(Stack&nbsp;*S)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;S-&gt;top&nbsp;=&nbsp;(Node&nbsp;*)malloc(sizeof(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!S-&gt;top)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;S-&gt;top&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;S-&gt;count&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;入栈</span><br>Status&nbsp;PushData(Stack&nbsp;*S,&nbsp;Data&nbsp;data)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!S)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*newTop&nbsp;=&nbsp;(Node&nbsp;*)malloc(sizeof(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;newTop-&gt;data&nbsp;=&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;newTop-&gt;next&nbsp;=&nbsp;S-&gt;top;<br>&nbsp;&nbsp;&nbsp;&nbsp;S-&gt;top&nbsp;=&nbsp;newTop;<br>&nbsp;&nbsp;&nbsp;&nbsp;S-&gt;count++;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;出栈</span><br>Status&nbsp;Pop(Stack&nbsp;*S,Data&nbsp;*data)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!S)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;S-&gt;top;<br>&nbsp;&nbsp;&nbsp;&nbsp;S-&gt;top&nbsp;=&nbsp;temp-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;S-&gt;count--;<br>&nbsp;&nbsp;&nbsp;&nbsp;*data&nbsp;=&nbsp;temp-&gt;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;free(temp);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;获取栈顶元素</span><br>Status&nbsp;GetTop(Stack&nbsp;S,Data&nbsp;*data)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(S.count&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;*data&nbsp;=&nbsp;S.top-&gt;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;清空栈</span><br>Status&nbsp;ClearStack(Stack&nbsp;*S)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;S-&gt;top;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(temp)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*target&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;temp-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(target);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;S-&gt;top&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;S-&gt;count&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;从栈顶到栈底打印</span><br>Status&nbsp;PrintStack(Stack&nbsp;S)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(S.count&nbsp;&lt;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"栈的数据从顶到底是："</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;S.top;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(temp)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d&nbsp;-&nbsp;"</span>,temp-&gt;data);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;temp-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><p><strong>验证</strong></p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;argc,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;argv[])</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;insert&nbsp;code&nbsp;here...</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Stack&nbsp;S;<br>&nbsp;&nbsp;&nbsp;&nbsp;InitStack(&amp;S);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(InitStack(&amp;S)&nbsp;==&nbsp;SUCCESS)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;i&nbsp;&lt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushData(&amp;S,&nbsp;i);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;PrintStack(S);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;Pop(&amp;S,&nbsp;&amp;data);<br>&nbsp;&nbsp;&nbsp;&nbsp;PrintStack(S);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"出栈的元素是:&nbsp;%d&nbsp;\n"</span>,data);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;GetTop(S,&nbsp;&amp;data);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"栈顶的元素是:&nbsp;%d&nbsp;\n"</span>,data);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br>---------------------&nbsp;打印数据<br>栈的数据从顶到底是：<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">9</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">8</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">7</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">5</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>&nbsp;-&nbsp;<br>栈的数据从顶到底是：<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">8</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">7</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">5</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>&nbsp;-&nbsp;<br>出栈的元素是:&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">9</span>&nbsp;<br>栈顶的元素是:&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">8</span>&nbsp;<br></code></pre></div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这篇文章主要讲述了栈的结构以及栈的 <strong>顺序存储实现</strong> 和 <strong>链式存储实现</strong> ，希望能够讲述明白。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们都知道函数都是存放在栈上，由系统帮我们管理，那么栈到底是一种什么样的数据结构呢？它是如何管理数据的？ 日常开发中我们或许并没有直接的用上栈这种数据结构，但是它却能帮我们解决一些很棘手的问题，这篇文章主要分享一下个人对栈的理解以及如何用 &lt;strong&gt;c&lt;/strong&gt;去实现一个栈的结构
    
    </summary>
    
    
    
      <category term="数据结构" scheme="http://typeco.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://typeco.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://typeco.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法 - 链表实战</title>
    <link href="http://typeco.cn/posts/3d457867/"/>
    <id>http://typeco.cn/posts/3d457867/</id>
    <published>2020-04-11T09:25:08.000Z</published>
    <updated>2020-04-12T10:00:39.893Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>链表只是一种数据结构，如果要通过数据结构来解决问题那就是算法了，所以这篇文章我们看看如何利用链表的数据结构去解决一些问题。<a id="more"></a> 以下的代码均可 <a href="https://github.com/SanLiangSan/mydemo" target="_blank" rel="noopener">前往下载</a></p><h2 id="合并有序链表"><a href="#合并有序链表" class="headerlink" title="合并有序链表"></a>合并有序链表</h2><blockquote><p>将2个递增的有序链表合并为一个有序链表; 要求结果链表仍然使用两个链表的存储空间,不另外占用其他的存储空间. 表中不允许有重复的数据</p></blockquote><p>其实题目理解起来很简单 ，如果 La = {1,2,3,,6,9} ,Lb = {2,3,4,5,7,10} 那么合并后应该是Lc ={1,2,3,4,6,7,9,10},其规定不另外占用其他存储空间，那么我们就只能使用a，b这两个存储空间做手脚。</p><p>用 pa 和 pb 分别指向 La 和 Lb ，从首元节点开始比较，让Lc指向其中较小的值，并让较小的值依次后移，直到其中一个链表循环完毕，那么如果还有多余的数据，一定是比较大的，直接接在Lc后面即可：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="c language-c hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">MergeList</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(LinkList&nbsp;*La,LinkList&nbsp;*Lb,LinkList&nbsp;*Lc)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;找到首元节点，依次遍历</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*pa&nbsp;=&nbsp;(*La)-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*pb&nbsp;=&nbsp;(*Lb)-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;由于不能开辟新的空间，我们借用La的空间</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*pc&nbsp;=&nbsp;*La;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;pc是一个局部变量&nbsp;保存的是Lc的尾节点，每次都指向两个值中的最小值，如果相等则保持其一，删除释放另外一个</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(pa&nbsp;&amp;&amp;&nbsp;pb)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(pa-&gt;data&nbsp;&lt;&nbsp;pb-&gt;data)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pc-&gt;next&nbsp;=&nbsp;pa;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pc&nbsp;=&nbsp;pa;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;这地方相当于pc&nbsp;=&nbsp;pc-&gt;next&nbsp;也就是说pc指针也要后移</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pa&nbsp;=&nbsp;pa-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(pa-&gt;data&nbsp;&gt;&nbsp;pb-&gt;data)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pc-&gt;next&nbsp;=&nbsp;pb;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pc&nbsp;=&nbsp;pb;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pb&nbsp;=&nbsp;pb-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;pb;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pc-&gt;next&nbsp;=&nbsp;pa;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pc&nbsp;=&nbsp;pa;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pa&nbsp;=&nbsp;pa-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pb&nbsp;=&nbsp;pb-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">free</span>(temp);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;最后多余的数据一定是后续最大的</span><br>&nbsp;&nbsp;&nbsp;&nbsp;pc-&gt;next&nbsp;=&nbsp;pa?pa:pb;<br>&nbsp;&nbsp;&nbsp;&nbsp;*Lc&nbsp;=&nbsp;*La;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><p><strong>验证</strong>：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;argc,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;argv[])</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;insert&nbsp;code&nbsp;here...</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"Hello,&nbsp;World!\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;算法题1</span><br>&nbsp;&nbsp;&nbsp;&nbsp;LinkList&nbsp;la,lb,lc;<br>&nbsp;&nbsp;&nbsp;&nbsp;InitList(&amp;la);<br>&nbsp;&nbsp;&nbsp;&nbsp;InitList(&amp;lb);<br>&nbsp;&nbsp;&nbsp;&nbsp;InitList(&amp;lc);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>;&nbsp;i&nbsp;&gt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;--)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ListInsert(&amp;la,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>,&nbsp;i);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"打印la&nbsp;：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;ListTraverse(la);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>;&nbsp;i&nbsp;&gt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>;&nbsp;i-=<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ListInsert(&amp;lb,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>,&nbsp;i);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"打印lb&nbsp;：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;ListTraverse(lb);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;MergeList(&amp;la,&nbsp;&amp;lb,&nbsp;&amp;lc);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"打印lc&nbsp;：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;ListTraverse(lc);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br>-----------------------------打印结果<br>Hello,&nbsp;World!<br>打印la&nbsp;：<br><span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">5</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>&nbsp;&nbsp;<br>打印lb&nbsp;：<br><span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">8</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>&nbsp;&nbsp;<br>打印lc&nbsp;：<br><span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">5</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">8</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>&nbsp;&nbsp;<br>Program&nbsp;ended&nbsp;with&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">exit</span>&nbsp;code:&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span><br></code></pre></div><h2 id="求交集"><a href="#求交集" class="headerlink" title="求交集"></a>求交集</h2><blockquote><p> 已知两个链表A和B分别表示两个集合.其元素递增排列. 设计一个算法,用于求出A与B的交集,并存储在A链表中;</p></blockquote><p> 例如:  La = {2,4,6,8}; Lb = {4,6,8,10};  <code>=&gt;</code>  Lc = {4,6,8}</p><p>其实思路跟上面那道题差不多，也是用两个指针从前往后依次遍历，具体看代码，内部有详细注释</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Status&nbsp;Intersection(LinkList&nbsp;*La,LinkList&nbsp;*Lb,LinkList&nbsp;*Lc)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*pa&nbsp;=&nbsp;(*La)-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*pb&nbsp;=&nbsp;(*Lb)-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*pc&nbsp;=&nbsp;*La;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(pa&nbsp;&amp;&amp;&nbsp;pb)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;每次碰到小的就过滤掉并释放</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(pa-&gt;data&nbsp;&lt;&nbsp;pb-&gt;data)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;pa;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pa&nbsp;=&nbsp;pa-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(temp);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(pa-&gt;data&nbsp;&gt;&nbsp;pb-&gt;data)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;pb;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pb&nbsp;=&nbsp;pb-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(temp);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;碰到相等的保留其中一个并释放另外一个</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pc-&gt;next&nbsp;=&nbsp;pa;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pc&nbsp;=&nbsp;pc-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pa&nbsp;=&nbsp;pa-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;pb;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pb&nbsp;=&nbsp;pb-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(temp);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;要额外判断多余的情况</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(pa)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;pa;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pa&nbsp;=&nbsp;pa-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(temp);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(pb)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;pb;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pb&nbsp;=&nbsp;pb-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(temp);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;*Lc&nbsp;=&nbsp;*La;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><p><strong>验证</strong>：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs perl" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;main(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;argc,&nbsp;const&nbsp;char&nbsp;*&nbsp;argv[])&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;LinkList&nbsp;la,lb,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">lc</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;InitList(&amp;la);<br>&nbsp;&nbsp;&nbsp;&nbsp;InitList(&amp;lb);<br>&nbsp;&nbsp;&nbsp;&nbsp;InitList(&amp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">lc</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>;&nbsp;i&nbsp;&gt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;--)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ListInsert(&amp;la,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>,&nbsp;i);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"打印la&nbsp;：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;ListTraverse(la);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>;&nbsp;i&nbsp;&gt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>;&nbsp;i-=<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ListInsert(&amp;lb,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>,&nbsp;i);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"打印lb&nbsp;：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;ListTraverse(lb);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Intersection(&amp;la,&nbsp;&amp;lb,&nbsp;&amp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">lc</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"打印lc&nbsp;：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;ListTraverse(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">lc</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br>---------------------------&nbsp;打印结果<br>打印la&nbsp;：<br><span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">5</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>&nbsp;&nbsp;<br>打印lb&nbsp;：<br><span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">8</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>&nbsp;&nbsp;<br>打印&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">lc</span>&nbsp;：<br><span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>&nbsp;&nbsp;<br></code></pre></div><h2 id="链表倒序"><a href="#链表倒序" class="headerlink" title="链表倒序"></a>链表倒序</h2><blockquote><p>设计一个算法,将链表中所有节点的链接方向”原地旋转”,即要求仅仅利用原表的存储空间. 换句话说,要求算法空间复杂度为O(1);</p></blockquote><p>这里的空间复杂度 <code>O(1)</code> 其实也是一样，不允许新的辅助空间，所以我们还是要在原有的链表基础上做手脚。</p><p>之前的文章中我们讲过链表的初始化有两种方式：<strong><code>头插法</code></strong> 和 <strong><code>尾插法</code></strong> ，最后我们发现尾插法跟我们日常逻辑差不多，  而头插法却是倒序的：因为先插入的结点为表尾,后插入的结点为表头,即可实现链表的逆转;：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">void&nbsp;Inverse(LinkList&nbsp;*L)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;&nbsp;头插法每次要插入的节点，初始是首元节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*target&nbsp;=&nbsp;(*L)-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*tNext;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;为了让链表的尾结点指向NULL</span><br>&nbsp;&nbsp;&nbsp;&nbsp;(*L)-&gt;next&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(target)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;每次让tNext保存target之后的数据</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tNext&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target-&gt;next&nbsp;=&nbsp;(*L)-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*L)-&gt;next&nbsp;=&nbsp;target;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target&nbsp;=&nbsp;tNext;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre></div><p><strong>验证</strong></p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;argc,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;argv[])</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;LinkList&nbsp;la,lb,lc;<br>&nbsp;&nbsp;&nbsp;&nbsp;InitList(&amp;la);<br>&nbsp;&nbsp;&nbsp;&nbsp;InitList(&amp;lb);<br>&nbsp;&nbsp;&nbsp;&nbsp;InitList(&amp;lc);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>;&nbsp;i&nbsp;&gt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;--)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ListInsert(&amp;la,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>,&nbsp;i);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"打印la&nbsp;：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;ListTraverse(la);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Inverse(&amp;la);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"打印la&nbsp;：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;ListTraverse(la);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br>------------------------------------打印结果<br>打印la&nbsp;：<br><span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">5</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>&nbsp;&nbsp;<br>打印la&nbsp;：<br><span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">5</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>&nbsp;&nbsp;<br>Program&nbsp;ended&nbsp;with&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">exit</span>&nbsp;code:&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span><br></code></pre></div><h2 id="删除指定范围的节点"><a href="#删除指定范围的节点" class="headerlink" title="删除指定范围的节点"></a>删除指定范围的节点</h2><blockquote><p>设计一个算法,删除递增有序链表中值大于等于mink且小于等于maxk(mink,maxk是给定的两个参数,其值可以和表中的元素相同,也可以不同)的所有元素</p></blockquote><p>其实思路很简单，找到左边最后一个小于mink的节点，以及找到右边第一个大于maxk的节点。</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">void&nbsp;DeleteDataRange(LinkList&nbsp;*L,&nbsp;int&nbsp;min,int&nbsp;max)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*p&nbsp;=&nbsp;(*L)-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*left&nbsp;=&nbsp;*L,*right=<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;找到左边节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(p&nbsp;&amp;&amp;&nbsp;p-&gt;data&nbsp;&lt;&nbsp;min)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left&nbsp;=&nbsp;p;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;p-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;找到右边节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(p&nbsp;&amp;&amp;&nbsp;p-&gt;data&nbsp;&lt;=&nbsp;max)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right&nbsp;=&nbsp;p;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;p-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;right&nbsp;=&nbsp;right-&gt;next;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;左边节点指向右边节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;left-&gt;next&nbsp;=&nbsp;right;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;临时保存要删除的节点进行释放</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;left-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(temp&nbsp;&amp;&amp;&nbsp;temp&nbsp;!=&nbsp;right)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*del&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;temp-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(del);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre></div><p><strong>验证</strong></p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;argc,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;argv[])</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;LinkList&nbsp;la,lb,lc;<br>&nbsp;&nbsp;&nbsp;&nbsp;InitList(&amp;la);<br>&nbsp;&nbsp;&nbsp;&nbsp;InitList(&amp;lb);<br>&nbsp;&nbsp;&nbsp;&nbsp;InitList(&amp;lc);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>;&nbsp;i&nbsp;&gt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;--)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ListInsert(&amp;la,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>,&nbsp;i);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"打印la&nbsp;：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;ListTraverse(la);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;DeleteDataRange(&amp;la,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"打印la&nbsp;：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;ListTraverse(la);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br>---------------------打印结果<br>打印la&nbsp;：<br><span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">5</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>&nbsp;&nbsp;<br>打印la&nbsp;：<br><span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">5</span>&nbsp;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>&nbsp;&nbsp;<br></code></pre></div><h2 id="调整次序"><a href="#调整次序" class="headerlink" title="调整次序"></a>调整次序</h2><blockquote><p> 设将n(n&gt;1)个整数存放到一维数组R中, 试设计一个在时间和空间两方面都尽可能高效的算法;将R中保存的序列循环左移p个位置(0&lt;p&lt;n)个位置, 即将R中的数据由(x0,x1,……,xn-1)变换为(xp,xp+1,…,xn-1,x0,x1,…,xp-1)</p></blockquote><p><strong>阿西吧！</strong>，这段描述完全看不懂有没有，其实简化一下是这样：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; background: rgb(27, 24, 24); color: rgb(138, 133, 133); padding: 0.5em; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">&nbsp;例如:<br>&nbsp;pre[10]&nbsp;=&nbsp;{0,1,2,3,4,5,6,7,8,9},<br>&nbsp;n&nbsp;=&nbsp;10,p&nbsp;=&nbsp;3;<br>&nbsp;pre[10]&nbsp;=&nbsp;{3,4,5,6,7,8,9,0,1,2}<br></code></pre></div><p>数组循环往左移动多少位，左边位置固定，超出的移到数组后面。注意：有的同学可能会想我用两个指针指向链表的两个位置进行重新排列就好了啊，这里题目中要求是数组而不是链表，所以不能用链表的方法去解决问题。</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;将数组指定范围的数据进行倒序</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Reverse</span>&nbsp;<span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;*<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">array</span>,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;left,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;right&nbsp;)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;left,j&nbsp;=&nbsp;right&nbsp;;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;首位对调</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(i&nbsp;&lt;&nbsp;j)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">array</span>[i];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">array</span>[i]&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">array</span>[j];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">array</span>[j]&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;i右移&nbsp;&nbsp;j左移</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j--;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//将长度为n的数组pre&nbsp;中的数据循环左移p个位置</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">LeftShift</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;*pre,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;n,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;p)</span></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;比如&nbsp;{1,2,3,4,5}&nbsp;向左移2位</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(p&nbsp;&gt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>&nbsp;&amp;&amp;&nbsp;p&nbsp;&lt;&nbsp;n)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;整个数组数据全部倒序&nbsp;{5,4,3,2,1}</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reverse(pre,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>,&nbsp;n<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;前部分倒序&nbsp;{3,4,5,2,1}</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reverse(pre,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>,&nbsp;n-p<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;后部分倒序&nbsp;{3,4,5,1,2}</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reverse(pre,&nbsp;n-p,&nbsp;n<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre></div><p>其实就是反复利用倒序的函数对数组进行调整,这里就不做验证了，请自行去验证一下即可。</p><h2 id="找元素"><a href="#找元素" class="headerlink" title="找元素"></a>找元素</h2><blockquote><p> 已知一个整数序列A = (a0,a1,a2,…an-1),其中(0&lt;= ai &lt;=n),(0&lt;= i&lt;=n). 若存在ap1= ap2 = …= apm = x,且m&gt;n/2(0&lt;=pk&lt;n,1&lt;=k&lt;=m),则称x 为 A的主元素. 例如,A = (0,5,5,3,5,7,5,5),则5是主元素; 若B = (0,5,5,3,5,1,5,7),则A 中没有主元素,假设A中的n个元素保存在一个一维数组中,请设计一个尽可能高效的算法,找出数组元素中的主元素,若存在主元素则输出该元素,否则输出-1.</p></blockquote><p>其实有点像消消乐的算法，找到当前符合规定的元素，如果存在输出（消消乐消除），不存在返回-1。题目中提示尽可能高效，意思就是优先满足时间复杂度，所以我们可以考虑用空间换时间。</p><p> 题目分析: 主元素,是数组中的出现次数超过一半的元素; 当数组中存在主元素时,所有非主元素的个数和必少于一半. 如果让主元素和一个非主元素配对, 则最后多出来的元素(没有元素与之匹配就是主元素.</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">MainElement</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;*A,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;n)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;count&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;key&nbsp;=&nbsp;A[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;temp&nbsp;=&nbsp;A[i];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(temp&nbsp;==&nbsp;key)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count&nbsp;++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(count&nbsp;&gt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count&nbsp;--;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;keyNum&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(count&nbsp;&gt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(A[i]&nbsp;==&nbsp;key)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyNum++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;keyNum&nbsp;&gt;&nbsp;n/<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;?&nbsp;key:<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;<br>}<br></code></pre></div><h2 id="链表去重"><a href="#链表去重" class="headerlink" title="链表去重"></a>链表去重</h2><blockquote><p>用单链表保存m个整数, 结点的结构为(data,link),且|data|&lt;=n(n为正整数). 现在要去设计一个时间复杂度尽可能高效的算法. 对于链表中的data 绝对值相等的结点, 仅保留第一次出现的结点,而删除其余绝对值相等的结点.例如,链表A = {21,-15,15,-7,15}, 删除后的链表A={21,-15,-7}</p></blockquote><p>题目分析:</p><p>  要求设计一个时间复杂度尽量高效的算法,而已知|data|&lt;=n, 所以可以考虑用空间换时间的方法. 申请一个空间大小为n+1(0号单元不使用)的辅助数组. 保存链表中已出现的数值,通过对链表进行一趟扫描来完成删除.</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">DeleteEqualNode</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(LinkList&nbsp;*L,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;n)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;*p&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>)*n);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*(p+i)&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;r&nbsp;指向头节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*r&nbsp;=&nbsp;*L;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;首元节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;(*L)-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(temp)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ListData&nbsp;absData&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">abs</span>(temp-&gt;data);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(p[absData]&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)&nbsp;{<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;说明已经有值了</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r-&gt;next&nbsp;=&nbsp;temp-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">free</span>(temp);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p[absData]&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;temp-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre></div><p>其实相当于把数字的绝对值作为数组下标保存起来，内部的值只有0和1，这样就可以遍历的过程中直接取值进行比较，速度会非常快，无非就是初始化的时候需要一个大小为n的数组空间</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上就是最近学习的链表相关的知识运用以及相关的问题解答，后续有相关的题目还会陆续更新。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;链表只是一种数据结构，如果要通过数据结构来解决问题那就是算法了，所以这篇文章我们看看如何利用链表的数据结构去解决一些问题。
    
    </summary>
    
    
    
      <category term="数据结构" scheme="http://typeco.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://typeco.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://typeco.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法 - 双向链表</title>
    <link href="http://typeco.cn/posts/9336f4e5/"/>
    <id>http://typeco.cn/posts/9336f4e5/</id>
    <published>2020-04-09T13:49:13.000Z</published>
    <updated>2020-04-11T07:40:04.415Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>之前的 <a href="https://typeco.cn/posts/490f9e50/">一篇文展</a> 我们讲述了单链表的概念和实现，我们知道单向链表只有一个方向的，每一个节点只能找到其直接后继节点也就是 <strong>next</strong> 指针，当我们要找到一个节点只能从单链表头处循环判断，在我们需要直接找到一个节点的前驱节点的时候，我们就需要扩展我们的数据结构让其支持这种逻辑<a id="more"></a>，其大概结构是：</p><img src="https://s1.ax1x.com/2020/04/09/GInuGj.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>这样我们就很容易写出其数据结构:</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Node</span>&nbsp;{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Node</span>&nbsp;*<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">prior</span>;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;ListData&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Node</span>&nbsp;*<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">next</span>;</span><br>}&nbsp;Node;<br></code></pre></div><h2 id="双向链表"><a href="#双向链表" class="headerlink" title="双向链表"></a>双向链表</h2><p>双向链表最终会展示成这样子（本篇文章默认都是 <strong>带头节点的链表</strong>）：</p><img src="https://s1.ax1x.com/2020/04/09/GInKRs.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><ul><li>除尾节点外，每一个节点的的 <strong>prior指针</strong> 都指向前一个节点</li><li>除头节点外，每一个节点的 <strong>next指针</strong> 都指向后一个节点</li></ul><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>同样我们还是使用尾插法来初始化指定数值的双向链表</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Node&nbsp;*&nbsp;InitList(int&nbsp;total)&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//创建头节点&nbsp;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">list</span>&nbsp;=&nbsp;(Node&nbsp;*)malloc(sizeof(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">list</span>&nbsp;==&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">list</span>-&gt;prior&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">list</span>-&gt;next&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">list</span>-&gt;data&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*target&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">list</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(int&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;i&nbsp;&lt;=&nbsp;total;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;(Node&nbsp;*)malloc(sizeof(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;data&nbsp;=&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;prior&nbsp;=&nbsp;target;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;next&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target-&gt;next&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">list</span>;<br>}<br></code></pre></div><h3 id="打印"><a href="#打印" class="headerlink" title="打印"></a>打印</h3><p>打印方法就比较简单了</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;打印链表</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">PrintList</span>&nbsp;<span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(Node&nbsp;*<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>&nbsp;==&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"啥都没有\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*target&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(target&nbsp;==&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"链表为空&nbsp;\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(target)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d&nbsp;-&nbsp;"</span>,target-&gt;data);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"\n"</span>);<br>}<br></code></pre></div><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><img src="https://s1.ax1x.com/2020/04/09/GI1gFf.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>找到要插入的前一个节点 <strong>target</strong>，比如我们要插入顺序3的位置，那么就要找位置2的节点</p><ol><li>新节点 <strong>Temp</strong> 的 <strong>next</strong> 指向  <strong>target</strong> 的 <strong>next</strong></li><li>新节点 <strong>Temp</strong>的 <strong>prior</strong> 指向 <strong>target</strong></li><li><strong>target</strong> 的 <strong>next</strong> 指向 <strong>Temp</strong></li><li><strong>target-&gt; next</strong> 的 <strong>prior</strong> 指向 <strong>Temp</strong></li></ol><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;指定位置插入节点</span><br>Status&nbsp;InserListData(Node&nbsp;**<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">list</span>,int&nbsp;location,&nbsp;ListData&nbsp;data)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*target&nbsp;=&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">list</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i&nbsp;;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;找到要插入的前一个节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;i&nbsp;&lt;&nbsp;location&nbsp;&amp;&amp;&nbsp;target;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;(Node&nbsp;*)malloc(sizeof(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;data&nbsp;=&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;next&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;prior&nbsp;=&nbsp;target;<br>&nbsp;&nbsp;&nbsp;&nbsp;target-&gt;next&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;next-&gt;prior&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><img src="https://s1.ax1x.com/2020/04/09/GI1lQJ.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><ol><li>找到要删除的节点，并用 <strong>target</strong> 对齐进行保留</li><li><strong>target</strong> 前驱节点的 <strong>next</strong> 指向 <strong>target</strong> 的 后驱节点</li><li><strong>target</strong> 后驱节点的 <strong>prior</strong> 指向 <strong>target</strong> 的 前驱节点</li><li>释放 <strong>target</strong></li></ol><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;删除指定位置的节点</span><br>Status&nbsp;DeleteData(Node&nbsp;**<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">list</span>,int&nbsp;location,&nbsp;ListData&nbsp;*data)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(location&nbsp;&lt;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*target&nbsp;=&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">list</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;找到要删除的节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;location&nbsp;&amp;&amp;&nbsp;target&nbsp;!=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(i&nbsp;&gt;&nbsp;location&nbsp;||&nbsp;target&nbsp;==&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;target-&gt;prior-&gt;next&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(target-&gt;next&nbsp;!=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target-&gt;next-&gt;prior&nbsp;=&nbsp;target-&gt;prior;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;*data&nbsp;=&nbsp;target-&gt;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;free(target);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><p>当然你也可以用另外一个变量保存要删除节点的前驱节点，这里因为考虑是双向链表，单单一个要删除的节点变量就够用了。</p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;argc,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;argv[])</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;insert&nbsp;code&nbsp;here...</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"Hello,&nbsp;World!\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>&nbsp;=&nbsp;InitList(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"打印双向链表:&nbsp;\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;PrintList(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;InserListData(&amp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">998</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"第2个位置插入998之后打印:&nbsp;\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;PrintList(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;ListData&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;Status&nbsp;status&nbsp;=&nbsp;DeleteData(&amp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>,&amp;data);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"删除第二个位置的节点之后打印:&nbsp;\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;PrintList(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(status&nbsp;==&nbsp;SUCCESS)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"被删除的数字是:&nbsp;%d\n"</span>,data);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br>-----------------------------&nbsp;打印数据<br>Hello,&nbsp;World!<br>打印双向链表:&nbsp;<br><span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>&nbsp;-&nbsp;<br>第<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>个位置插入<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">998</span>之后打印:&nbsp;<br><span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">998</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>&nbsp;-&nbsp;<br>删除第二个位置的节点之后打印:&nbsp;<br><span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;-&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>&nbsp;-&nbsp;<br>被删除的数字是:&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">998</span><br>Program&nbsp;ended&nbsp;with&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">exit</span>&nbsp;code:&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span><br></code></pre></div><h2 id="双向循环链表"><a href="#双向循环链表" class="headerlink" title="双向循环链表"></a>双向循环链表</h2><p>跟单向循环链表一样，双向循环链表其实节点结构不变，只是首尾相连而已，其大致像这样：</p><img src="https://s1.ax1x.com/2020/04/11/G7HLs1.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>那么我们初始化一个空的双向循环链表应该是这样：</p><img src="https://s1.ax1x.com/2020/04/11/GHNnN4.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:70%;" /><p>这里图形逻辑同双向链表差不多，我们不做过多的图形展示，以下仅以代码概述。</p><h3 id="循环链表初始化"><a href="#循环链表初始化" class="headerlink" title="循环链表初始化"></a>循环链表初始化</h3><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;SUCCESS&nbsp;1</span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;ERROR&nbsp;0</span><br><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;ListData;<br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;Status;<br><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Node</span>&nbsp;{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Node</span>&nbsp;*<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">prior</span>;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;ListData&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Node</span>&nbsp;*<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">next</span>;</span><br>}&nbsp;Node;<br><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;Node*&nbsp;LinkList;<br><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">CreatList</span>&nbsp;<span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(LinkList&nbsp;*L,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;n)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;*L&nbsp;=&nbsp;(LinkList)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!*L)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;LinkList&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>&nbsp;=&nbsp;*L;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*target&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;自己指向自己</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>-&gt;next&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>-&gt;prior&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;新增数据</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;i&nbsp;&lt;=&nbsp;n;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;(Node&nbsp;*)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;data&nbsp;=&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;next&nbsp;=&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>-&gt;prior&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target-&gt;next&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;prior&nbsp;=&nbsp;target;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><p>初始化的时候，我们注意空链表的时候创建的头节点都指向自己即可，其他新加的数据都默认采用后插法插入到链表中。</p><h3 id="循环链表插入节点"><a href="#循环链表插入节点" class="headerlink" title="循环链表插入节点"></a>循环链表插入节点</h3><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Status&nbsp;InsertData(LinkList&nbsp;*L,int&nbsp;location,&nbsp;ListData&nbsp;data)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;找到要插入位置的前一个位置的节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*target&nbsp;=&nbsp;*L;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!target)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;i&nbsp;&lt;&nbsp;location&nbsp;&amp;&amp;&nbsp;target-&gt;next&nbsp;!=&nbsp;*L;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;超出范围</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(i&nbsp;&lt;&nbsp;location)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;(Node&nbsp;*)malloc(sizeof(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!temp)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;data&nbsp;=&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;next&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;next-&gt;prior&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;target-&gt;next&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;prior&nbsp;=&nbsp;target;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><p>思路依旧是找到要插入节点的前一个节点，然后通过后插法的逻辑来进行插入数据，细节方面就是要注意超出范围的判断以及循环的时候到尾节点就结束了，不能绕圈圈。</p><h3 id="循环链表删除节点"><a href="#循环链表删除节点" class="headerlink" title="循环链表删除节点"></a>循环链表删除节点</h3><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Status&nbsp;DeleteData(LinkList&nbsp;*L,int&nbsp;location,&nbsp;ListData&nbsp;*data)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(*L&nbsp;==&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*target&nbsp;=&nbsp;(*L)-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;如果只剩下首元节点，直接清空*L</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(target-&gt;next&nbsp;==&nbsp;*L)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(*L);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*L)&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(int&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;i&nbsp;&lt;=&nbsp;location&nbsp;&amp;&amp;&nbsp;target-&gt;next&nbsp;!=&nbsp;*L;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;target-&gt;prior-&gt;next&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;target-&gt;next-&gt;prior&nbsp;=&nbsp;target-&gt;prior;<br>&nbsp;&nbsp;&nbsp;&nbsp;*data&nbsp;=&nbsp;target-&gt;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;free(target);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><p>删除节点这里有个细节就是如果只剩下 <strong><code>首元节点</code></strong> 就对链表进行清空，注意这里不是头节点，而是判断首元节点。</p><h3 id="打印循环链表"><a href="#打印循环链表" class="headerlink" title="打印循环链表"></a>打印循环链表</h3><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs perl" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Status&nbsp;PrintList(LinkList&nbsp;L)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(L&nbsp;==&nbsp;NULL)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"空链表"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"双向循环链表的内容:&nbsp;"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*target&nbsp;=&nbsp;L-&gt;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">next</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(target&nbsp;!=&nbsp;L)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d--"</span>,target-&gt;data);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target&nbsp;=&nbsp;target-&gt;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">next</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;argc,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;argv[])</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;insert&nbsp;code&nbsp;here...</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"Hello,&nbsp;World!\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;LinkList&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;CreatList(&amp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"初始化带10个数据的双向循环链表的数据是：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;PrintList(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;InsertData(&amp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">44</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"第三个位置插入44后打印：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;PrintList(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;InsertData(&amp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">20</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">999</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"第20个位置插入999后打印：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;PrintList(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;ListData&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;DeleteData(&amp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>,&nbsp;&amp;data);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"删除第3个节点之后打印：\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;PrintList(<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">list</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"删除的数据是：%d&nbsp;\n"</span>,data);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br>---------------------------------打印结果<br>Hello,&nbsp;World!<br>初始化带<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>个数据的双向循环链表的数据是：<br>双向循环链表的内容:&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-2</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-3</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-4</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-5</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-6</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-7</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-8</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-9</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-10</span>--<br>第三个位置插入<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">44</span>后打印：<br>双向循环链表的内容:&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-2</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-44</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-3</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-4</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-5</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-6</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-7</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-8</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-9</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-10</span>--<br>第<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">20</span>个位置插入<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">999</span>后打印：<br>双向循环链表的内容:&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-2</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-44</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-3</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-4</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-5</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-6</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-7</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-8</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-9</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-10</span>--<br>删除第<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>个节点之后打印：<br>双向循环链表的内容:&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-2</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-3</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-4</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-5</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-6</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-7</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-8</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-9</span>-<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-10</span>--<br>删除的数据是：<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">44</span>&nbsp;<br>Program&nbsp;ended&nbsp;with&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">exit</span>&nbsp;code:&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span><br></code></pre></div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>双向链表和双向循环链表的节点在结构上是一模一样的，不同之处就是一个首尾相连构成一个闭环，希望这篇文章能够将双向链表的逻辑和实现讲清楚，还望不吝赐教。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前的 &lt;a href=&quot;https://typeco.cn/posts/490f9e50/&quot;&gt;一篇文展&lt;/a&gt; 我们讲述了单链表的概念和实现，我们知道单向链表只有一个方向的，每一个节点只能找到其直接后继节点也就是 &lt;strong&gt;next&lt;/strong&gt; 指针，当我们要找到一个节点只能从单链表头处循环判断，在我们需要直接找到一个节点的前驱节点的时候，我们就需要扩展我们的数据结构让其支持这种逻辑
    
    </summary>
    
    
    
      <category term="数据结构" scheme="http://typeco.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://typeco.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://typeco.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法 - 单链表</title>
    <link href="http://typeco.cn/posts/490f9e50/"/>
    <id>http://typeco.cn/posts/490f9e50/</id>
    <published>2020-04-02T15:08:34.000Z</published>
    <updated>2020-04-12T14:36:33.687Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>对于非空的线性表和线性结构，具有以下特点：</p><ul><li>存在唯一的一个被称作  <strong><code>第一个</code></strong> 的数据元素</li><li>存在唯一的一个被称作  <strong><code>最后一个</code></strong> 的数据元素 <a id="more"></a></li><li>除了第一个元素以外，其他每个数据元素都有 <strong><code>一个前驱</code></strong></li><li>除了最后一个元素以外，其他每个数据元素都有 <strong><code>一个后继</code></strong></li></ul><p>线性表是最基本也是最常用的一种线性结构，同时它也是其他数据结构的基础。尤其是 <strong>单链表</strong> ，这篇文章主要讲述一下单链表的结构以及如何用 <strong>C语言</strong> 实现一个单链表。<a href="https://github.com/SanLiangSan/mydemo" target="_blank" rel="noopener">下载代码</a></p><img src="https://s1.ax1x.com/2020/04/03/GtcEZj.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><h2 id="单链表的实现"><a href="#单链表的实现" class="headerlink" title="单链表的实现"></a>单链表的实现</h2><p>单链表是一种线性数据结构，我们考察的主要是它的初始化、添加、删除、遍历等方法.</p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><img src="https://s1.ax1x.com/2020/04/03/Gt2kUs.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>单向链表是由一个个节点组成的，每一个节点都包含一个数据段和指针段，数据段主要保存节点的相关信息，指针段主要保存后继节点的地址。</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;ERROR&nbsp;0</span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;TRUE&nbsp;1</span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;FAILURE&nbsp;0</span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(254, 128, 25); word-wrap: inherit !important; word-break: inherit !important;">#<span class="hljs-meta-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">define</span>&nbsp;SUCCESS&nbsp;1</span><br><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;Status;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;Status是函数的类型,其值是函数结果状态代码，如&nbsp;SUCCESS、FAILURE等&nbsp;*/</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;ListData;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*&nbsp;ListData类型根据实际情况而定，这里假设为int&nbsp;*/</span><br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;定义节点</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Node</span>{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;ListData&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Node</span>&nbsp;*<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">next</span>;</span><br>}Node;<br><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">typedef</span>&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Node</span>&nbsp;*<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">LinkList</span>;</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;初始化单链表</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">InitList</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(LinkList&nbsp;*L)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;*L&nbsp;=&nbsp;(LinkList)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(*L&nbsp;==&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;(*L)-&gt;next&nbsp;=&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><h3 id="添加节点"><a href="#添加节点" class="headerlink" title="添加节点"></a>添加节点</h3><p>既然链表的节点已经定义而且链表的数据结构已经初始化，接下来我们看看如何去添加元素，这里我们看两种情况：</p><ul><li><p><strong>不带头节点的单链表</strong></p><img src="https://s1.ax1x.com/2020/04/05/GryNl9.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /></li></ul><p>如图所示，我们要对单链表进行插入操作的时候要进行额外判断，如果要在首元节点之前添加节点，就要挪动List指针，如果其他位置则不用。</p><ul><li><p><strong>带头节点的单链表</strong></p><img src="https://s1.ax1x.com/2020/04/05/GDNYOe.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /></li></ul><p>这里带头节点的插入就很简单了，所有的地方一视同仁，而不需要额外去操作链表的指针。PS：其中头节点中的信息我们不需要关心，因为它相当于我们默认放进去的一个节点。</p><p>所以后续我们使用的单链表默认 <strong><code>添加头节点</code></strong>。</p><p>我们要插入节点，就要对链表进行修改，那么我们需要把 <strong><code>链表的指针</code></strong> 作为参数传入。</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;location&nbsp;from&nbsp;1...</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">InsertNode</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(LinkList&nbsp;*L,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;location,ListData&nbsp;data)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;找到需要location-1位置的节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*pre&nbsp;=&nbsp;*L;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;因为0位置被头节点占了，所以要从1位置开始</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;currentLocation&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(pre&nbsp;&amp;&amp;&nbsp;currentLocation&nbsp;&lt;&nbsp;location)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre&nbsp;=&nbsp;pre-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentLocation&nbsp;++;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!pre&nbsp;||&nbsp;currentLocation&nbsp;&lt;&nbsp;location)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;根据data生成一个新节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*insertNode&nbsp;=&nbsp;(Node&nbsp;*)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;insertNode-&gt;data&nbsp;=&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;让新节点的next&nbsp;指向&nbsp;pre-&gt;next</span><br>&nbsp;&nbsp;&nbsp;&nbsp;insertNode-&gt;next&nbsp;=&nbsp;pre-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;让前一个节点的next指向新节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;pre-&gt;next&nbsp;=&nbsp;insertNode;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><p>此处逻辑跟图上一一对应，接下来我们要验证就要打印链表每个位置的值，我们添加一个打印的方法，我们只是打印链表，没必要把传递指针。</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs perl" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">//&nbsp;打印方法&nbsp;我们不用修改链表&nbsp;无需传指针<br>Status&nbsp;printList&nbsp;(LinkList&nbsp;L)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;LinkList&nbsp;p&nbsp;=&nbsp;L-&gt;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">next</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(p)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d\n"</span>,p-&gt;data);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;p-&gt;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">next</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><p>我们验证一下：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;argc,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;argv[])</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;LinkList&nbsp;L;<br>&nbsp;&nbsp;&nbsp;&nbsp;Status&nbsp;status&nbsp;=&nbsp;InitList(&amp;L);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"s&nbsp;is&nbsp;%d\n"</span>,status);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;插入元素</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>;&nbsp;i&nbsp;&gt;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;i&nbsp;--)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InsertNode(&amp;L,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>,&nbsp;i);<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;此处1表示，总是从头节点后面插入新节点，也就是头插法，比较简单，因为尾插法还要保留链表长度</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;打印链表</span><br>&nbsp;&nbsp;&nbsp;&nbsp;printList(L);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br></code></pre></div><p>打印结果如下：</p><img src="https://s1.ax1x.com/2020/04/05/GrmJ2R.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:70%;" /><h3 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h3><p>结果如我们所愿，链表创建以及插入读取都正常，接下来我们看看链表是如何删除节点的：</p><img src="https://s1.ax1x.com/2020/04/03/GtcVds.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><ul><li>创建临时变量指向我们即将删除的节点，一方面为了找到下一个节点，另外一个方面为了释放内存，否则就内存泄漏了。</li><li>直接将临时变量的上一个节点直接指向临时变量的下一个节点</li><li>释放临时变量</li></ul><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs kotlin" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Status&nbsp;DeleteNode&nbsp;(LinkList&nbsp;*L&nbsp;,int&nbsp;location,ListData&nbsp;*deleteData)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*pre&nbsp;=&nbsp;*L;<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;currentLocation&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;还是找到location-1位置的节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(pre&nbsp;&amp;&amp;&nbsp;currentLocation&nbsp;&lt;&nbsp;location)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre&nbsp;=&nbsp;pre-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentLocation++;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!pre&nbsp;||&nbsp;currentLocation&nbsp;&lt;&nbsp;location)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;创建临时变量&nbsp;保存即将被删除的节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;pre-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!temp)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;前驱节点指向后驱节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;pre-&gt;next&nbsp;=&nbsp;temp-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;将我们删除的内容返回出去</span><br>&nbsp;&nbsp;&nbsp;&nbsp;*deleteData&nbsp;=&nbsp;temp-&gt;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;释放内存</span><br>&nbsp;&nbsp;&nbsp;&nbsp;free(temp);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//在main方法中添加如下代码验证</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;删除第五个节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;ListData&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;DeleteNode(&amp;L,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">5</span>,&nbsp;&amp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"删除第五个元素后的链表是&nbsp;:\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;printList(L);<br>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"被删除的值是&nbsp;%d\n"</span>,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">data</span>);<br></code></pre></div><img src="https://s1.ax1x.com/2020/04/05/GrK7zd.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:70%;" /><h3 id="清空单链表"><a href="#清空单链表" class="headerlink" title="清空单链表"></a>清空单链表</h3><img src="https://s1.ax1x.com/2020/04/05/GrJ8vF.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><ol><li>指针指向首元节点 <strong>注意不是头节点</strong> ，并将该节点释放</li><li>指针偏移到下一个节点 <strong>中间节点</strong></li><li>释放下一个节点 <strong>中间节点</strong></li><li>指针以此类推到 <strong>尾节点</strong></li><li>释放 <strong>尾结点</strong></li><li>头节点指向 <strong>NULL</strong> 此处如果不处理，头节点的 next就是 <strong>野指针</strong>了</li></ol><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Status&nbsp;clearList(LinkList&nbsp;*L)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;由于第一个是头节点，我们从第二个节点开始删除，这个地方可以根据实际情况来</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*pre&nbsp;=&nbsp;(*L)-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*nextNode;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(pre)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;用一个临时变量保存当前要删除的节点指向的下一个节点，有点像递归的意思</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextNode&nbsp;=&nbsp;pre-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;释放</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(pre);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;将要删除的指针偏移到下一个指针</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre&nbsp;=&nbsp;nextNode;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;此处将头节点指向NULL&nbsp;，否则就出现野指针了</span><br>&nbsp;&nbsp;&nbsp;&nbsp;(*L)-&gt;next&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><h3 id="头插法初始化"><a href="#头插法初始化" class="headerlink" title="头插法初始化"></a>头插法初始化</h3><p>根据名字就知道了，从表头处添加节点，之前一篇文章 <a href="https://typeco.cn/posts/9b4341e4/">@synchronized底层探索</a> 里的数据结构用的就是哈希表，内部就是通过头插法进行操作的。</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">InitFromHead</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(LinkList&nbsp;*L,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;n)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;*L&nbsp;=&nbsp;(LinkList)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(*L&nbsp;==&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;(*L)-&gt;next&nbsp;=&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*pre&nbsp;=&nbsp;*L;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;i&nbsp;&lt;=&nbsp;n;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;(Node&nbsp;*)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;data&nbsp;=&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;next&nbsp;=&nbsp;pre-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre-&gt;next&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;在main中添加如下，会倒序打印30---1&nbsp;就是头插法</span><br>&nbsp;&nbsp;&nbsp;&nbsp;clearList(&amp;L);<br>&nbsp;&nbsp;&nbsp;&nbsp;InitFromHead(&amp;L,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">30</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"链表是&nbsp;:\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;printList(L);<br></code></pre></div><p>上述打印结果会从30<strong>倒序</strong>到1，足以证明是头插法。</p><h3 id="尾插法初始化"><a href="#尾插法初始化" class="headerlink" title="尾插法初始化"></a>尾插法初始化</h3><p>尾插法就是从链表尾部依次插入数据，这样就跟我们平常的数组的逻辑差不多了，相当于<strong>addObject</strong>,这里跟头插法不同的是，头插法依赖头节点，此处依赖尾节点，所以我们要用一个临时的指针指向尾结点并依次保存。</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">InitFromTail</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(LinkList&nbsp;*L,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;n)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;*L&nbsp;=&nbsp;(LinkList)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(*L&nbsp;==&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;初始化的时候尾结点就是头节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*tail&nbsp;=&nbsp;*L;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;i&nbsp;&lt;=&nbsp;n;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;(Node&nbsp;*)<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">malloc</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;data&nbsp;=&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;next&nbsp;=&nbsp;<span class="hljs-literal" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tail-&gt;next&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;尾节点偏移</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tail&nbsp;=&nbsp;tail-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;在main函数中添加如下代码</span><br>&nbsp;&nbsp;&nbsp;&nbsp;clearList(&amp;L);<br>&nbsp;&nbsp;&nbsp;&nbsp;InitFromTail(&amp;L,&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">30</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"链表是&nbsp;:\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;printList(L);<br></code></pre></div><p>如此尾插法，打印就会按照增序打印从1到30。</p><h3 id="尾插法的比较"><a href="#尾插法的比较" class="headerlink" title="尾插法的比较"></a>尾插法的比较</h3><p>我又把方法稍微变化了一下，添加了一个从尾部添加节点的方法，这样把元素的添加放到外围，内部只关心需要从链表尾部添加什么节点即可:</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;尾部添加节点</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">Status&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">AddNodeToTheTail</span>(<span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">LinkList&nbsp;*L,ListData&nbsp;data</span>)&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;*L;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(temp-&gt;next)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;temp-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!temp)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">add</span>&nbsp;=&nbsp;(Node&nbsp;*)malloc(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">sizeof</span>(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">add</span>-&gt;data&nbsp;=&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">add</span>-&gt;next&nbsp;=&nbsp;NULL;<br>&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;next&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">add</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;main函数中添加如下代码</span><br>&nbsp;&nbsp;&nbsp;&nbsp;clearList(&amp;L);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">20</span>;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AddNodeToTheTail(&amp;L,&nbsp;i);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"链表是&nbsp;:\n"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;printList(L);<br></code></pre></div><p>但是细心的观察你会发现，这个往链表尾部添加节点的方法的关键点在于先要找到尾节点，无非是通过循环直到找到一个节点的 <strong><code>next</code></strong> 是 <strong>NULL</strong> ,对于这个方法如果要初始化一个包含100个数字的的链表就要循环1+2+3+….+100 = 5050次，而用它上面那个函数添加的话只用循环100次，这个函数的时间复杂度是<code>n*(n+1)/2</code> 即是 <code>O(n^2)</code> 而上面那个是 <code>O(n)</code>,所以这个方法只能针对初始化之后需要从尾部额外添加一个节点使用。</p><h2 id="单向循环链表"><a href="#单向循环链表" class="headerlink" title="单向循环链表"></a>单向循环链表</h2><p>看到 <strong><code>循环</code></strong> 两个字我们就大概知道了，就是所有的节点组成一个 <strong><code>闭合的环</code></strong>，看起来应该是这样：</p><img src="https://s1.ax1x.com/2020/04/09/GISjfO.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /><p>因为上面的单链表我们选用了使用头节点的方式，下面我没使用不带头节点的方式实现单向循环链表。具体以代码体现，其原理跟单向链表差不多，有不清楚的结合单向链表的图连接首位即可。</p><h3 id="初始化-1"><a href="#初始化-1" class="headerlink" title="初始化"></a>初始化</h3><p>这里我们采用符合我们正常逻辑的尾插法来实现单向循环链表的初始化，因为我们使用不带头节点的方式，这里我们就要对链表的首元节点进行判断：</p><ul><li>首元节点不存在，初始化并创建赋值给链表地址</li><li>存在即找到当前链表的尾节点，依次插入后续节点</li></ul><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;输入的方式尾插法创建单向循环链表</span><br>Status&nbsp;InitList(LinkList&nbsp;*L)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;number;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*tail&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>&nbsp;(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d"</span>,&amp;number);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;输入0结束创建</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(number&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">break</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(*L&nbsp;==&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*L&nbsp;=&nbsp;(LinkList)malloc(sizeof(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(*L&nbsp;==&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*L)-&gt;data&nbsp;=&nbsp;number;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(*L)-&gt;next&nbsp;=&nbsp;*L;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tail&nbsp;=&nbsp;*L;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//找尾结点&nbsp;&nbsp;方法1</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(tail&nbsp;=&nbsp;*L;&nbsp;tail-&gt;next&nbsp;!=&nbsp;*L;&nbsp;tail&nbsp;=&nbsp;tail-&gt;next);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;(Node&nbsp;*)malloc(sizeof(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!temp)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;data&nbsp;=&nbsp;number;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp-&gt;next&nbsp;=&nbsp;*L;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tail-&gt;next&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(tail&nbsp;==&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//方法2</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*node&nbsp;=&nbsp;(Node&nbsp;*)malloc(sizeof(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(!node)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node-&gt;data&nbsp;=&nbsp;number;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node-&gt;next&nbsp;=&nbsp;*L;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tail-&gt;next&nbsp;=&nbsp;node;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tail&nbsp;=&nbsp;tail-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><p>上述我们找尾节点展示了两种方法：</p><ul><li><p>方法①：每次从首元节点依次循环直至找到 <code>节点的next = 首元节点</code> 即是当前的尾结点。</p></li><li><p>方法②：用一个临时变量指向尾节点（初始化的时候尾结点指向首元节点），每次插入新节点，临时变量进行偏移继续指向尾结点。</p><p>显然方法②的时间复杂度更小一点 <code>O(n)</code>，方法①每插入一个新数据都要循环遍历整个链表其时间复杂度是<code>O(n^2)</code> 。</p></li></ul><h3 id="插入节点"><a href="#插入节点" class="headerlink" title="插入节点"></a>插入节点</h3><p>插入节点的逻辑其实跟单向链表差不多，无非就是指针的一些指向，但是这里要注意一些细节点：</p><ul><li><p>插入新的首元节点，就要找到尾节点，然后尾节点指向新首元节点，新首元节点指向原首元节点，链表地址指向新首元节点。</p></li><li><p>其他地方同单向链表逻辑</p></li></ul><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">void&nbsp;InsertNode(LinkList&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">List</span>,int&nbsp;location,&nbsp;ListData&nbsp;data)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;创建待插入节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*insertNode&nbsp;=&nbsp;(Node&nbsp;*)malloc(sizeof(Node));<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(insertNode&nbsp;==&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;insertNode-&gt;data&nbsp;=&nbsp;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;insertNode-&gt;next&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(location&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;找到最后一个节点即尾结点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*tail&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(tail&nbsp;=&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">List</span>;&nbsp;tail-&gt;next&nbsp;!=&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">List</span>;&nbsp;tail&nbsp;=&nbsp;tail-&gt;next);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;insertNode-&gt;next&nbsp;=&nbsp;tail-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tail-&gt;next&nbsp;=&nbsp;insertNode;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">List</span>&nbsp;=&nbsp;insertNode;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*preNode&nbsp;=&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">List</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;找到插入位置的的前一个节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(int&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;preNode-&gt;next&nbsp;!=&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">List</span>&nbsp;&amp;&amp;&nbsp;i&nbsp;!=&nbsp;location<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;&nbsp;preNode&nbsp;=&nbsp;preNode-&gt;next,i++);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;insertNode-&gt;next&nbsp;=&nbsp;preNode-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preNode-&gt;next&nbsp;=&nbsp;insertNode;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre></div> <h3 id="删除节点-1"><a href="#删除节点-1" class="headerlink" title="删除节点"></a>删除节点</h3><p>删除节点同样我们也要对首元节点的处理单独拎出来：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Status&nbsp;DeleteNode(LinkList&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">List</span>,int&nbsp;location,ListData&nbsp;*deleteData)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*temp&nbsp;=&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">List</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(temp&nbsp;==&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>)&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;ERROR;<br>&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*target;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(location&nbsp;==&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>)&nbsp;{<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;删除首元节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;找到尾节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(target&nbsp;=&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">List</span>;&nbsp;target-&gt;next&nbsp;!=&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">List</span>;&nbsp;target&nbsp;=&nbsp;target-&gt;next);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">if</span>&nbsp;(target&nbsp;==&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">List</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target-&gt;next&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">List</span>&nbsp;=&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">NULL</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*deleteData&nbsp;=&nbsp;temp-&gt;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(target);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target-&gt;next&nbsp;=&nbsp;temp-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">List</span>&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*deleteData&nbsp;=&nbsp;temp-&gt;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(temp);<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;找到待删除节点的前一个节点</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target&nbsp;=&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">List</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>,target&nbsp;=&nbsp;*<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">List</span>;&nbsp;i&nbsp;&lt;&nbsp;location<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node&nbsp;*deleteNode&nbsp;=&nbsp;target-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target-&gt;next&nbsp;=&nbsp;deleteNode-&gt;next;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*deleteData&nbsp;=&nbsp;deleteNode-&gt;data;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(deleteNode);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;SUCCESS;<br>}<br></code></pre></div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>至此我们 <strong><code>单链表</code></strong> 、<strong><code>单向循环链表</code></strong> 的一系列方法都已实现，<strong><code>使用头节点</code></strong>、<strong><code>不使用头节点</code></strong> 的方式都有，最后对比我们发现使用头节点让我们对于处理链表的插入数据以及删除数据的处理会更简单，因为没有针对首节点的单独处理，针对此大家可以根据具体情况自行斟酌。其实还有很多方法和实现等着你去发掘，希望这篇文章能将单链表的概念和实现讲清楚。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于非空的线性表和线性结构，具有以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;存在唯一的一个被称作  &lt;strong&gt;&lt;code&gt;第一个&lt;/code&gt;&lt;/strong&gt; 的数据元素&lt;/li&gt;
&lt;li&gt;存在唯一的一个被称作  &lt;strong&gt;&lt;code&gt;最后一个&lt;/code&gt;&lt;/strong&gt; 的数据元素
    
    </summary>
    
    
    
      <category term="数据结构" scheme="http://typeco.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://typeco.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://typeco.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法 - 基础</title>
    <link href="http://typeco.cn/posts/de447e60/"/>
    <id>http://typeco.cn/posts/de447e60/</id>
    <published>2020-04-01T15:10:38.000Z</published>
    <updated>2020-04-12T14:35:23.187Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>程序 = 数据结构 + 算法</p></blockquote><p>其实很多同学知道数据结构与算法很重要，但是却不明觉厉。  这里我们看一个简单的题：<a id="more"></a></p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">对自然数从1到100的求和<br></code></pre></div><p>最简单的设计无非是：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">addNum</span>&nbsp;<span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">()</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;total&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;&nbsp;i&nbsp;&lt;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">100</span>;&nbsp;i&nbsp;++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;total&nbsp;+=&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"total&nbsp;is&nbsp;%d&nbsp;\n"</span>,total);<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;5050</span><br>}<br></code></pre></div><p>没毛病，但是哥根廷的数学家 <code>高斯</code> 在其9岁的时候就发明了一个快速计算等差数列求和的小技巧 （1+100，2+99，3+98…..），总共50 对101，结果5050。其公式可以归纳为：</p><p>​                                                <strong><code>1+2+3+....+n = n*(n+1)/2</code></strong></p><p>不论n多大，我们只用算一次就可以得出结果，而上面的循环却要循环n次，n很小无所谓，如果几万几十万这个时间消耗不言而喻，由此可见数据结构与算法确实很重要。</p><h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><p>数据结构中最基本的5个概念：数据、数据元素、数据项、数据对象，他们整体构成数据结构。</p><img src="https://s1.ax1x.com/2020/03/31/GlQpZT.jpg?w=1336&amp;h=856&amp;f=jpeg&amp;s=141474" alt style="border-radius: 0px 0px 0px 0px; display: block; margin: 10px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: #84A1A2 0px 5px 5px;"><p>比较抽象，我们用代码来展示如下：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Teacher</span>&nbsp;{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*name;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*sex;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;age;<br>};<br><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;argc,&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">const</span>&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">char</span>&nbsp;*&nbsp;argv[])</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Teacher</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">t1</span>;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;数据元素</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">struct</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">Teacher</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">tArray</span>[10];</span>&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;数据对象（&nbsp;一组数据元素组成&nbsp;）</span><br>&nbsp;&nbsp;&nbsp;&nbsp;t1.name&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"Mary"</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;数据项</span><br>&nbsp;&nbsp;&nbsp;&nbsp;t1.sex&nbsp;=&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"female"</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;数据项</span><br>&nbsp;&nbsp;&nbsp;&nbsp;t1.age&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">23</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;数据项</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">return</span>&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;<br>}<br></code></pre></div><blockquote><p>数据元素之间不是独立的，存在特定的关系，这些关系即结构，数据结构指的就是数据对象中数据元素之间的关系。</p></blockquote><h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><p>从视角的不同作以区分，我们将数据结构分为两种类型：<strong>逻辑结构</strong> 和 <strong>物理结构</strong> </p><h3 id="逻辑结构"><a href="#逻辑结构" class="headerlink" title="逻辑结构"></a><strong>逻辑结构</strong></h3><p>逻辑结构分为：<strong>集合结构</strong> 、<strong>线性结构</strong>、<strong>树形结构</strong> 、<strong>图形结构</strong>。</p><ul><li><p><strong>集合结构</strong></p><p>​     <img src="https://s1.ax1x.com/2020/04/02/G8qMFg.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /></p><p>集合结构中的数据元素除了同属一个集合外，彼此之间没有其他关系。</p></li></ul><ul><li><p><strong>线性结构</strong></p><p>​    <img src="https://s1.ax1x.com/2020/04/02/G8qnw8.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /></p><p>线性结构中的数据元素之间都是一对一的关系，从图中也可以看出他们像一条线一样把各个元素连起来，常用的线性结构有：<strong>链表</strong> ，<strong>栈</strong>，<strong>队列</strong> ，<strong>数组</strong> 等等。</p></li><li><p><strong>树形结构</strong></p><p>​    <img src="https://s1.ax1x.com/2020/04/02/G8quTS.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /></p><p>树形结构中的元素是呈现一对多的关系，常见的树有：<strong>二叉树</strong>，<strong>B树</strong>，<strong>哈夫曼树</strong> 等等。</p></li><li><p><strong>图形结构</strong></p><p>​    <img src="https://s1.ax1x.com/2020/04/02/G8q3Ss.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /></p><p>图形结构之间的元素是多对多的关系，常见的图形结构有： <strong>矩阵</strong> 等。</p></li></ul><h3 id="物理结构"><a href="#物理结构" class="headerlink" title="物理结构"></a>物理结构</h3><p>物理结构其实就是存储结构，就是存储到计算机中的形式。数据存储的结构才真正反映了数据存在的样式，也反映了数据元素之间的逻辑关系，如何设计数据的存储以及相互之间的关系才是数据结构的关键。</p><ul><li><p><strong>顺序存储</strong></p><p>​    <img src="https://s1.ax1x.com/2020/04/02/G8qQYQ.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /></p><p>我们知道计算机中的内存都是连续的，如上图所述，1-6个元素按照顺序存储的方式存到内存里，比如第一个元素的内存地址是 <code>0x000001</code> 假设我们这个顺序表中每个元素占1个位置，那么很容易得到第二个元素的地址是 <code>0x000002</code>,以此类推很容易知道第六个元素的地址是 <code>0x000006</code></p></li><li><p><strong>链式存储</strong></p><p>​    <img src="https://s1.ax1x.com/2020/04/02/G8qlWj.jpg?w=255&amp;h=224&amp;f=jpeg&amp;s=7755" style="zoom:50%;" /></p><p>这里我画了一个简单的图，大概描述了一下链式存储在内存中是如何体现的。当我们的元素在内存中是散乱的，也就是他们的地址之间没有一定的规律，这个时候就要靠我们的指针去标记位置了，比如我们把 <code>元素2</code> 的物理地址 <code>0x000019</code> 存储到 <code>元素1</code> 中去，那么每两个元素之间就会有一定的相互绑定的关系，这就是链式存储的基本逻辑。</p></li></ul><blockquote><p>通过上述我们会发现，顺序存储的结构查找会很容易，因为直接按照顺序对应的索引就能对应找到相应的内存地址，而链式存储则不行，不过链式存储的结构对于数据的增删就特别快了，因为他们之间的关系靠的是指针，而不是内存地址的偏移。</p></blockquote><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><p><strong>算法是解决特定问题步骤的描述，在计算机中表现为解决特定问题的一系列代码</strong></p><p>数据结构脱离算法，或者算法脱离数据结构都是无法进行的，因为算法是基于数据结构进行的，只有数据结构而没有算法那么数据结构存在就没有意义了。</p><blockquote><p>程序 = 数据结构 + 算法</p></blockquote><h3 id="算法的特性"><a href="#算法的特性" class="headerlink" title="算法的特性"></a>算法的特性</h3><ul><li>输入输出</li><li>有穷性 ：当然不能是无限循环了…</li><li>确定性 : 每一步都是明确的，不能出现模棱两可选择。</li><li>可行性</li></ul><h3 id="算法的设计要求"><a href="#算法的设计要求" class="headerlink" title="算法的设计要求"></a>算法的设计要求</h3><ul><li>正确性</li><li>可读性</li><li>健壮性</li><li>时间效率高和存储量低 ：其实这才是算法的精髓，研究算法无非就是要提高效率和降低存储。</li></ul><h3 id="时间空间复杂度"><a href="#时间空间复杂度" class="headerlink" title="时间空间复杂度"></a>时间空间复杂度</h3><p>通常我们用程序代码执行的次数作为算法时间复杂度的衡量，通常我们用 <code>大O</code> 法来进行标记。</p><ul><li>用常数1取代运行时间中的所有常数</li><li>各种复杂度相加，只保留最高阶 <code>n+2n+log(n)+n^2</code> —–&gt; <code>n^2</code></li><li>如果最高阶存在且不是1，则去掉这个项相乘的常数 <code>O(5logn) -----&gt; O(logn)</code></li></ul><h4 id="常数阶"><a href="#常数阶" class="headerlink" title="常数阶"></a>常数阶</h4><p>通常用<code>O(1)</code> 来表示</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//1+1+1&nbsp;=&nbsp;3</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">testSum1</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;n)</span></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;sum&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//执行1次</span><br>&nbsp;&nbsp;&nbsp;&nbsp;sum&nbsp;=&nbsp;(<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>+n)*n/<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//执行1次</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"testSum2:%d\n"</span>,sum);<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//执行1次</span><br>}<br></code></pre></div><p>不管n是多少，这个地方都只用执行1次，所以n不会影响其时间复杂度，<code>O(1)</code></p><h4 id="线性阶"><a href="#线性阶" class="headerlink" title="线性阶"></a>线性阶</h4><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">add2</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;x,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;n)</span></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;x+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre></div><p>可以发现这个for循环会执行n次，所以其时间复杂度为 <code>O(n)</code></p><h4 id="对数阶"><a href="#对数阶" class="headerlink" title="对数阶"></a>对数阶</h4><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;count&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">while</span>(count&nbsp;&lt;&nbsp;n){<br>&nbsp;&nbsp;&nbsp;&nbsp;count&nbsp;=&nbsp;count&nbsp;*&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>;<br>}<br></code></pre></div><p>上述算法换个写法就是<code>2^x = n</code> 就可以得到 <code>x = log2n</code>,我们说过常数如果不是1都可以去掉，最终结果就是 <code>O(logn)</code></p><h4 id="平方阶"><a href="#平方阶" class="headerlink" title="平方阶"></a>平方阶</h4><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;x=x+1;&nbsp;执行n*n次</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;<span class="hljs-title" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">add3</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(250, 189, 47); word-wrap: inherit !important; word-break: inherit !important;">(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;x,<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(142, 192, 124); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;n)</span></span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&lt;&nbsp;n;&nbsp;i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>&nbsp;(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;j&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;j&nbsp;&lt;&nbsp;n&nbsp;;&nbsp;j++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x=x+<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre></div><p>外层循环n次，内层循环n次，加在一起就是 <code>n*n = n^2</code> 次,所以其时间复杂度为 <code>O(n^2)</code></p><blockquote><p><code>O(1) &lt; O(logn) &lt; O(n) &lt; O(nlogn) &lt; O(n^2) &lt; O(n^3) &lt; O(2^n) &lt; O(n!) &lt; O(n^n)</code></p></blockquote><p>其实我们只用关注前面的复杂度就行了，如果你的算法时间复杂度像后面的那几位靠齐，也就没啥好说的了，指数级的增长还是蛮恐怖的。</p><h3 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="空间复杂度"></a>空间复杂度</h3><p>算法设计有一个重要原则： <code>空间 时间 权衡</code></p><p>算法的空间负责度是通过计算算法所需的存储空间实现，算法空间复杂度的计算公式是：<strong>s(n) = n(f(n))</strong> 其中n为问题的规模，f(n) 为语句关于n所占存储空间的函数。</p><p>我们通过一个简单的例子大概了解一下空间复杂度：</p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cpp" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;n&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">5</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;a[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>]&nbsp;=&nbsp;{<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">1</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">3</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">4</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">5</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">6</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">7</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">8</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">9</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>};<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//算法实现(1)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;&nbsp;&nbsp;&nbsp;算法(1),仅仅通过借助一个临时变量temp,与问题规模n大小无关,所以其空间复杂度为O(1);<br>&nbsp;&nbsp;&nbsp;&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;n/<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">2</span>&nbsp;;&nbsp;i++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;a[i];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[i]&nbsp;=&nbsp;a[n-i<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[n-i<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>]&nbsp;=&nbsp;temp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;i&nbsp;&lt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d\n"</span>,a[i]);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//算法实现(2)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">/*<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;算法(2),借助一个大小为n的辅助数组b,所以其空间复杂度为O(n).<br>&nbsp;&nbsp;&nbsp;&nbsp;*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;b[<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>]&nbsp;=&nbsp;{<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>};<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;n;i++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i]&nbsp;=&nbsp;a[n-i<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">-1</span>];<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[i]&nbsp;=&nbsp;b[i];<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">for</span>(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;i&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">0</span>;i&nbsp;&lt;&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>;i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">printf</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">"%d\n"</span>,a[i]);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br></code></pre></div><p>需要注意的是：算法的空间复杂度并不是整个算法占用内存的空间，而是该算法在实现的时候所需的辅助空间。</p><p>研究算法的最终目的是要提高程序运行的效率，我们还想降低程序运行所占用的内存等等，这两个一个是时间维度，一个是空间唯独。一个好的算法并不是说一定要时间复杂度低，也不一定要空间占用小，这些东西要根据项目实际情况去均衡。希望这篇文章能够将数据结构与算法的基础知识讲清楚。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;程序 = 数据结构 + 算法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其实很多同学知道数据结构与算法很重要，但是却不明觉厉。  这里我们看一个简单的题：
    
    </summary>
    
    
    
      <category term="数据结构" scheme="http://typeco.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://typeco.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://typeco.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>IOS-Block详解</title>
    <link href="http://typeco.cn/posts/365196ac/"/>
    <id>http://typeco.cn/posts/365196ac/</id>
    <published>2020-03-26T13:28:19.000Z</published>
    <updated>2020-04-09T15:54:51.310Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>说到 <strong><code>Block</code></strong>，我们经常容易想到的就是：<code>copy</code>、<code>循环引用</code>。那么 <code>Block</code> 的本质究竟是什么，为什么要用 <code>copy</code> 来修饰，还有什么情况下会导致循环引用，我们该如何避免。这篇文章带着大家一起探讨一下 <code>Block</code> 的底层实现与使用<a id="more"></a> 。</p><h2 id="Block初探"><a href="#Block初探" class="headerlink" title="Block初探"></a>Block初探</h2><p><code>Block</code> 就是<code>Objective-C</code> 对于 <code>闭包</code>的实现 </p><blockquote><p><code>闭包</code> = 一个函数「或指向函数的指针」 + 该函数执行的外部的上下文变量「也叫自由变量」</p></blockquote><p>通过几个简单的实现来具体看看都有哪些类型的 <code>block</code></p><div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs objectivec" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 15px; font-size: 11px; font-weight: normal; word-spacing: -3px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(40, 40, 40); color: rgb(235, 219, 178); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;Case&nbsp;1</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;(^testBlock)(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">void</span>)&nbsp;=&nbsp;^{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">NSLog</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">@"this&nbsp;is&nbsp;block"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;};<br>&nbsp;&nbsp;&nbsp;&nbsp;testBlock();<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">NSLog</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">@"block&nbsp;is&nbsp;%@"</span>,testBlock);&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;block&nbsp;is&nbsp;&lt;__NSGlobalBlock__:&nbsp;0x10746e118&gt;</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;Case&nbsp;2</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">int</span>&nbsp;a&nbsp;=&nbsp;<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 134, 155); word-wrap: inherit !important; word-break: inherit !important;">10</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">void</span>&nbsp;(^testBlock1)(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(251, 73, 52); word-wrap: inherit !important; word-break: inherit !important;">void</span>)&nbsp;=&nbsp;^{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">NSLog</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">@"a&nbsp;is&nbsp;%d"</span>,a);<br>&nbsp;&nbsp;&nbsp;&nbsp;};<br>&nbsp;&nbsp;&nbsp;&nbsp;testBlock1();<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">NSLog</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">@"block1&nbsp;is&nbsp;%@"</span>,testBlock1);<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;block1&nbsp;is&nbsp;&lt;__NSMallocBlock__:&nbsp;0x6000037c7a80&gt;</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;Case&nbsp;3</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">NSLog</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">@"block&nbsp;copy&nbsp;之前是&nbsp;%@"</span>,^{&nbsp;&nbsp;&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(146, 131, 116); font-style: italic; word-wrap: inherit !important; word-break: inherit !important;">//&nbsp;block&nbsp;copy&nbsp;之前是&nbsp;&lt;__NSStackBlock__:&nbsp;0x7ffee400c7e8&gt;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(131, 165, 152); word-wrap: inherit !important; word-break: inherit !important;">NSLog</span>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(184, 187, 38); word-wrap: inherit !important; word-break: inherit !important;">@"a&nbsp;is&nbsp;%d"</span>,a);<br>&nbsp;&nbsp;&nbsp;&nbsp;});<br></code></pre></div><h2 id="Block定义与使用"><a href="#Block定义与使用" class="headerlink" title="Block定义与使用"></a>Block定义与使用</h2><h2 id="Block与外部变量"><a href="#Block与外部变量" class="headerlink" title="Block与外部变量"></a>Block与外部变量</h2><h2 id="Block与Copy"><a href="#Block与Copy" class="headerlink" title="Block与Copy"></a>Block与Copy</h2><h2 id="Block的循环引用"><a href="#Block的循环引用" class="headerlink" title="Block的循环引用"></a>Block的循环引用</h2><h2 id="值得注意的问题"><a href="#值得注意的问题" class="headerlink" title="值得注意的问题"></a>值得注意的问题</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说到 &lt;strong&gt;&lt;code&gt;Block&lt;/code&gt;&lt;/strong&gt;，我们经常容易想到的就是：&lt;code&gt;copy&lt;/code&gt;、&lt;code&gt;循环引用&lt;/code&gt;。那么 &lt;code&gt;Block&lt;/code&gt; 的本质究竟是什么，为什么要用 &lt;code&gt;copy&lt;/code&gt; 来修饰，还有什么情况下会导致循环引用，我们该如何避免。这篇文章带着大家一起探讨一下 &lt;code&gt;Block&lt;/code&gt; 的底层实现与使用
    
    </summary>
    
    
    
      <category term="IOS" scheme="http://typeco.cn/tags/IOS/"/>
    
      <category term="objective-c" scheme="http://typeco.cn/tags/objective-c/"/>
    
      <category term="Block" scheme="http://typeco.cn/tags/Block/"/>
    
  </entry>
  
</feed>
